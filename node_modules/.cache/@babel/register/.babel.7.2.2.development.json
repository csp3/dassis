{
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _consign = _interopRequireDefault(require(\"consign\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express.default)();\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n(0, _consign.default)({\n  cwd: __dirname\n}).include('libs/config.js').then('db.js').then('libs/middlewares.js').then('routes').then('libs/boot.js').into(app);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImJvZHlQYXJzZXIiLCJyZXF1aXJlIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImN3ZCIsIl9fZGlybmFtZSIsImluY2x1ZGUiLCJ0aGVuIiwiaW50byJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRyx1QkFBWjs7QUFFQSxJQUFJQyxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUNBRixHQUFHLENBQUNHLEdBQUosQ0FBUUYsVUFBVSxDQUFDRyxJQUFYLEVBQVI7QUFDQUosR0FBRyxDQUFDRyxHQUFKLENBQVFGLFVBQVUsQ0FBQ0ksVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBRUEsc0JBQVE7QUFDUEMsRUFBQUEsR0FBRyxFQUFFQztBQURFLENBQVIsRUFHQ0MsT0FIRCxDQUdTLGdCQUhULEVBSUNDLElBSkQsQ0FJTSxPQUpOLEVBS0NBLElBTEQsQ0FLTSxxQkFMTixFQU1DQSxJQU5ELENBTU0sUUFOTixFQU9DQSxJQVBELENBT00sY0FQTixFQVFDQyxJQVJELENBUU1YLEdBUk4iLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGNvbnNpZ24gZnJvbSAnY29uc2lnbic7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7IFxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTsgXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5cclxuY29uc2lnbih7XHJcblx0Y3dkOiBfX2Rpcm5hbWVcclxufSlcclxuLmluY2x1ZGUoJ2xpYnMvY29uZmlnLmpzJylcclxuLnRoZW4oJ2RiLmpzJylcclxuLnRoZW4oJ2xpYnMvbWlkZGxld2FyZXMuanMnKVxyXG4udGhlbigncm91dGVzJylcclxuLnRoZW4oJ2xpYnMvYm9vdC5qcycpIFxyXG4uaW50byhhcHApXHJcbiAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "bodyParser",
        "require",
        "use",
        "json",
        "urlencoded",
        "extended",
        "cwd",
        "__dirname",
        "include",
        "then",
        "into"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACAF,GAAG,CAACG,GAAJ,CAAQF,UAAU,CAACG,IAAX,EAAR;AACAJ,GAAG,CAACG,GAAJ,CAAQF,UAAU,CAACI,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEA,sBAAQ;AACPC,EAAAA,GAAG,EAAEC;AADE,CAAR,EAGCC,OAHD,CAGS,gBAHT,EAICC,IAJD,CAIM,OAJN,EAKCA,IALD,CAKM,qBALN,EAMCA,IAND,CAMM,QANN,EAOCA,IAPD,CAOM,cAPN,EAQCC,IARD,CAQMX,GARN",
      "sourceRoot": "D:\\dassis\\sis\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport consign from 'consign';\r\n\r\nconst app = express();\r\n\r\nvar bodyParser = require('body-parser'); \r\napp.use(bodyParser.json()); \r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\nconsign({\r\n\tcwd: __dirname\r\n})\r\n.include('libs/config.js')\r\n.then('db.js')\r\n.then('libs/middlewares.js')\r\n.then('routes')\r\n.then('libs/boot.js') \r\n.into(app)\r\n "
      ]
    },
    "sourceType": "script",
    "mtime": 1546980582687
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\libs\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\libs\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\libs\\config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\libs\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\libs",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  database: 'dbdas',\n  username: 'root',\n  password: '',\n  params: {\n    host: 'localhost',\n    dialect: 'mysql'\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGF0YWJhc2UiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwicGFyYW1zIiwiaG9zdCIsImRpYWxlY3QiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNoQkMsRUFBQUEsUUFBUSxFQUFFLE9BRE07QUFFaEJDLEVBQUFBLFFBQVEsRUFBRSxNQUZNO0FBR2hCQyxFQUFBQSxRQUFRLEVBQUUsRUFITTtBQUloQkMsRUFBQUEsTUFBTSxFQUFFO0FBQ1BDLElBQUFBLElBQUksRUFBRSxXQURDO0FBRVBDLElBQUFBLE9BQU8sRUFBRTtBQUZGO0FBSlEsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXGxpYnMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuXHRkYXRhYmFzZTogJ2RiZGFzJyxcclxuXHR1c2VybmFtZTogJ3Jvb3QnLFxyXG5cdHBhc3N3b3JkOiAnJyxcclxuXHRwYXJhbXM6IHtcclxuXHRcdGhvc3Q6ICdsb2NhbGhvc3QnLFxyXG5cdFx0ZGlhbGVjdDogJ215c3FsJ1xyXG5cdH1cclxufSAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "module",
        "exports",
        "database",
        "username",
        "password",
        "params",
        "host",
        "dialect"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,QAAQ,EAAE,OADM;AAEhBC,EAAAA,QAAQ,EAAE,MAFM;AAGhBC,EAAAA,QAAQ,EAAE,EAHM;AAIhBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IAAI,EAAE,WADC;AAEPC,IAAAA,OAAO,EAAE;AAFF;AAJQ,CAAjB",
      "sourceRoot": "D:\\dassis\\sis\\src\\libs",
      "sourcesContent": [
        "module.exports = {\r\n\tdatabase: 'dbdas',\r\n\tusername: 'root',\r\n\tpassword: '',\r\n\tparams: {\r\n\t\thost: 'localhost',\r\n\t\tdialect: 'mysql'\r\n\t}\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1550073655418
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar db = null;\n\nmodule.exports = function (app) {\n  var config = app.libs.config;\n\n  if (!db) {\n    var sequelize = new _sequelize.default(config.database, config.username, config.password, config.params);\n    db = {\n      sequelize: sequelize,\n      Sequelize: _sequelize.default,\n      models: {}\n    };\n\n    var dir = _path.default.join(__dirname, 'models');\n\n    _fs.default.readdirSync(dir).forEach(function (filename) {\n      var modelDir = _path.default.join(dir, filename);\n\n      var model = sequelize.import(modelDir);\n      db.models[model.name] = model;\n    });\n\n    Object.keys(db.models).forEach(function (key) {\n      db.models[key].associate(db.models);\n    });\n  }\n\n  return db;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImRiIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImNvbmZpZyIsImxpYnMiLCJzZXF1ZWxpemUiLCJTZXF1ZWxpemUiLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJwYXJhbXMiLCJtb2RlbHMiLCJkaXIiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImZzIiwicmVhZGRpclN5bmMiLCJmb3JFYWNoIiwiZmlsZW5hbWUiLCJtb2RlbERpciIsIm1vZGVsIiwiaW1wb3J0IiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJrZXkiLCJhc3NvY2lhdGUiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxFQUFFLEdBQUcsSUFBVDs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUN2QixNQUFNQyxNQUFNLEdBQUdELEdBQUcsQ0FBQ0UsSUFBSixDQUFTRCxNQUF4Qjs7QUFDQSxNQUFHLENBQUNKLEVBQUosRUFBUTtBQUNQLFFBQU1NLFNBQVMsR0FBRyxJQUFJQyxrQkFBSixDQUNqQkgsTUFBTSxDQUFDSSxRQURVLEVBRWpCSixNQUFNLENBQUNLLFFBRlUsRUFHakJMLE1BQU0sQ0FBQ00sUUFIVSxFQUlqQk4sTUFBTSxDQUFDTyxNQUpVLENBQWxCO0FBT0FYLElBQUFBLEVBQUUsR0FBRztBQUNKTSxNQUFBQSxTQUFTLEVBQVRBLFNBREk7QUFFSkMsTUFBQUEsU0FBUyxFQUFUQSxrQkFGSTtBQUdKSyxNQUFBQSxNQUFNLEVBQUU7QUFISixLQUFMOztBQU1BLFFBQU1DLEdBQUcsR0FBR0MsY0FBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQVo7O0FBQ0FDLGdCQUFHQyxXQUFILENBQWVMLEdBQWYsRUFBb0JNLE9BQXBCLENBQTRCLFVBQUFDLFFBQVEsRUFBSTtBQUN2QyxVQUFNQyxRQUFRLEdBQUdQLGNBQUtDLElBQUwsQ0FBVUYsR0FBVixFQUFlTyxRQUFmLENBQWpCOztBQUNBLFVBQU1FLEtBQUssR0FBR2hCLFNBQVMsQ0FBQ2lCLE1BQVYsQ0FBaUJGLFFBQWpCLENBQWQ7QUFDQXJCLE1BQUFBLEVBQUUsQ0FBQ1ksTUFBSCxDQUFVVSxLQUFLLENBQUNFLElBQWhCLElBQXdCRixLQUF4QjtBQUNBLEtBSkQ7O0FBTUFHLElBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZMUIsRUFBRSxDQUFDWSxNQUFmLEVBQXVCTyxPQUF2QixDQUErQixVQUFBUSxHQUFHLEVBQUk7QUFDckMzQixNQUFBQSxFQUFFLENBQUNZLE1BQUgsQ0FBVWUsR0FBVixFQUFlQyxTQUFmLENBQXlCNUIsRUFBRSxDQUFDWSxNQUE1QjtBQUNBLEtBRkQ7QUFHQTs7QUFFRCxTQUFPWixFQUFQO0FBQ0EsQ0E3QkQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5cclxubGV0IGRiID0gbnVsbDtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuXHRjb25zdCBjb25maWcgPSBhcHAubGlicy5jb25maWc7XHJcblx0aWYoIWRiKSB7XHJcblx0XHRjb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKFxyXG5cdFx0XHRjb25maWcuZGF0YWJhc2UsXHJcblx0XHRcdGNvbmZpZy51c2VybmFtZSxcclxuXHRcdFx0Y29uZmlnLnBhc3N3b3JkLFxyXG5cdFx0XHRjb25maWcucGFyYW1zXHJcblx0XHQpO1xyXG5cdFxyXG5cdFx0ZGIgPSB7XHJcblx0XHRcdHNlcXVlbGl6ZSxcclxuXHRcdFx0U2VxdWVsaXplLFxyXG5cdFx0XHRtb2RlbHM6IHt9XHJcblx0XHR9O1xyXG5cclxuXHRcdGNvbnN0IGRpciA9IHBhdGguam9pbihfX2Rpcm5hbWUsICdtb2RlbHMnKTtcclxuXHRcdGZzLnJlYWRkaXJTeW5jKGRpcikuZm9yRWFjaChmaWxlbmFtZSA9PiB7XHJcblx0XHRcdGNvbnN0IG1vZGVsRGlyID0gcGF0aC5qb2luKGRpciwgZmlsZW5hbWUpO1xyXG5cdFx0XHRjb25zdCBtb2RlbCA9IHNlcXVlbGl6ZS5pbXBvcnQobW9kZWxEaXIpO1xyXG5cdFx0XHRkYi5tb2RlbHNbbW9kZWwubmFtZV0gPSBtb2RlbDtcclxuXHRcdH0pO1xyXG5cclxuXHRcdE9iamVjdC5rZXlzKGRiLm1vZGVscykuZm9yRWFjaChrZXkgPT4ge1xyXG5cdFx0XHRkYi5tb2RlbHNba2V5XS5hc3NvY2lhdGUoZGIubW9kZWxzKTsgXHJcblx0XHR9KTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIGRiO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "db",
        "module",
        "exports",
        "app",
        "config",
        "libs",
        "sequelize",
        "Sequelize",
        "database",
        "username",
        "password",
        "params",
        "models",
        "dir",
        "path",
        "join",
        "__dirname",
        "fs",
        "readdirSync",
        "forEach",
        "filename",
        "modelDir",
        "model",
        "import",
        "name",
        "Object",
        "keys",
        "key",
        "associate"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,EAAE,GAAG,IAAT;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvB,MAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASD,MAAxB;;AACA,MAAG,CAACJ,EAAJ,EAAQ;AACP,QAAMM,SAAS,GAAG,IAAIC,kBAAJ,CACjBH,MAAM,CAACI,QADU,EAEjBJ,MAAM,CAACK,QAFU,EAGjBL,MAAM,CAACM,QAHU,EAIjBN,MAAM,CAACO,MAJU,CAAlB;AAOAX,IAAAA,EAAE,GAAG;AACJM,MAAAA,SAAS,EAATA,SADI;AAEJC,MAAAA,SAAS,EAATA,kBAFI;AAGJK,MAAAA,MAAM,EAAE;AAHJ,KAAL;;AAMA,QAAMC,GAAG,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAZ;;AACAC,gBAAGC,WAAH,CAAeL,GAAf,EAAoBM,OAApB,CAA4B,UAAAC,QAAQ,EAAI;AACvC,UAAMC,QAAQ,GAAGP,cAAKC,IAAL,CAAUF,GAAV,EAAeO,QAAf,CAAjB;;AACA,UAAME,KAAK,GAAGhB,SAAS,CAACiB,MAAV,CAAiBF,QAAjB,CAAd;AACArB,MAAAA,EAAE,CAACY,MAAH,CAAUU,KAAK,CAACE,IAAhB,IAAwBF,KAAxB;AACA,KAJD;;AAMAG,IAAAA,MAAM,CAACC,IAAP,CAAY1B,EAAE,CAACY,MAAf,EAAuBO,OAAvB,CAA+B,UAAAQ,GAAG,EAAI;AACrC3B,MAAAA,EAAE,CAACY,MAAH,CAAUe,GAAV,EAAeC,SAAf,CAAyB5B,EAAE,CAACY,MAA5B;AACA,KAFD;AAGA;;AAED,SAAOZ,EAAP;AACA,CA7BD",
      "sourceRoot": "D:\\dassis\\sis\\src",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nlet db = null;\r\n\r\nmodule.exports = app => {\r\n\tconst config = app.libs.config;\r\n\tif(!db) {\r\n\t\tconst sequelize = new Sequelize(\r\n\t\t\tconfig.database,\r\n\t\t\tconfig.username,\r\n\t\t\tconfig.password,\r\n\t\t\tconfig.params\r\n\t\t);\r\n\t\r\n\t\tdb = {\r\n\t\t\tsequelize,\r\n\t\t\tSequelize,\r\n\t\t\tmodels: {}\r\n\t\t};\r\n\r\n\t\tconst dir = path.join(__dirname, 'models');\r\n\t\tfs.readdirSync(dir).forEach(filename => {\r\n\t\t\tconst modelDir = path.join(dir, filename);\r\n\t\t\tconst model = sequelize.import(modelDir);\r\n\t\t\tdb.models[model.name] = model;\r\n\t\t});\r\n\r\n\t\tObject.keys(db.models).forEach(key => {\r\n\t\t\tdb.models[key].associate(db.models); \r\n\t\t});\r\n\t}\r\n\t\r\n\treturn db;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1546288144000
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Carro.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Carro.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Carro.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Carro.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Carro.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var carros = sequelize.define('carros', {\n    carro_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_constancia: {\n      type: DataTypes.STRING\n    },\n    carro_seriechasis: {\n      type: DataTypes.STRING\n    },\n    carro_modelo: {\n      type: DataTypes.STRING\n    },\n    carro_categoria: {\n      type: DataTypes.STRING\n    },\n    carro_placa: {\n      type: DataTypes.STRING\n    },\n    carro_marca: {\n      type: DataTypes.STRING\n    },\n    carro_ejes: {\n      type: DataTypes.STRING\n    },\n    carro_aniofab: {\n      type: DataTypes.STRING\n    },\n    carro_carga: {\n      type: DataTypes.STRING\n    },\n    carro_motor: {\n      type: DataTypes.STRING\n    },\n    carro_soatfec: {\n      type: DataTypes.STRING\n    },\n    carro_extinfec: {\n      type: DataTypes.STRING\n    },\n    carro_revtecfec: {\n      type: DataTypes.STRING\n    },\n    carro_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  carros.associate = function (models) {\n    // carros.hasMany(models.facturas);\n    carros.hasMany(models.viajes);\n    carros.hasMany(models.gastos);\n    carros.hasMany(models.efectivoviajes);\n    carros.hasMany(models.repuestos);\n    carros.hasMany(models.reparaciones);\n  };\n\n  return carros;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhcnJvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJjYXJyb3MiLCJkZWZpbmUiLCJjYXJyb19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjYXJyb19jb25zdGFuY2lhIiwiU1RSSU5HIiwiY2Fycm9fc2VyaWVjaGFzaXMiLCJjYXJyb19tb2RlbG8iLCJjYXJyb19jYXRlZ29yaWEiLCJjYXJyb19wbGFjYSIsImNhcnJvX21hcmNhIiwiY2Fycm9fZWplcyIsImNhcnJvX2FuaW9mYWIiLCJjYXJyb19jYXJnYSIsImNhcnJvX21vdG9yIiwiY2Fycm9fc29hdGZlYyIsImNhcnJvX2V4dGluZmVjIiwiY2Fycm9fcmV2dGVjZmVjIiwiY2Fycm9fZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJ2aWFqZXMiLCJnYXN0b3MiLCJlZmVjdGl2b3ZpYWplcyIsInJlcHVlc3RvcyIsInJlcGFyYWNpb25lcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxNQUFNLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixRQUFqQixFQUEyQjtBQUN6Q0MsSUFBQUEsUUFBUSxFQUFFO0FBQ1RDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURQO0FBRVRDLE1BQUFBLFVBQVUsRUFBRSxJQUZIO0FBR1RDLE1BQUFBLGFBQWEsRUFBRTtBQUhOLEtBRCtCO0FBTXpDQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNqQkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREMsS0FOdUI7QUFTekNDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQVRzQjtBQVl6Q0UsSUFBQUEsWUFBWSxFQUFFO0FBQ2JQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURILEtBWjJCO0FBZXpDRyxJQUFBQSxlQUFlLEVBQUU7QUFDaEJSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURBLEtBZndCO0FBa0J6Q0ksSUFBQUEsV0FBVyxFQUFFO0FBQ1pULE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURKLEtBbEI0QjtBQXFCekNLLElBQUFBLFdBQVcsRUFBRTtBQUNaVixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFESixLQXJCNEI7QUF3QnpDTSxJQUFBQSxVQUFVLEVBQUU7QUFDWFgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREwsS0F4QjZCO0FBMkJ6Q08sSUFBQUEsYUFBYSxFQUFFO0FBQ2RaLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURGLEtBM0IwQjtBQThCekNRLElBQUFBLFdBQVcsRUFBRTtBQUNaYixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFESixLQTlCNEI7QUFpQ3pDUyxJQUFBQSxXQUFXLEVBQUU7QUFDWmQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREosS0FqQzRCO0FBb0N6Q1UsSUFBQUEsYUFBYSxFQUFFO0FBQ2RmLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURGLEtBcEMwQjtBQXVDekNXLElBQUFBLGNBQWMsRUFBRTtBQUNmaEIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0F2Q3lCO0FBMEN6Q1ksSUFBQUEsZUFBZSxFQUFFO0FBQ2hCakIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0ExQ3dCO0FBNkN6Q2EsSUFBQUEsWUFBWSxFQUFFO0FBQ2JsQixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFESDtBQTdDMkIsR0FBM0IsRUFpRGY7QUFDQ2tCLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBakRlLENBQWY7O0FBcURBdEIsRUFBQUEsTUFBTSxDQUFDdUIsU0FBUCxHQUFtQixVQUFDQyxNQUFELEVBQVk7QUFDOUI7QUFDQXhCLElBQUFBLE1BQU0sQ0FBQ3lCLE9BQVAsQ0FBZUQsTUFBTSxDQUFDRSxNQUF0QjtBQUNBMUIsSUFBQUEsTUFBTSxDQUFDeUIsT0FBUCxDQUFlRCxNQUFNLENBQUNHLE1BQXRCO0FBQ0EzQixJQUFBQSxNQUFNLENBQUN5QixPQUFQLENBQWVELE1BQU0sQ0FBQ0ksY0FBdEI7QUFDQTVCLElBQUFBLE1BQU0sQ0FBQ3lCLE9BQVAsQ0FBZUQsTUFBTSxDQUFDSyxTQUF0QjtBQUNBN0IsSUFBQUEsTUFBTSxDQUFDeUIsT0FBUCxDQUFlRCxNQUFNLENBQUNNLFlBQXRCO0FBQ0EsR0FQRDs7QUFTQSxTQUFPOUIsTUFBUDtBQUNBLENBaEVEIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IGNhcnJvcyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2NhcnJvcycsIHtcclxuXHRcdGNhcnJvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fY29uc3RhbmNpYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fc2VyaWVjaGFzaXM6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX21vZGVsbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fY2F0ZWdvcmlhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjYXJyb19wbGFjYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fbWFyY2E6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX2VqZXM6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX2FuaW9mYWI6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX2NhcmdhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjYXJyb19tb3Rvcjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fc29hdGZlYzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fZXh0aW5mZWM6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX3JldnRlY2ZlYzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fZXN0YWRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0Y2Fycm9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdC8vIGNhcnJvcy5oYXNNYW55KG1vZGVscy5mYWN0dXJhcyk7XHJcblx0XHRjYXJyb3MuaGFzTWFueShtb2RlbHMudmlhamVzKTtcclxuXHRcdGNhcnJvcy5oYXNNYW55KG1vZGVscy5nYXN0b3MpO1xyXG5cdFx0Y2Fycm9zLmhhc01hbnkobW9kZWxzLmVmZWN0aXZvdmlhamVzKTtcclxuXHRcdGNhcnJvcy5oYXNNYW55KG1vZGVscy5yZXB1ZXN0b3MpO1xyXG5cdFx0Y2Fycm9zLmhhc01hbnkobW9kZWxzLnJlcGFyYWNpb25lcyk7XHJcblx0fVxyXG5cdFxyXG5cdHJldHVybiBjYXJyb3M7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Carro.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "carros",
        "define",
        "carro_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_constancia",
        "STRING",
        "carro_seriechasis",
        "carro_modelo",
        "carro_categoria",
        "carro_placa",
        "carro_marca",
        "carro_ejes",
        "carro_aniofab",
        "carro_carga",
        "carro_motor",
        "carro_soatfec",
        "carro_extinfec",
        "carro_revtecfec",
        "carro_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "viajes",
        "gastos",
        "efectivoviajes",
        "repuestos",
        "reparaciones"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACzCC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAD+B;AAMzCC,IAAAA,gBAAgB,EAAE;AACjBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADC,KANuB;AASzCC,IAAAA,iBAAiB,EAAE;AAClBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KATsB;AAYzCE,IAAAA,YAAY,EAAE;AACbP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADH,KAZ2B;AAezCG,IAAAA,eAAe,EAAE;AAChBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAfwB;AAkBzCI,IAAAA,WAAW,EAAE;AACZT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KAlB4B;AAqBzCK,IAAAA,WAAW,EAAE;AACZV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KArB4B;AAwBzCM,IAAAA,UAAU,EAAE;AACXX,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADL,KAxB6B;AA2BzCO,IAAAA,aAAa,EAAE;AACdZ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KA3B0B;AA8BzCQ,IAAAA,WAAW,EAAE;AACZb,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KA9B4B;AAiCzCS,IAAAA,WAAW,EAAE;AACZd,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KAjC4B;AAoCzCU,IAAAA,aAAa,EAAE;AACdf,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KApC0B;AAuCzCW,IAAAA,cAAc,EAAE;AACfhB,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAvCyB;AA0CzCY,IAAAA,eAAe,EAAE;AAChBjB,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KA1CwB;AA6CzCa,IAAAA,YAAY,EAAE;AACblB,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AA7C2B,GAA3B,EAiDf;AACCkB,IAAAA,UAAU,EAAE;AADb,GAjDe,CAAf;;AAqDAtB,EAAAA,MAAM,CAACuB,SAAP,GAAmB,UAACC,MAAD,EAAY;AAC9B;AACAxB,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACE,MAAtB;AACA1B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACG,MAAtB;AACA3B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACI,cAAtB;AACA5B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACK,SAAtB;AACA7B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACM,YAAtB;AACA,GAPD;;AASA,SAAO9B,MAAP;AACA,CAhED",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst carros = sequelize.define('carros', {\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_constancia: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_seriechasis: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_modelo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_categoria: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_placa: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_marca: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_ejes: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_aniofab: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_carga: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_motor: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_soatfec: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_extinfec: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_revtecfec: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tcarros.associate = (models) => {\r\n\t\t// carros.hasMany(models.facturas);\r\n\t\tcarros.hasMany(models.viajes);\r\n\t\tcarros.hasMany(models.gastos);\r\n\t\tcarros.hasMany(models.efectivoviajes);\r\n\t\tcarros.hasMany(models.repuestos);\r\n\t\tcarros.hasMany(models.reparaciones);\r\n\t}\r\n\t\r\n\treturn carros;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1555449536960
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Cliente.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Cliente.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Cliente.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Cliente.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Cliente.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var clientes = sequelize.define('clientes', {\n    cliente_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    cliente_nombre: {\n      type: DataTypes.STRING\n    },\n    cliente_apepat: {\n      type: DataTypes.STRING\n    },\n    cliente_apemat: {\n      type: DataTypes.STRING\n    },\n    cliente_dniruc: {\n      type: DataTypes.STRING\n    },\n    cliente_fecing: {\n      type: DataTypes.STRING\n    },\n    cliente_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  clientes.associate = function (models) {\n    clientes.hasMany(models.documentos);\n    clientes.hasMany(models.viajes);\n    clientes.hasMany(models.facturas);\n  };\n\n  return clientes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImNsaWVudGVzIiwiZGVmaW5lIiwiY2xpZW50ZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjbGllbnRlX25vbWJyZSIsIlNUUklORyIsImNsaWVudGVfYXBlcGF0IiwiY2xpZW50ZV9hcGVtYXQiLCJjbGllbnRlX2RuaXJ1YyIsImNsaWVudGVfZmVjaW5nIiwiY2xpZW50ZV9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsImRvY3VtZW50b3MiLCJ2aWFqZXMiLCJmYWN0dXJhcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM3Q0MsSUFBQUEsVUFBVSxFQUFFO0FBQ1hDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURMO0FBRVhDLE1BQUFBLFVBQVUsRUFBRSxJQUZEO0FBR1hDLE1BQUFBLGFBQWEsRUFBRTtBQUhKLEtBRGlDO0FBTTdDQyxJQUFBQSxjQUFjLEVBQUU7QUFDZkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FONkI7QUFTN0NDLElBQUFBLGNBQWMsRUFBRTtBQUNmTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERCxLQVQ2QjtBQVk3Q0UsSUFBQUEsY0FBYyxFQUFFO0FBQ2ZQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURELEtBWjZCO0FBZTdDRyxJQUFBQSxjQUFjLEVBQUU7QUFDZlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FmNkI7QUFrQjdDSSxJQUFBQSxjQUFjLEVBQUU7QUFDZlQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FsQjZCO0FBcUI3Q0ssSUFBQUEsY0FBYyxFQUFFO0FBQ2ZWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQUREO0FBckI2QixHQUE3QixFQXlCakI7QUFDQ1UsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0F6QmlCLENBQWpCOztBQTZCQWQsRUFBQUEsUUFBUSxDQUFDZSxTQUFULEdBQXFCLFVBQUNDLE1BQUQsRUFBWTtBQUNoQ2hCLElBQUFBLFFBQVEsQ0FBQ2lCLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0UsVUFBeEI7QUFDQWxCLElBQUFBLFFBQVEsQ0FBQ2lCLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0csTUFBeEI7QUFDQW5CLElBQUFBLFFBQVEsQ0FBQ2lCLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0ksUUFBeEI7QUFDQSxHQUpEOztBQU1BLFNBQU9wQixRQUFQO0FBQ0EsQ0FyQ0QiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgY2xpZW50ZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdjbGllbnRlcycsIHtcclxuXHRcdGNsaWVudGVfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX25vbWJyZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LCBcclxuXHRcdGNsaWVudGVfYXBlcGF0OiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2FwZW1hdDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2xpZW50ZV9kbmlydWM6IHsgXHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2ZlY2luZzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2xpZW50ZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgIH0pO1xyXG5cclxuXHRjbGllbnRlcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcblx0XHRjbGllbnRlcy5oYXNNYW55KG1vZGVscy5kb2N1bWVudG9zKTtcclxuXHRcdGNsaWVudGVzLmhhc01hbnkobW9kZWxzLnZpYWplcyk7XHJcblx0XHRjbGllbnRlcy5oYXNNYW55KG1vZGVscy5mYWN0dXJhcyk7XHJcblx0fVxyXG5cdCBcclxuXHRyZXR1cm4gY2xpZW50ZXM7IFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Cliente.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "clientes",
        "define",
        "cliente_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "cliente_nombre",
        "STRING",
        "cliente_apepat",
        "cliente_apemat",
        "cliente_dniruc",
        "cliente_fecing",
        "cliente_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "documentos",
        "viajes",
        "facturas"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC7CC,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADL;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KADiC;AAM7CC,IAAAA,cAAc,EAAE;AACfJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAN6B;AAS7CC,IAAAA,cAAc,EAAE;AACfN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAT6B;AAY7CE,IAAAA,cAAc,EAAE;AACfP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAZ6B;AAe7CG,IAAAA,cAAc,EAAE;AACfR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAf6B;AAkB7CI,IAAAA,cAAc,EAAE;AACfT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAlB6B;AAqB7CK,IAAAA,cAAc,EAAE;AACfV,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AArB6B,GAA7B,EAyBjB;AACCU,IAAAA,UAAU,EAAE;AADb,GAzBiB,CAAjB;;AA6BAd,EAAAA,QAAQ,CAACe,SAAT,GAAqB,UAACC,MAAD,EAAY;AAChChB,IAAAA,QAAQ,CAACiB,OAAT,CAAiBD,MAAM,CAACE,UAAxB;AACAlB,IAAAA,QAAQ,CAACiB,OAAT,CAAiBD,MAAM,CAACG,MAAxB;AACAnB,IAAAA,QAAQ,CAACiB,OAAT,CAAiBD,MAAM,CAACI,QAAxB;AACA,GAJD;;AAMA,SAAOpB,QAAP;AACA,CArCD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst clientes = sequelize.define('clientes', {\r\n\t\tcliente_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcliente_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t}, \r\n\t\tcliente_apepat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_apemat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_dniruc: { \r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_fecing: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tclientes.associate = (models) => {\r\n\t\tclientes.hasMany(models.documentos);\r\n\t\tclientes.hasMany(models.viajes);\r\n\t\tclientes.hasMany(models.facturas);\r\n\t}\r\n\t \r\n\treturn clientes; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550939606406
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Documento.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Documento.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Documento.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Documento.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Documento.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var documentos = sequelize.define('documentos', {\n    documento_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    documento_tipoclipro: {\n      type: DataTypes.STRING\n    },\n    documento_nro: {\n      type: DataTypes.STRING\n    },\n    documento_feccrea: {\n      type: DataTypes.STRING\n    },\n    documento_contenido: {\n      type: DataTypes.STRING\n    },\n    documento_pago: {\n      type: DataTypes.DECIMAL\n    },\n    documento_pagoTotal: {\n      type: DataTypes.DECIMAL\n    },\n    documento_feccan: {\n      type: DataTypes.STRING\n    },\n    documento_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  documentos.associate = function (models) {\n    documentos.hasMany(models.tramites);\n    documentos.belongsTo(models.clientes, {\n      foreignKey: 'cliente_id',\n      targetKey: 'cliente_id'\n    });\n    documentos.belongsTo(models.proveedores, {\n      foreignKey: 'proveedor_id',\n      targetKey: 'proveedor_id'\n    });\n    documentos.belongsTo(models.tipodocumentos, {\n      foreignKey: 'tipodocumento_id',\n      targetKey: 'tipodocumento_id'\n    });\n  };\n\n  return documentos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRvY3VtZW50by5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiZG9jdW1lbnRvcyIsImRlZmluZSIsImRvY3VtZW50b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJkb2N1bWVudG9fdGlwb2NsaXBybyIsIlNUUklORyIsImRvY3VtZW50b19ucm8iLCJkb2N1bWVudG9fZmVjY3JlYSIsImRvY3VtZW50b19jb250ZW5pZG8iLCJkb2N1bWVudG9fcGFnbyIsIkRFQ0lNQUwiLCJkb2N1bWVudG9fcGFnb1RvdGFsIiwiZG9jdW1lbnRvX2ZlY2NhbiIsImRvY3VtZW50b19lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsInRyYW1pdGVzIiwiYmVsb25nc1RvIiwiY2xpZW50ZXMiLCJmb3JlaWduS2V5IiwidGFyZ2V0S2V5IiwicHJvdmVlZG9yZXMiLCJ0aXBvZG9jdW1lbnRvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxVQUFVLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixZQUFqQixFQUErQjtBQUNqREMsSUFBQUEsWUFBWSxFQUFFO0FBQ2JDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURIO0FBRWJDLE1BQUFBLFVBQVUsRUFBRSxJQUZDO0FBR2JDLE1BQUFBLGFBQWEsRUFBRTtBQUhGLEtBRG1DO0FBTTdDQyxJQUFBQSxvQkFBb0IsRUFBRTtBQUNuQkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREcsS0FOdUI7QUFTN0NDLElBQUFBLGFBQWEsRUFBRTtBQUNaTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFESixLQVQ4QjtBQVk3Q0UsSUFBQUEsaUJBQWlCLEVBQUU7QUFDaEJQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURBLEtBWjBCO0FBZWpERyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREksS0FmNEI7QUFrQjdDSSxJQUFBQSxjQUFjLEVBQUU7QUFDYlQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNjO0FBREgsS0FsQjZCO0FBcUI3Q0MsSUFBQUEsbUJBQW1CLEVBQUU7QUFDbEJYLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDYztBQURFLEtBckJ3QjtBQXdCN0NFLElBQUFBLGdCQUFnQixFQUFFO0FBQ2ZaLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURELEtBeEIyQjtBQTJCN0NRLElBQUFBLGdCQUFnQixFQUFFO0FBQ2ZiLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQUREO0FBM0IyQixHQUEvQixFQStCbkI7QUFDQ2EsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0EvQm1CLENBQW5COztBQW1DQWpCLEVBQUFBLFVBQVUsQ0FBQ2tCLFNBQVgsR0FBdUIsVUFBQ0MsTUFBRCxFQUFZO0FBQ2xDbkIsSUFBQUEsVUFBVSxDQUFDb0IsT0FBWCxDQUFtQkQsTUFBTSxDQUFDRSxRQUExQjtBQUNBckIsSUFBQUEsVUFBVSxDQUFDc0IsU0FBWCxDQUFxQkgsTUFBTSxDQUFDSSxRQUE1QixFQUFzQztBQUNyQ0MsTUFBQUEsVUFBVSxFQUFFLFlBRHlCO0FBRXJDQyxNQUFBQSxTQUFTLEVBQUU7QUFGMEIsS0FBdEM7QUFJQXpCLElBQUFBLFVBQVUsQ0FBQ3NCLFNBQVgsQ0FBcUJILE1BQU0sQ0FBQ08sV0FBNUIsRUFBeUM7QUFDeENGLE1BQUFBLFVBQVUsRUFBRSxjQUQ0QjtBQUV4Q0MsTUFBQUEsU0FBUyxFQUFFO0FBRjZCLEtBQXpDO0FBSUF6QixJQUFBQSxVQUFVLENBQUNzQixTQUFYLENBQXFCSCxNQUFNLENBQUNRLGNBQTVCLEVBQTRDO0FBQzNDSCxNQUFBQSxVQUFVLEVBQUUsa0JBRCtCO0FBRTNDQyxNQUFBQSxTQUFTLEVBQUU7QUFGZ0MsS0FBNUM7QUFJQSxHQWREOztBQWdCQSxTQUFPekIsVUFBUDtBQUNBLENBckREIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IGRvY3VtZW50b3MgPSBzZXF1ZWxpemUuZGVmaW5lKCdkb2N1bWVudG9zJywge1xyXG5cdFx0ZG9jdW1lbnRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG4gICAgICBkb2N1bWVudG9fdGlwb2NsaXBybzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcbiAgICAgIH0sXHJcbiAgICAgIGRvY3VtZW50b19ucm86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBkb2N1bWVudG9fZmVjY3JlYToge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZG9jdW1lbnRvX2NvbnRlbmlkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG4gICAgICBkb2N1bWVudG9fcGFnbzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG4gICAgICB9LFxyXG4gICAgICBkb2N1bWVudG9fcGFnb1RvdGFsOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5ERUNJTUFMXHJcbiAgICAgIH0sXHJcbiAgICAgIGRvY3VtZW50b19mZWNjYW46IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBkb2N1bWVudG9fZXN0YWRvOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcbiAgICAgIH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgIH0pO1xyXG5cclxuXHRkb2N1bWVudG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdGRvY3VtZW50b3MuaGFzTWFueShtb2RlbHMudHJhbWl0ZXMpO1xyXG5cdFx0ZG9jdW1lbnRvcy5iZWxvbmdzVG8obW9kZWxzLmNsaWVudGVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdjbGllbnRlX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnY2xpZW50ZV9pZCdcclxuXHRcdH0pO1xyXG5cdFx0ZG9jdW1lbnRvcy5iZWxvbmdzVG8obW9kZWxzLnByb3ZlZWRvcmVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdwcm92ZWVkb3JfaWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdwcm92ZWVkb3JfaWQnXHJcblx0XHR9KTtcclxuXHRcdGRvY3VtZW50b3MuYmVsb25nc1RvKG1vZGVscy50aXBvZG9jdW1lbnRvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAndGlwb2RvY3VtZW50b19pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ3RpcG9kb2N1bWVudG9faWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIGRvY3VtZW50b3M7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Documento.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "documentos",
        "define",
        "documento_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "documento_tipoclipro",
        "STRING",
        "documento_nro",
        "documento_feccrea",
        "documento_contenido",
        "documento_pago",
        "DECIMAL",
        "documento_pagoTotal",
        "documento_feccan",
        "documento_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "tramites",
        "belongsTo",
        "clientes",
        "foreignKey",
        "targetKey",
        "proveedores",
        "tipodocumentos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,UAAU,GAAGF,SAAS,CAACG,MAAV,CAAiB,YAAjB,EAA+B;AACjDC,IAAAA,YAAY,EAAE;AACbC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADH;AAEbC,MAAAA,UAAU,EAAE,IAFC;AAGbC,MAAAA,aAAa,EAAE;AAHF,KADmC;AAM7CC,IAAAA,oBAAoB,EAAE;AACnBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KANuB;AAS7CC,IAAAA,aAAa,EAAE;AACZN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KAT8B;AAY7CE,IAAAA,iBAAiB,EAAE;AAChBP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAZ0B;AAejDG,IAAAA,mBAAmB,EAAE;AACpBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADI,KAf4B;AAkB7CI,IAAAA,cAAc,EAAE;AACbT,MAAAA,IAAI,EAAEJ,SAAS,CAACc;AADH,KAlB6B;AAqB7CC,IAAAA,mBAAmB,EAAE;AAClBX,MAAAA,IAAI,EAAEJ,SAAS,CAACc;AADE,KArBwB;AAwB7CE,IAAAA,gBAAgB,EAAE;AACfZ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAxB2B;AA2B7CQ,IAAAA,gBAAgB,EAAE;AACfb,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AA3B2B,GAA/B,EA+BnB;AACCa,IAAAA,UAAU,EAAE;AADb,GA/BmB,CAAnB;;AAmCAjB,EAAAA,UAAU,CAACkB,SAAX,GAAuB,UAACC,MAAD,EAAY;AAClCnB,IAAAA,UAAU,CAACoB,OAAX,CAAmBD,MAAM,CAACE,QAA1B;AACArB,IAAAA,UAAU,CAACsB,SAAX,CAAqBH,MAAM,CAACI,QAA5B,EAAsC;AACrCC,MAAAA,UAAU,EAAE,YADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIAzB,IAAAA,UAAU,CAACsB,SAAX,CAAqBH,MAAM,CAACO,WAA5B,EAAyC;AACxCF,MAAAA,UAAU,EAAE,cAD4B;AAExCC,MAAAA,SAAS,EAAE;AAF6B,KAAzC;AAIAzB,IAAAA,UAAU,CAACsB,SAAX,CAAqBH,MAAM,CAACQ,cAA5B,EAA4C;AAC3CH,MAAAA,UAAU,EAAE,kBAD+B;AAE3CC,MAAAA,SAAS,EAAE;AAFgC,KAA5C;AAIA,GAdD;;AAgBA,SAAOzB,UAAP;AACA,CArDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst documentos = sequelize.define('documentos', {\r\n\t\tdocumento_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n      documento_tipoclipro: {\r\n         type: DataTypes.STRING\r\n      },\r\n      documento_nro: {\r\n         type: DataTypes.STRING\r\n      },\r\n      documento_feccrea: {\r\n         type: DataTypes.STRING\r\n\t\t},\r\n\t\tdocumento_contenido: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n      documento_pago: {\r\n         type: DataTypes.DECIMAL\r\n      },\r\n      documento_pagoTotal: {\r\n         type: DataTypes.DECIMAL\r\n      },\r\n      documento_feccan: {\r\n         type: DataTypes.STRING\r\n      },\r\n      documento_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tdocumentos.associate = (models) => {\r\n\t\tdocumentos.hasMany(models.tramites);\r\n\t\tdocumentos.belongsTo(models.clientes, {\r\n\t\t\tforeignKey: 'cliente_id',\r\n\t\t\ttargetKey: 'cliente_id'\r\n\t\t});\r\n\t\tdocumentos.belongsTo(models.proveedores, {\r\n\t\t\tforeignKey: 'proveedor_id',\r\n\t\t\ttargetKey: 'proveedor_id'\r\n\t\t});\r\n\t\tdocumentos.belongsTo(models.tipodocumentos, {\r\n\t\t\tforeignKey: 'tipodocumento_id',\r\n\t\t\ttargetKey: 'tipodocumento_id'\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn documentos;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550416522616
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Efectivoviaje.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Efectivoviaje.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Efectivoviaje.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Efectivoviaje.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Efectivoviaje.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var efectivoviajes = sequelize.define('efectivoviajes', {\n    efectivoviaje_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    efectivoviaje_fecha: {\n      type: DataTypes.STRING\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    empleado_id: {\n      type: DataTypes.INTEGER\n    },\n    efectivoviaje_monto: {\n      type: DataTypes.DECIMAL\n    },\n    efectivoviaje_tipo: {\n      type: DataTypes.STRING\n    },\n    efectivoviaje_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  efectivoviajes.associate = function (models) {\n    efectivoviajes.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n    efectivoviajes.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n  };\n\n  return efectivoviajes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVmZWN0aXZvdmlhamUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImVmZWN0aXZvdmlhamVzIiwiZGVmaW5lIiwiZWZlY3Rpdm92aWFqZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJlZmVjdGl2b3ZpYWplX2ZlY2hhIiwiU1RSSU5HIiwiY2Fycm9faWQiLCJlbXBsZWFkb19pZCIsImVmZWN0aXZvdmlhamVfbW9udG8iLCJERUNJTUFMIiwiZWZlY3Rpdm92aWFqZV90aXBvIiwiZWZlY3Rpdm92aWFqZV9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiY2Fycm9zIiwiZm9yZWlnbktleSIsInRhcmdldEtleSIsImVtcGxlYWRvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxjQUFjLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixnQkFBakIsRUFBbUM7QUFDekRDLElBQUFBLGdCQUFnQixFQUFFO0FBQ2pCQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FEQztBQUVqQkMsTUFBQUEsVUFBVSxFQUFFLElBRks7QUFHakJDLE1BQUFBLGFBQWEsRUFBRTtBQUhFLEtBRHVDO0FBTXpEQyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREksS0FOb0M7QUFTekRDLElBQUFBLFFBQVEsRUFBRTtBQUNUTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEUCxLQVQrQztBQVl6RE0sSUFBQUEsV0FBVyxFQUFFO0FBQ1pQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURKLEtBWjRDO0FBZXpETyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNhO0FBREksS0Fmb0M7QUFrQnpEQyxJQUFBQSxrQkFBa0IsRUFBRTtBQUNuQlYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREcsS0FsQnFDO0FBcUJ6RE0sSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJYLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURLO0FBckJtQyxHQUFuQyxFQXlCdkI7QUFDQ1csSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0F6QnVCLENBQXZCOztBQTZCQWYsRUFBQUEsY0FBYyxDQUFDZ0IsU0FBZixHQUEyQixVQUFDQyxNQUFELEVBQVk7QUFDdENqQixJQUFBQSxjQUFjLENBQUNrQixTQUFmLENBQXlCRCxNQUFNLENBQUNFLE1BQWhDLEVBQXdDO0FBQ3ZDQyxNQUFBQSxVQUFVLEVBQUUsVUFEMkI7QUFFdkNDLE1BQUFBLFNBQVMsRUFBRTtBQUY0QixLQUF4QztBQUlBckIsSUFBQUEsY0FBYyxDQUFDa0IsU0FBZixDQUF5QkQsTUFBTSxDQUFDSyxTQUFoQyxFQUEyQztBQUMxQ0YsTUFBQUEsVUFBVSxFQUFFLGFBRDhCO0FBRTFDQyxNQUFBQSxTQUFTLEVBQUU7QUFGK0IsS0FBM0M7QUFJQSxHQVREOztBQVdBLFNBQU9yQixjQUFQO0FBQ0EsQ0ExQ0QiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgZWZlY3Rpdm92aWFqZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdlZmVjdGl2b3ZpYWplcycsIHtcclxuXHRcdGVmZWN0aXZvdmlhamVfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRlZmVjdGl2b3ZpYWplX2ZlY2hhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjYXJyb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0ZWZlY3Rpdm92aWFqZV9tb250bzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG5cdFx0fSxcclxuXHRcdGVmZWN0aXZvdmlhamVfdGlwbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZWZlY3Rpdm92aWFqZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgIH0pO1xyXG5cclxuXHRlZmVjdGl2b3ZpYWplcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcblx0XHRlZmVjdGl2b3ZpYWplcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdFx0ZWZlY3Rpdm92aWFqZXMuYmVsb25nc1RvKG1vZGVscy5lbXBsZWFkb3MsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ2VtcGxlYWRvX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnZW1wbGVhZG9faWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0IFxyXG5cdHJldHVybiBlZmVjdGl2b3ZpYWplczsgXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Efectivoviaje.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "efectivoviajes",
        "define",
        "efectivoviaje_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "efectivoviaje_fecha",
        "STRING",
        "carro_id",
        "empleado_id",
        "efectivoviaje_monto",
        "DECIMAL",
        "efectivoviaje_tipo",
        "efectivoviaje_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey",
        "empleados"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,cAAc,GAAGF,SAAS,CAACG,MAAV,CAAiB,gBAAjB,EAAmC;AACzDC,IAAAA,gBAAgB,EAAE;AACjBC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADC;AAEjBC,MAAAA,UAAU,EAAE,IAFK;AAGjBC,MAAAA,aAAa,EAAE;AAHE,KADuC;AAMzDC,IAAAA,mBAAmB,EAAE;AACpBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADI,KANoC;AASzDC,IAAAA,QAAQ,EAAE;AACTN,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAT+C;AAYzDM,IAAAA,WAAW,EAAE;AACZP,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADJ,KAZ4C;AAezDO,IAAAA,mBAAmB,EAAE;AACpBR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADI,KAfoC;AAkBzDC,IAAAA,kBAAkB,EAAE;AACnBV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KAlBqC;AAqBzDM,IAAAA,oBAAoB,EAAE;AACrBX,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADK;AArBmC,GAAnC,EAyBvB;AACCW,IAAAA,UAAU,EAAE;AADb,GAzBuB,CAAvB;;AA6BAf,EAAAA,cAAc,CAACgB,SAAf,GAA2B,UAACC,MAAD,EAAY;AACtCjB,IAAAA,cAAc,CAACkB,SAAf,CAAyBD,MAAM,CAACE,MAAhC,EAAwC;AACvCC,MAAAA,UAAU,EAAE,UAD2B;AAEvCC,MAAAA,SAAS,EAAE;AAF4B,KAAxC;AAIArB,IAAAA,cAAc,CAACkB,SAAf,CAAyBD,MAAM,CAACK,SAAhC,EAA2C;AAC1CF,MAAAA,UAAU,EAAE,aAD8B;AAE1CC,MAAAA,SAAS,EAAE;AAF+B,KAA3C;AAIA,GATD;;AAWA,SAAOrB,cAAP;AACA,CA1CD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst efectivoviajes = sequelize.define('efectivoviajes', {\r\n\t\tefectivoviaje_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tefectivoviaje_fecha: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tefectivoviaje_monto: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\tefectivoviaje_tipo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tefectivoviaje_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tefectivoviajes.associate = (models) => {\r\n\t\tefectivoviajes.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t\tefectivoviajes.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn efectivoviajes; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550858342286
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Empleado.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Empleado.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Empleado.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Empleado.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Empleado.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var empleados = sequelize.define('empleados', {\n    empleado_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    empleado_nombre: {\n      type: DataTypes.STRING\n    },\n    empleado_apepat: {\n      type: DataTypes.STRING\n    },\n    empleado_apemat: {\n      type: DataTypes.STRING\n    },\n    empleado_dniruc: {\n      type: DataTypes.STRING\n    },\n    empleado_fecing: {\n      type: DataTypes.STRING\n    },\n    empleado_feclicencia: {\n      type: DataTypes.STRING\n    },\n    empleado_paga: {\n      type: DataTypes.STRING\n    },\n    empleado_cargo: {\n      type: DataTypes.STRING\n    },\n    empleado_direccion: {\n      type: DataTypes.STRING\n    },\n    empleado_telefono: {\n      type: DataTypes.STRING\n    },\n    empleado_email: {\n      type: DataTypes.STRING\n    },\n    empleado_nacion: {\n      type: DataTypes.STRING\n    },\n    empleado_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  empleados.associate = function (models) {\n    empleados.hasMany(models.tramites);\n    empleados.hasMany(models.viajes);\n    empleados.hasMany(models.efectivoviajes);\n    empleados.hasMany(models.repuestos);\n  };\n\n  return empleados;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVtcGxlYWRvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJlbXBsZWFkb3MiLCJkZWZpbmUiLCJlbXBsZWFkb19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJlbXBsZWFkb19ub21icmUiLCJTVFJJTkciLCJlbXBsZWFkb19hcGVwYXQiLCJlbXBsZWFkb19hcGVtYXQiLCJlbXBsZWFkb19kbmlydWMiLCJlbXBsZWFkb19mZWNpbmciLCJlbXBsZWFkb19mZWNsaWNlbmNpYSIsImVtcGxlYWRvX3BhZ2EiLCJlbXBsZWFkb19jYXJnbyIsImVtcGxlYWRvX2RpcmVjY2lvbiIsImVtcGxlYWRvX3RlbGVmb25vIiwiZW1wbGVhZG9fZW1haWwiLCJlbXBsZWFkb19uYWNpb24iLCJlbXBsZWFkb19lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsInRyYW1pdGVzIiwidmlhamVzIiwiZWZlY3Rpdm92aWFqZXMiLCJyZXB1ZXN0b3MiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDMUMsTUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDL0NDLElBQUFBLFdBQVcsRUFBRTtBQUNaQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FESjtBQUVaQyxNQUFBQSxVQUFVLEVBQUUsSUFGQTtBQUdaQyxNQUFBQSxhQUFhLEVBQUU7QUFISCxLQURrQztBQU0vQ0MsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQU44QjtBQVMvQ0MsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQVQ4QjtBQVkvQ0UsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCUCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQVo4QjtBQWUvQ0csSUFBQUEsZUFBZSxFQUFFO0FBQ2hCUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQWY4QjtBQWtCL0NJLElBQUFBLGVBQWUsRUFBRTtBQUNoQlQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0FsQjhCO0FBcUIvQ0ssSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURLLEtBckJ5QjtBQXdCL0NNLElBQUFBLGFBQWEsRUFBRTtBQUNkWCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERixLQXhCZ0M7QUEyQi9DTyxJQUFBQSxjQUFjLEVBQUU7QUFDZlosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0EzQitCO0FBOEIvQ1EsSUFBQUEsa0JBQWtCLEVBQUU7QUFDbkJiLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURHLEtBOUIyQjtBQWlDL0NTLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCZCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQWpDNEI7QUFvQy9DVSxJQUFBQSxjQUFjLEVBQUU7QUFDZmYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FwQytCO0FBdUMvQ1csSUFBQUEsZUFBZSxFQUFFO0FBQ2hCaEIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0F2QzhCO0FBMEMvQ1ksSUFBQUEsZUFBZSxFQUFFO0FBQ2hCakIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREE7QUExQzhCLEdBQTlCLEVBOENsQjtBQUNDaUIsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0E5Q2tCLENBQWxCOztBQWtEQXJCLEVBQUFBLFNBQVMsQ0FBQ3NCLFNBQVYsR0FBc0IsVUFBQ0MsTUFBRCxFQUFZO0FBQ2pDdkIsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDRSxRQUF6QjtBQUNBekIsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDRyxNQUF6QjtBQUNBMUIsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDSSxjQUF6QjtBQUNBM0IsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDSyxTQUF6QjtBQUNBLEdBTEQ7O0FBT0EsU0FBTzVCLFNBQVA7QUFDQSxDQTNERCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuXHRjb25zdCBlbXBsZWFkb3MgPSBzZXF1ZWxpemUuZGVmaW5lKCdlbXBsZWFkb3MnLCB7XHJcblx0XHRlbXBsZWFkb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuXHRcdFx0cHJpbWFyeUtleTogdHJ1ZSxcclxuXHRcdFx0YXV0b0luY3JlbWVudDogdHJ1ZVxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX25vbWJyZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LCBcclxuXHRcdGVtcGxlYWRvX2FwZXBhdDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fYXBlbWF0OiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19kbmlydWM6IHsgXHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19mZWNpbmc6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2ZlY2xpY2VuY2lhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19wYWdhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19jYXJnbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fZGlyZWNjaW9uOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb190ZWxlZm9ubzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fZW1haWw6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX25hY2lvbjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fZXN0YWRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0ZW1wbGVhZG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdGVtcGxlYWRvcy5oYXNNYW55KG1vZGVscy50cmFtaXRlcyk7XHJcblx0XHRlbXBsZWFkb3MuaGFzTWFueShtb2RlbHMudmlhamVzKTtcclxuXHRcdGVtcGxlYWRvcy5oYXNNYW55KG1vZGVscy5lZmVjdGl2b3ZpYWplcyk7XHJcblx0XHRlbXBsZWFkb3MuaGFzTWFueShtb2RlbHMucmVwdWVzdG9zKTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIGVtcGxlYWRvcztcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Empleado.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "empleados",
        "define",
        "empleado_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "empleado_nombre",
        "STRING",
        "empleado_apepat",
        "empleado_apemat",
        "empleado_dniruc",
        "empleado_fecing",
        "empleado_feclicencia",
        "empleado_paga",
        "empleado_cargo",
        "empleado_direccion",
        "empleado_telefono",
        "empleado_email",
        "empleado_nacion",
        "empleado_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "tramites",
        "viajes",
        "efectivoviajes",
        "repuestos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC/CC,IAAAA,WAAW,EAAE;AACZC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADJ;AAEZC,MAAAA,UAAU,EAAE,IAFA;AAGZC,MAAAA,aAAa,EAAE;AAHH,KADkC;AAM/CC,IAAAA,eAAe,EAAE;AAChBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAN8B;AAS/CC,IAAAA,eAAe,EAAE;AAChBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAT8B;AAY/CE,IAAAA,eAAe,EAAE;AAChBP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAZ8B;AAe/CG,IAAAA,eAAe,EAAE;AAChBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAf8B;AAkB/CI,IAAAA,eAAe,EAAE;AAChBT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAlB8B;AAqB/CK,IAAAA,oBAAoB,EAAE;AACrBV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADK,KArByB;AAwB/CM,IAAAA,aAAa,EAAE;AACdX,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KAxBgC;AA2B/CO,IAAAA,cAAc,EAAE;AACfZ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KA3B+B;AA8B/CQ,IAAAA,kBAAkB,EAAE;AACnBb,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KA9B2B;AAiC/CS,IAAAA,iBAAiB,EAAE;AAClBd,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KAjC4B;AAoC/CU,IAAAA,cAAc,EAAE;AACff,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KApC+B;AAuC/CW,IAAAA,eAAe,EAAE;AAChBhB,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAvC8B;AA0C/CY,IAAAA,eAAe,EAAE;AAChBjB,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADA;AA1C8B,GAA9B,EA8ClB;AACCiB,IAAAA,UAAU,EAAE;AADb,GA9CkB,CAAlB;;AAkDArB,EAAAA,SAAS,CAACsB,SAAV,GAAsB,UAACC,MAAD,EAAY;AACjCvB,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACE,QAAzB;AACAzB,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACG,MAAzB;AACA1B,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACI,cAAzB;AACA3B,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACK,SAAzB;AACA,GALD;;AAOA,SAAO5B,SAAP;AACA,CA3DD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst empleados = sequelize.define('empleados', {\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\templeado_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t}, \r\n\t\templeado_apepat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_apemat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_dniruc: { \r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_fecing: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_feclicencia: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_paga: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_cargo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_direccion: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_telefono: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_email: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_nacion: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\templeados.associate = (models) => {\r\n\t\templeados.hasMany(models.tramites);\r\n\t\templeados.hasMany(models.viajes);\r\n\t\templeados.hasMany(models.efectivoviajes);\r\n\t\templeados.hasMany(models.repuestos);\r\n\t}\r\n\t\r\n\treturn empleados;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554134820294
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Factura.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Factura.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Factura.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Factura.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Factura.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var facturas = sequelize.define('facturas', {\n    factura_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    cliente_id: {\n      type: DataTypes.INTEGER\n    },\n    factura_nro: {\n      type: DataTypes.STRING\n    },\n    factura_fecha: {\n      type: DataTypes.STRING\n    },\n    factura_fecha2: {\n      type: DataTypes.DATE\n    },\n    factura_total: {\n      type: DataTypes.DECIMAL\n    },\n    factura_guias: {\n      type: DataTypes.STRING\n    },\n    factura_feccancela: {\n      type: DataTypes.STRING\n    },\n    factura_feccancela2: {\n      type: DataTypes.DATE\n    },\n    factura_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  facturas.associate = function (models) {\n    facturas.belongsTo(models.clientes, {\n      foreignKey: 'cliente_id',\n      targetKey: 'cliente_id'\n    });\n  };\n\n  return facturas;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZhY3R1cmEuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImZhY3R1cmFzIiwiZGVmaW5lIiwiZmFjdHVyYV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjbGllbnRlX2lkIiwiZmFjdHVyYV9ucm8iLCJTVFJJTkciLCJmYWN0dXJhX2ZlY2hhIiwiZmFjdHVyYV9mZWNoYTIiLCJEQVRFIiwiZmFjdHVyYV90b3RhbCIsIkRFQ0lNQUwiLCJmYWN0dXJhX2d1aWFzIiwiZmFjdHVyYV9mZWNjYW5jZWxhIiwiZmFjdHVyYV9mZWNjYW5jZWxhMiIsImZhY3R1cmFfZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsImNsaWVudGVzIiwiZm9yZWlnbktleSIsInRhcmdldEtleSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM3Q0MsSUFBQUEsVUFBVSxFQUFFO0FBQ1hDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURMO0FBRVhDLE1BQUFBLFVBQVUsRUFBRSxJQUZEO0FBR1hDLE1BQUFBLGFBQWEsRUFBRTtBQUhKLEtBRGlDO0FBTTdDQyxJQUFBQSxVQUFVLEVBQUU7QUFDWEosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREwsS0FOaUM7QUFTN0NJLElBQUFBLFdBQVcsRUFBRTtBQUNaTCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1U7QUFESixLQVRnQztBQVk3Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVTtBQURGLEtBWjhCO0FBZTdDRSxJQUFBQSxjQUFjLEVBQUU7QUFDZlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNhO0FBREQsS0FmNkI7QUFrQjdDQyxJQUFBQSxhQUFhLEVBQUU7QUFDZFYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNlO0FBREYsS0FsQjhCO0FBcUI3Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RaLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVTtBQURGLEtBckI4QjtBQXdCN0NPLElBQUFBLGtCQUFrQixFQUFFO0FBQ25CYixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1U7QUFERyxLQXhCeUI7QUEyQjdDUSxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQmQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNhO0FBREksS0EzQndCO0FBOEI3Q00sSUFBQUEsY0FBYyxFQUFFO0FBQ2ZmLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQUREO0FBOUI2QixHQUE3QixFQWtDakI7QUFDQ2UsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0FsQ2lCLENBQWpCOztBQXNDQW5CLEVBQUFBLFFBQVEsQ0FBQ29CLFNBQVQsR0FBcUIsVUFBQ0MsTUFBRCxFQUFZO0FBQ2hDckIsSUFBQUEsUUFBUSxDQUFDc0IsU0FBVCxDQUFtQkQsTUFBTSxDQUFDRSxRQUExQixFQUFvQztBQUNuQ0MsTUFBQUEsVUFBVSxFQUFFLFlBRHVCO0FBRW5DQyxNQUFBQSxTQUFTLEVBQUU7QUFGd0IsS0FBcEM7QUFJQSxHQUxEOztBQU9BLFNBQU96QixRQUFQO0FBQ0EsQ0EvQ0QiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgZmFjdHVyYXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdmYWN0dXJhcycsIHtcclxuXHRcdGZhY3R1cmFfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0ZmFjdHVyYV9ucm86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZmVjaGE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZmVjaGEyOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5EQVRFXHJcblx0XHR9LFxyXG5cdFx0ZmFjdHVyYV90b3RhbDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZ3VpYXM6IHsgXHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRmYWN0dXJhX2ZlY2NhbmNlbGE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZmVjY2FuY2VsYTI6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLkRBVEVcclxuXHRcdH0sXHJcblx0XHRmYWN0dXJhX2VzdGFkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdGZhY3R1cmFzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdGZhY3R1cmFzLmJlbG9uZ3NUbyhtb2RlbHMuY2xpZW50ZXMsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ2NsaWVudGVfaWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjbGllbnRlX2lkJ1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cdCBcclxuXHRyZXR1cm4gZmFjdHVyYXM7IFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Factura.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "facturas",
        "define",
        "factura_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "cliente_id",
        "factura_nro",
        "STRING",
        "factura_fecha",
        "factura_fecha2",
        "DATE",
        "factura_total",
        "DECIMAL",
        "factura_guias",
        "factura_feccancela",
        "factura_feccancela2",
        "factura_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "clientes",
        "foreignKey",
        "targetKey"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC7CC,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADL;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KADiC;AAM7CC,IAAAA,UAAU,EAAE;AACXJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADL,KANiC;AAS7CI,IAAAA,WAAW,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADJ,KATgC;AAY7CC,IAAAA,aAAa,EAAE;AACdP,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADF,KAZ8B;AAe7CE,IAAAA,cAAc,EAAE;AACfR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADD,KAf6B;AAkB7CC,IAAAA,aAAa,EAAE;AACdV,MAAAA,IAAI,EAAEJ,SAAS,CAACe;AADF,KAlB8B;AAqB7CC,IAAAA,aAAa,EAAE;AACdZ,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADF,KArB8B;AAwB7CO,IAAAA,kBAAkB,EAAE;AACnBb,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADG,KAxByB;AA2B7CQ,IAAAA,mBAAmB,EAAE;AACpBd,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADI,KA3BwB;AA8B7CM,IAAAA,cAAc,EAAE;AACff,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AA9B6B,GAA7B,EAkCjB;AACCe,IAAAA,UAAU,EAAE;AADb,GAlCiB,CAAjB;;AAsCAnB,EAAAA,QAAQ,CAACoB,SAAT,GAAqB,UAACC,MAAD,EAAY;AAChCrB,IAAAA,QAAQ,CAACsB,SAAT,CAAmBD,MAAM,CAACE,QAA1B,EAAoC;AACnCC,MAAAA,UAAU,EAAE,YADuB;AAEnCC,MAAAA,SAAS,EAAE;AAFwB,KAApC;AAIA,GALD;;AAOA,SAAOzB,QAAP;AACA,CA/CD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst facturas = sequelize.define('facturas', {\r\n\t\tfactura_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcliente_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tfactura_nro: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_fecha: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_fecha2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t},\r\n\t\tfactura_total: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\tfactura_guias: { \r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_feccancela: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_feccancela2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t},\r\n\t\tfactura_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tfacturas.associate = (models) => {\r\n\t\tfacturas.belongsTo(models.clientes, {\r\n\t\t\tforeignKey: 'cliente_id',\r\n\t\t\ttargetKey: 'cliente_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn facturas; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557335559175
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Gasto.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Gasto.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Gasto.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Gasto.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Gasto.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var gastos = sequelize.define('gastos', {\n    gasto_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    proveedor_id: {\n      type: DataTypes.INTEGER\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    gasto_detalle: {\n      type: DataTypes.STRING\n    },\n    gasto_importe: {\n      type: DataTypes.DECIMAL\n    },\n    gasto_factura: {\n      type: DataTypes.STRING\n    },\n    gasto_fecha: {\n      type: DataTypes.STRING\n    },\n    gasto_fecha2: {\n      type: DataTypes.STRING\n    },\n    gasto_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  gastos.associate = function (models) {\n    gastos.belongsTo(models.proveedores, {\n      foreignKey: 'proveedor_id',\n      targetKey: 'proveedor_id'\n    });\n    gastos.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n  };\n\n  return gastos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdhc3RvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJnYXN0b3MiLCJkZWZpbmUiLCJnYXN0b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJwcm92ZWVkb3JfaWQiLCJjYXJyb19pZCIsImdhc3RvX2RldGFsbGUiLCJTVFJJTkciLCJnYXN0b19pbXBvcnRlIiwiREVDSU1BTCIsImdhc3RvX2ZhY3R1cmEiLCJnYXN0b19mZWNoYSIsImdhc3RvX2ZlY2hhMiIsImdhc3RvX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJwcm92ZWVkb3JlcyIsImZvcmVpZ25LZXkiLCJ0YXJnZXRLZXkiLCJjYXJyb3MiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDMUMsTUFBTUMsTUFBTSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsUUFBakIsRUFBMkI7QUFDekNDLElBQUFBLFFBQVEsRUFBRTtBQUNUQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FEUDtBQUVUQyxNQUFBQSxVQUFVLEVBQUUsSUFGSDtBQUdUQyxNQUFBQSxhQUFhLEVBQUU7QUFITixLQUQrQjtBQU16Q0MsSUFBQUEsWUFBWSxFQUFFO0FBQ2JKLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURILEtBTjJCO0FBU3pDSSxJQUFBQSxRQUFRLEVBQUU7QUFDVEwsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBRFAsS0FUK0I7QUFZekNLLElBQUFBLGFBQWEsRUFBRTtBQUNkTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFERixLQVowQjtBQWV6Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDYTtBQURGLEtBZjBCO0FBa0J6Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVztBQURGLEtBbEIwQjtBQXFCekNJLElBQUFBLFdBQVcsRUFBRTtBQUNaWCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFESixLQXJCNEI7QUF3QnpDSyxJQUFBQSxZQUFZLEVBQUU7QUFDYlosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREgsS0F4QjJCO0FBMkJ6Q00sSUFBQUEsWUFBWSxFQUFFO0FBQ2JiLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURIO0FBM0IyQixHQUEzQixFQStCZjtBQUNDYSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQS9CZSxDQUFmOztBQW1DQWpCLEVBQUFBLE1BQU0sQ0FBQ2tCLFNBQVAsR0FBbUIsVUFBQ0MsTUFBRCxFQUFZO0FBQzFCbkIsSUFBQUEsTUFBTSxDQUFDb0IsU0FBUCxDQUFpQkQsTUFBTSxDQUFDRSxXQUF4QixFQUFxQztBQUN4Q0MsTUFBQUEsVUFBVSxFQUFFLGNBRDRCO0FBRXhDQyxNQUFBQSxTQUFTLEVBQUU7QUFGNkIsS0FBckM7QUFJSnZCLElBQUFBLE1BQU0sQ0FBQ29CLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ0ssTUFBeEIsRUFBZ0M7QUFDL0JGLE1BQUFBLFVBQVUsRUFBRSxVQURtQjtBQUUvQkMsTUFBQUEsU0FBUyxFQUFFO0FBRm9CLEtBQWhDO0FBSUEsR0FURDs7QUFXQSxTQUFPdkIsTUFBUDtBQUNBLENBaEREIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IGdhc3RvcyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2dhc3RvcycsIHtcclxuXHRcdGdhc3RvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0cHJvdmVlZG9yX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH0sIFxyXG5cdFx0Z2FzdG9fZGV0YWxsZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Z2FzdG9faW1wb3J0ZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG5cdFx0fSxcclxuXHRcdGdhc3RvX2ZhY3R1cmE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGdhc3RvX2ZlY2hhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRnYXN0b19mZWNoYTI6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGdhc3RvX2VzdGFkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdGdhc3Rvcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcbiAgICAgIGdhc3Rvcy5iZWxvbmdzVG8obW9kZWxzLnByb3ZlZWRvcmVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdwcm92ZWVkb3JfaWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdwcm92ZWVkb3JfaWQnXHJcblx0XHR9KTtcclxuXHRcdGdhc3Rvcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdH1cclxuXHQgXHJcblx0cmV0dXJuIGdhc3RvczsgXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Gasto.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "gastos",
        "define",
        "gasto_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "proveedor_id",
        "carro_id",
        "gasto_detalle",
        "STRING",
        "gasto_importe",
        "DECIMAL",
        "gasto_factura",
        "gasto_fecha",
        "gasto_fecha2",
        "gasto_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "proveedores",
        "foreignKey",
        "targetKey",
        "carros"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACzCC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAD+B;AAMzCC,IAAAA,YAAY,EAAE;AACbJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH,KAN2B;AASzCI,IAAAA,QAAQ,EAAE;AACTL,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAT+B;AAYzCK,IAAAA,aAAa,EAAE;AACdN,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAZ0B;AAezCC,IAAAA,aAAa,EAAE;AACdR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADF,KAf0B;AAkBzCC,IAAAA,aAAa,EAAE;AACdV,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAlB0B;AAqBzCI,IAAAA,WAAW,EAAE;AACZX,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADJ,KArB4B;AAwBzCK,IAAAA,YAAY,EAAE;AACbZ,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADH,KAxB2B;AA2BzCM,IAAAA,YAAY,EAAE;AACbb,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AA3B2B,GAA3B,EA+Bf;AACCa,IAAAA,UAAU,EAAE;AADb,GA/Be,CAAf;;AAmCAjB,EAAAA,MAAM,CAACkB,SAAP,GAAmB,UAACC,MAAD,EAAY;AAC1BnB,IAAAA,MAAM,CAACoB,SAAP,CAAiBD,MAAM,CAACE,WAAxB,EAAqC;AACxCC,MAAAA,UAAU,EAAE,cAD4B;AAExCC,MAAAA,SAAS,EAAE;AAF6B,KAArC;AAIJvB,IAAAA,MAAM,CAACoB,SAAP,CAAiBD,MAAM,CAACK,MAAxB,EAAgC;AAC/BF,MAAAA,UAAU,EAAE,UADmB;AAE/BC,MAAAA,SAAS,EAAE;AAFoB,KAAhC;AAIA,GATD;;AAWA,SAAOvB,MAAP;AACA,CAhDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst gastos = sequelize.define('gastos', {\r\n\t\tgasto_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tproveedor_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}, \r\n\t\tgasto_detalle: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_importe: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\tgasto_factura: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_fecha: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_fecha2: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tgastos.associate = (models) => {\r\n      gastos.belongsTo(models.proveedores, {\r\n\t\t\tforeignKey: 'proveedor_id',\r\n\t\t\ttargetKey: 'proveedor_id'\r\n\t\t});\r\n\t\tgastos.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn gastos; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556663128051
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Lugar.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Lugar.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Lugar.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Lugar.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Lugar.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var lugares = sequelize.define('lugares', {\n    lugar_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    lugar_distrito: {\n      type: DataTypes.STRING\n    },\n    lugar_provincia: {\n      type: DataTypes.STRING\n    },\n    lugar_departamento: {\n      type: DataTypes.STRING\n    },\n    lugar_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  lugares.associate = function (models) {\n    lugares.hasMany(models.viajes);\n  };\n\n  return lugares;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkx1Z2FyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJsdWdhcmVzIiwiZGVmaW5lIiwibHVnYXJfaWQiLCJ0eXBlIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwibHVnYXJfZGlzdHJpdG8iLCJTVFJJTkciLCJsdWdhcl9wcm92aW5jaWEiLCJsdWdhcl9kZXBhcnRhbWVudG8iLCJsdWdhcl9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsInZpYWplcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxPQUFPLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUMzQ0MsSUFBQUEsUUFBUSxFQUFFO0FBQ1RDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURQO0FBRVRDLE1BQUFBLFVBQVUsRUFBRSxJQUZIO0FBR1RDLE1BQUFBLGFBQWEsRUFBRTtBQUhOLEtBRGlDO0FBTTNDQyxJQUFBQSxjQUFjLEVBQUU7QUFDZkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FOMkI7QUFTM0NDLElBQUFBLGVBQWUsRUFBRTtBQUNoQk4sTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0FUMEI7QUFZM0NFLElBQUFBLGtCQUFrQixFQUFFO0FBQ25CUCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERyxLQVp1QjtBQWUzQ0csSUFBQUEsWUFBWSxFQUFFO0FBQ2JSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURIO0FBZjZCLEdBQTVCLEVBbUJoQjtBQUNDUSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQW5CZ0IsQ0FBaEI7O0FBdUJBWixFQUFBQSxPQUFPLENBQUNhLFNBQVIsR0FBb0IsVUFBQ0MsTUFBRCxFQUFZO0FBQy9CZCxJQUFBQSxPQUFPLENBQUNlLE9BQVIsQ0FBZ0JELE1BQU0sQ0FBQ0UsTUFBdkI7QUFDQSxHQUZEOztBQUlBLFNBQU9oQixPQUFQO0FBQ0EsQ0E3QkQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgbHVnYXJlcyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2x1Z2FyZXMnLCB7XHJcblx0XHRsdWdhcl9pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuXHRcdFx0cHJpbWFyeUtleTogdHJ1ZSxcclxuXHRcdFx0YXV0b0luY3JlbWVudDogdHJ1ZVxyXG5cdFx0fSxcclxuXHRcdGx1Z2FyX2Rpc3RyaXRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRsdWdhcl9wcm92aW5jaWE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGx1Z2FyX2RlcGFydGFtZW50bzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LCBcclxuXHRcdGx1Z2FyX2VzdGFkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdGx1Z2FyZXMuYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xyXG5cdFx0bHVnYXJlcy5oYXNNYW55KG1vZGVscy52aWFqZXMpO1xyXG5cdH1cclxuXHQgXHJcblx0cmV0dXJuIGx1Z2FyZXM7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Lugar.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "lugares",
        "define",
        "lugar_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "lugar_distrito",
        "STRING",
        "lugar_provincia",
        "lugar_departamento",
        "lugar_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "viajes"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC3CC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KADiC;AAM3CC,IAAAA,cAAc,EAAE;AACfJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAN2B;AAS3CC,IAAAA,eAAe,EAAE;AAChBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAT0B;AAY3CE,IAAAA,kBAAkB,EAAE;AACnBP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KAZuB;AAe3CG,IAAAA,YAAY,EAAE;AACbR,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AAf6B,GAA5B,EAmBhB;AACCQ,IAAAA,UAAU,EAAE;AADb,GAnBgB,CAAhB;;AAuBAZ,EAAAA,OAAO,CAACa,SAAR,GAAoB,UAACC,MAAD,EAAY;AAC/Bd,IAAAA,OAAO,CAACe,OAAR,CAAgBD,MAAM,CAACE,MAAvB;AACA,GAFD;;AAIA,SAAOhB,OAAP;AACA,CA7BD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst lugares = sequelize.define('lugares', {\r\n\t\tlugar_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tlugar_distrito: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tlugar_provincia: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tlugar_departamento: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t}, \r\n\t\tlugar_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tlugares.associate = (models) => {\r\n\t\tlugares.hasMany(models.viajes);\r\n\t}\r\n\t \r\n\treturn lugares;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550637129100
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Proveedor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Proveedor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Proveedor.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Proveedor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Proveedor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var proveedores = sequelize.define('proveedores', {\n    proveedor_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    proveedor_nombre: {\n      type: DataTypes.STRING\n    },\n    proveedor_ruc: {\n      type: DataTypes.STRING\n    },\n    proveedor_tipo: {\n      type: DataTypes.STRING\n    },\n    proveedor_direccion: {\n      type: DataTypes.STRING\n    },\n    proveedor_telefono: {\n      type: DataTypes.STRING\n    },\n    proveedor_email: {\n      type: DataTypes.STRING\n    },\n    proveedor_fecing: {\n      type: DataTypes.STRING\n    },\n    proveedor_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  proveedores.associate = function (models) {\n    proveedores.hasMany(models.documentos);\n    proveedores.hasMany(models.gastos);\n  };\n\n  return proveedores;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByb3ZlZWRvci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwicHJvdmVlZG9yZXMiLCJkZWZpbmUiLCJwcm92ZWVkb3JfaWQiLCJ0eXBlIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwicHJvdmVlZG9yX25vbWJyZSIsIlNUUklORyIsInByb3ZlZWRvcl9ydWMiLCJwcm92ZWVkb3JfdGlwbyIsInByb3ZlZWRvcl9kaXJlY2Npb24iLCJwcm92ZWVkb3JfdGVsZWZvbm8iLCJwcm92ZWVkb3JfZW1haWwiLCJwcm92ZWVkb3JfZmVjaW5nIiwicHJvdmVlZG9yX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiZG9jdW1lbnRvcyIsImdhc3RvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxXQUFXLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixhQUFqQixFQUFnQztBQUNuREMsSUFBQUEsWUFBWSxFQUFFO0FBQ2JDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURIO0FBRWJDLE1BQUFBLFVBQVUsRUFBRSxJQUZDO0FBR2JDLE1BQUFBLGFBQWEsRUFBRTtBQUhGLEtBRHFDO0FBTS9DQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNmSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERCxLQU42QjtBQVMvQ0MsSUFBQUEsYUFBYSxFQUFFO0FBQ1pOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURKLEtBVGdDO0FBWS9DRSxJQUFBQSxjQUFjLEVBQUU7QUFDYlAsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREgsS0FaK0I7QUFlL0NHLElBQUFBLG1CQUFtQixFQUFFO0FBQ2xCUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQWYwQjtBQWtCL0NJLElBQUFBLGtCQUFrQixFQUFFO0FBQ2pCVCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQyxLQWxCMkI7QUFxQi9DSyxJQUFBQSxlQUFlLEVBQUU7QUFDZFYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREYsS0FyQjhCO0FBd0IvQ00sSUFBQUEsZ0JBQWdCLEVBQUU7QUFDZlgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0F4QjZCO0FBMkIvQ08sSUFBQUEsZ0JBQWdCLEVBQUU7QUFDZlosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREQ7QUEzQjZCLEdBQWhDLEVBK0JwQjtBQUNDWSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQS9Cb0IsQ0FBcEI7O0FBbUNBaEIsRUFBQUEsV0FBVyxDQUFDaUIsU0FBWixHQUF3QixVQUFDQyxNQUFELEVBQVk7QUFDbkNsQixJQUFBQSxXQUFXLENBQUNtQixPQUFaLENBQW9CRCxNQUFNLENBQUNFLFVBQTNCO0FBQ0FwQixJQUFBQSxXQUFXLENBQUNtQixPQUFaLENBQW9CRCxNQUFNLENBQUNHLE1BQTNCO0FBQ0EsR0FIRDs7QUFLQSxTQUFPckIsV0FBUDtBQUNBLENBMUNEIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IHByb3ZlZWRvcmVzID0gc2VxdWVsaXplLmRlZmluZSgncHJvdmVlZG9yZXMnLCB7XHJcblx0XHRwcm92ZWVkb3JfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcbiAgICAgIHByb3ZlZWRvcl9ub21icmU6IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBwcm92ZWVkb3JfcnVjOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX3RpcG86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBwcm92ZWVkb3JfZGlyZWNjaW9uOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX3RlbGVmb25vOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX2VtYWlsOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX2ZlY2luZzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcbiAgICAgIH0sXHJcbiAgICAgIHByb3ZlZWRvcl9lc3RhZG86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuICAgICAgfVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdHByb3ZlZWRvcmVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHByb3ZlZWRvcmVzLmhhc01hbnkobW9kZWxzLmRvY3VtZW50b3MpO1xyXG5cdFx0cHJvdmVlZG9yZXMuaGFzTWFueShtb2RlbHMuZ2FzdG9zKTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIHByb3ZlZWRvcmVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Proveedor.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "proveedores",
        "define",
        "proveedor_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "proveedor_nombre",
        "STRING",
        "proveedor_ruc",
        "proveedor_tipo",
        "proveedor_direccion",
        "proveedor_telefono",
        "proveedor_email",
        "proveedor_fecing",
        "proveedor_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "documentos",
        "gastos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,WAAW,GAAGF,SAAS,CAACG,MAAV,CAAiB,aAAjB,EAAgC;AACnDC,IAAAA,YAAY,EAAE;AACbC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADH;AAEbC,MAAAA,UAAU,EAAE,IAFC;AAGbC,MAAAA,aAAa,EAAE;AAHF,KADqC;AAM/CC,IAAAA,gBAAgB,EAAE;AACfJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAN6B;AAS/CC,IAAAA,aAAa,EAAE;AACZN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KATgC;AAY/CE,IAAAA,cAAc,EAAE;AACbP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADH,KAZ+B;AAe/CG,IAAAA,mBAAmB,EAAE;AAClBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KAf0B;AAkB/CI,IAAAA,kBAAkB,EAAE;AACjBT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADC,KAlB2B;AAqB/CK,IAAAA,eAAe,EAAE;AACdV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KArB8B;AAwB/CM,IAAAA,gBAAgB,EAAE;AACfX,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAxB6B;AA2B/CO,IAAAA,gBAAgB,EAAE;AACfZ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AA3B6B,GAAhC,EA+BpB;AACCY,IAAAA,UAAU,EAAE;AADb,GA/BoB,CAApB;;AAmCAhB,EAAAA,WAAW,CAACiB,SAAZ,GAAwB,UAACC,MAAD,EAAY;AACnClB,IAAAA,WAAW,CAACmB,OAAZ,CAAoBD,MAAM,CAACE,UAA3B;AACApB,IAAAA,WAAW,CAACmB,OAAZ,CAAoBD,MAAM,CAACG,MAA3B;AACA,GAHD;;AAKA,SAAOrB,WAAP;AACA,CA1CD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst proveedores = sequelize.define('proveedores', {\r\n\t\tproveedor_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n      proveedor_nombre: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_ruc: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_tipo: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_direccion: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_telefono: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_email: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_fecing: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tproveedores.associate = (models) => {\r\n\t\tproveedores.hasMany(models.documentos);\r\n\t\tproveedores.hasMany(models.gastos);\r\n\t}\r\n\t\r\n\treturn proveedores;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550200673812
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Repuesto.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Repuesto.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Repuesto.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Repuesto.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Repuesto.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var repuestos = sequelize.define('repuestos', {\n    repuesto_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    empleado_id: {\n      type: DataTypes.INTEGER\n    },\n    repuesto_codigo: {\n      type: DataTypes.STRING\n    },\n    repuesto_descripcion: {\n      type: DataTypes.STRING\n    },\n    repuesto_imagen: {\n      type: DataTypes.STRING\n    },\n    repuesto_fecingreso: {\n      type: DataTypes.STRING\n    },\n    repuesto_fecingreso2: {\n      type: DataTypes.DATE\n    },\n    repuesto_importe: {\n      type: DataTypes.DECIMAL\n    },\n    repuesto_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  repuestos.associate = function (models) {\n    repuestos.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n    repuestos.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n  };\n\n  return repuestos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcHVlc3RvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJyZXB1ZXN0b3MiLCJkZWZpbmUiLCJyZXB1ZXN0b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjYXJyb19pZCIsImVtcGxlYWRvX2lkIiwicmVwdWVzdG9fY29kaWdvIiwiU1RSSU5HIiwicmVwdWVzdG9fZGVzY3JpcGNpb24iLCJyZXB1ZXN0b19pbWFnZW4iLCJyZXB1ZXN0b19mZWNpbmdyZXNvIiwicmVwdWVzdG9fZmVjaW5ncmVzbzIiLCJEQVRFIiwicmVwdWVzdG9faW1wb3J0ZSIsIkRFQ0lNQUwiLCJyZXB1ZXN0b19lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiY2Fycm9zIiwiZm9yZWlnbktleSIsInRhcmdldEtleSIsImVtcGxlYWRvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxTQUFTLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixXQUFqQixFQUE4QjtBQUMvQ0MsSUFBQUEsV0FBVyxFQUFFO0FBQ1pDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURKO0FBRVpDLE1BQUFBLFVBQVUsRUFBRSxJQUZBO0FBR1pDLE1BQUFBLGFBQWEsRUFBRTtBQUhILEtBRGtDO0FBTS9DQyxJQUFBQSxRQUFRLEVBQUU7QUFDVEosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBRFAsS0FOcUM7QUFTL0NJLElBQUFBLFdBQVcsRUFBRTtBQUNaTCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFESixLQVRrQztBQVkvQ0ssSUFBQUEsZUFBZSxFQUFFO0FBQ2hCTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFEQSxLQVo4QjtBQWUvQ0MsSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVztBQURLLEtBZnlCO0FBa0IvQ0UsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCVCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFEQSxLQWxCOEI7QUFxQi9DRyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQlYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREksS0FyQjBCO0FBd0IvQ0ksSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJYLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDZ0I7QUFESyxLQXhCeUI7QUEyQi9DQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNqQmIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNrQjtBQURDLEtBM0I2QjtBQThCL0NDLElBQUFBLGVBQWUsRUFBRTtBQUNoQmYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREE7QUE5QjhCLEdBQTlCLEVBa0NsQjtBQUNDZSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQWxDa0IsQ0FBbEI7O0FBc0NBbkIsRUFBQUEsU0FBUyxDQUFDb0IsU0FBVixHQUFzQixVQUFDQyxNQUFELEVBQVk7QUFDakNyQixJQUFBQSxTQUFTLENBQUNzQixTQUFWLENBQW9CRCxNQUFNLENBQUNFLE1BQTNCLEVBQW1DO0FBQ2xDQyxNQUFBQSxVQUFVLEVBQUUsVUFEc0I7QUFFbENDLE1BQUFBLFNBQVMsRUFBRTtBQUZ1QixLQUFuQztBQUlBekIsSUFBQUEsU0FBUyxDQUFDc0IsU0FBVixDQUFvQkQsTUFBTSxDQUFDSyxTQUEzQixFQUFzQztBQUNyQ0YsTUFBQUEsVUFBVSxFQUFFLGFBRHlCO0FBRXJDQyxNQUFBQSxTQUFTLEVBQUU7QUFGMEIsS0FBdEM7QUFJQSxHQVREOztBQVdBLFNBQU96QixTQUFQO0FBQ0EsQ0FuREQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgcmVwdWVzdG9zID0gc2VxdWVsaXplLmRlZmluZSgncmVwdWVzdG9zJywge1xyXG5cdFx0cmVwdWVzdG9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjYXJyb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0cmVwdWVzdG9fY29kaWdvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19kZXNjcmlwY2lvbjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0cmVwdWVzdG9faW1hZ2VuOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19mZWNpbmdyZXNvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19mZWNpbmdyZXNvMjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURVxyXG5cdFx0fSxcclxuXHRcdHJlcHVlc3RvX2ltcG9ydGU6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLkRFQ0lNQUxcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcblx0fSk7XHJcblx0XHJcblx0cmVwdWVzdG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHJlcHVlc3Rvcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdFx0cmVwdWVzdG9zLmJlbG9uZ3NUbyhtb2RlbHMuZW1wbGVhZG9zLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdlbXBsZWFkb19pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2VtcGxlYWRvX2lkJ1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gcmVwdWVzdG9zOyBcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Repuesto.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "repuestos",
        "define",
        "repuesto_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_id",
        "empleado_id",
        "repuesto_codigo",
        "STRING",
        "repuesto_descripcion",
        "repuesto_imagen",
        "repuesto_fecingreso",
        "repuesto_fecingreso2",
        "DATE",
        "repuesto_importe",
        "DECIMAL",
        "repuesto_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey",
        "empleados"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC/CC,IAAAA,WAAW,EAAE;AACZC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADJ;AAEZC,MAAAA,UAAU,EAAE,IAFA;AAGZC,MAAAA,aAAa,EAAE;AAHH,KADkC;AAM/CC,IAAAA,QAAQ,EAAE;AACTJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KANqC;AAS/CI,IAAAA,WAAW,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADJ,KATkC;AAY/CK,IAAAA,eAAe,EAAE;AAChBN,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KAZ8B;AAe/CC,IAAAA,oBAAoB,EAAE;AACrBR,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADK,KAfyB;AAkB/CE,IAAAA,eAAe,EAAE;AAChBT,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KAlB8B;AAqB/CG,IAAAA,mBAAmB,EAAE;AACpBV,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADI,KArB0B;AAwB/CI,IAAAA,oBAAoB,EAAE;AACrBX,MAAAA,IAAI,EAAEJ,SAAS,CAACgB;AADK,KAxByB;AA2B/CC,IAAAA,gBAAgB,EAAE;AACjBb,MAAAA,IAAI,EAAEJ,SAAS,CAACkB;AADC,KA3B6B;AA8B/CC,IAAAA,eAAe,EAAE;AAChBf,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADA;AA9B8B,GAA9B,EAkClB;AACCe,IAAAA,UAAU,EAAE;AADb,GAlCkB,CAAlB;;AAsCAnB,EAAAA,SAAS,CAACoB,SAAV,GAAsB,UAACC,MAAD,EAAY;AACjCrB,IAAAA,SAAS,CAACsB,SAAV,CAAoBD,MAAM,CAACE,MAA3B,EAAmC;AAClCC,MAAAA,UAAU,EAAE,UADsB;AAElCC,MAAAA,SAAS,EAAE;AAFuB,KAAnC;AAIAzB,IAAAA,SAAS,CAACsB,SAAV,CAAoBD,MAAM,CAACK,SAA3B,EAAsC;AACrCF,MAAAA,UAAU,EAAE,aADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIA,GATD;;AAWA,SAAOzB,SAAP;AACA,CAnDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst repuestos = sequelize.define('repuestos', {\r\n\t\trepuesto_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\trepuesto_codigo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_descripcion: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_imagen: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_fecingreso: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_fecingreso2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t},\r\n\t\trepuesto_importe: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\trepuesto_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n\t});\r\n\t\r\n\trepuestos.associate = (models) => {\r\n\t\trepuestos.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t\trepuestos.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t}\r\n\r\n\treturn repuestos; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556661439731
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Tipodocumento.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Tipodocumento.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Tipodocumento.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Tipodocumento.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Tipodocumento.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var tipodocumentos = sequelize.define('tipodocumentos', {\n    tipodocumento_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    tipodocumento_nombre: {\n      type: DataTypes.STRING\n    },\n    tipodocumento_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  tipodocumentos.associate = function (models) {\n    tipodocumentos.hasMany(models.documentos);\n  };\n\n  return tipodocumentos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpcG9kb2N1bWVudG8uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInRpcG9kb2N1bWVudG9zIiwiZGVmaW5lIiwidGlwb2RvY3VtZW50b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJ0aXBvZG9jdW1lbnRvX25vbWJyZSIsIlNUUklORyIsInRpcG9kb2N1bWVudG9fZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJkb2N1bWVudG9zIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQzFDLE1BQU1DLGNBQWMsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLGdCQUFqQixFQUFtQztBQUN6REMsSUFBQUEsZ0JBQWdCLEVBQUU7QUFDakJDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURDO0FBRWpCQyxNQUFBQSxVQUFVLEVBQUUsSUFGSztBQUdqQkMsTUFBQUEsYUFBYSxFQUFFO0FBSEUsS0FEdUM7QUFNckRDLElBQUFBLG9CQUFvQixFQUFFO0FBQ25CSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERyxLQU4rQjtBQVNyREMsSUFBQUEsb0JBQW9CLEVBQUU7QUFDbkJOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURHO0FBVCtCLEdBQW5DLEVBYXZCO0FBQ0NNLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBYnVCLENBQXZCOztBQWlCQVYsRUFBQUEsY0FBYyxDQUFDVyxTQUFmLEdBQTJCLFVBQUNDLE1BQUQsRUFBWTtBQUN0Q1osSUFBQUEsY0FBYyxDQUFDYSxPQUFmLENBQXVCRCxNQUFNLENBQUNFLFVBQTlCO0FBQ0EsR0FGRDs7QUFJQSxTQUFPZCxjQUFQO0FBQ0EsQ0F2QkQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgdGlwb2RvY3VtZW50b3MgPSBzZXF1ZWxpemUuZGVmaW5lKCd0aXBvZG9jdW1lbnRvcycsIHtcclxuXHRcdHRpcG9kb2N1bWVudG9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcbiAgICAgIHRpcG9kb2N1bWVudG9fbm9tYnJlOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgdGlwb2RvY3VtZW50b19lc3RhZG86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuICAgICAgfVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdHRpcG9kb2N1bWVudG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHRpcG9kb2N1bWVudG9zLmhhc01hbnkobW9kZWxzLmRvY3VtZW50b3MpO1xyXG5cdH1cclxuXHRcclxuXHRyZXR1cm4gdGlwb2RvY3VtZW50b3M7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Tipodocumento.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "tipodocumentos",
        "define",
        "tipodocumento_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "tipodocumento_nombre",
        "STRING",
        "tipodocumento_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "documentos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,cAAc,GAAGF,SAAS,CAACG,MAAV,CAAiB,gBAAjB,EAAmC;AACzDC,IAAAA,gBAAgB,EAAE;AACjBC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADC;AAEjBC,MAAAA,UAAU,EAAE,IAFK;AAGjBC,MAAAA,aAAa,EAAE;AAHE,KADuC;AAMrDC,IAAAA,oBAAoB,EAAE;AACnBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KAN+B;AASrDC,IAAAA,oBAAoB,EAAE;AACnBN,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADG;AAT+B,GAAnC,EAavB;AACCM,IAAAA,UAAU,EAAE;AADb,GAbuB,CAAvB;;AAiBAV,EAAAA,cAAc,CAACW,SAAf,GAA2B,UAACC,MAAD,EAAY;AACtCZ,IAAAA,cAAc,CAACa,OAAf,CAAuBD,MAAM,CAACE,UAA9B;AACA,GAFD;;AAIA,SAAOd,cAAP;AACA,CAvBD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst tipodocumentos = sequelize.define('tipodocumentos', {\r\n\t\ttipodocumento_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n      tipodocumento_nombre: {\r\n         type: DataTypes.STRING\r\n      },\r\n      tipodocumento_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\ttipodocumentos.associate = (models) => {\r\n\t\ttipodocumentos.hasMany(models.documentos);\r\n\t}\r\n\t\r\n\treturn tipodocumentos;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547778314619
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Tipotramite.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Tipotramite.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Tipotramite.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Tipotramite.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Tipotramite.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var tipotramites = sequelize.define('tipotramites', {\n    tipotramite_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    tipotramite_describe: {\n      type: DataTypes.STRING\n    },\n    tipotramite_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  tipotramites.associate = function (models) {\n    tipotramites.hasMany(models.tramites);\n  };\n\n  return tipotramites;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpcG90cmFtaXRlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJ0aXBvdHJhbWl0ZXMiLCJkZWZpbmUiLCJ0aXBvdHJhbWl0ZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJ0aXBvdHJhbWl0ZV9kZXNjcmliZSIsIlNUUklORyIsInRpcG90cmFtaXRlX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwidHJhbWl0ZXMiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDMUMsTUFBTUMsWUFBWSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsY0FBakIsRUFBaUM7QUFDckRDLElBQUFBLGNBQWMsRUFBRTtBQUNmQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FERDtBQUVmQyxNQUFBQSxVQUFVLEVBQUUsSUFGRztBQUdmQyxNQUFBQSxhQUFhLEVBQUU7QUFIQSxLQURxQztBQU1yREMsSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJKLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURLLEtBTitCO0FBU3JEQyxJQUFBQSxrQkFBa0IsRUFBRTtBQUNuQk4sTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREc7QUFUaUMsR0FBakMsRUFhckI7QUFDQ00sSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0FicUIsQ0FBckI7O0FBaUJBVixFQUFBQSxZQUFZLENBQUNXLFNBQWIsR0FBeUIsVUFBQ0MsTUFBRCxFQUFZO0FBQ3BDWixJQUFBQSxZQUFZLENBQUNhLE9BQWIsQ0FBcUJELE1BQU0sQ0FBQ0UsUUFBNUI7QUFDQSxHQUZEOztBQUlBLFNBQU9kLFlBQVA7QUFDQSxDQXZCRCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuXHRjb25zdCB0aXBvdHJhbWl0ZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCd0aXBvdHJhbWl0ZXMnLCB7XHJcblx0XHR0aXBvdHJhbWl0ZV9pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuXHRcdFx0cHJpbWFyeUtleTogdHJ1ZSxcclxuXHRcdFx0YXV0b0luY3JlbWVudDogdHJ1ZVxyXG5cdFx0fSxcclxuXHRcdHRpcG90cmFtaXRlX2Rlc2NyaWJlOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHR0aXBvdHJhbWl0ZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcblx0fSk7XHJcblxyXG5cdHRpcG90cmFtaXRlcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcblx0XHR0aXBvdHJhbWl0ZXMuaGFzTWFueShtb2RlbHMudHJhbWl0ZXMpO1xyXG5cdH1cclxuXHRcclxuXHRyZXR1cm4gdGlwb3RyYW1pdGVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Tipotramite.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "tipotramites",
        "define",
        "tipotramite_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "tipotramite_describe",
        "STRING",
        "tipotramite_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "tramites"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAiB,cAAjB,EAAiC;AACrDC,IAAAA,cAAc,EAAE;AACfC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADD;AAEfC,MAAAA,UAAU,EAAE,IAFG;AAGfC,MAAAA,aAAa,EAAE;AAHA,KADqC;AAMrDC,IAAAA,oBAAoB,EAAE;AACrBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADK,KAN+B;AASrDC,IAAAA,kBAAkB,EAAE;AACnBN,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADG;AATiC,GAAjC,EAarB;AACCM,IAAAA,UAAU,EAAE;AADb,GAbqB,CAArB;;AAiBAV,EAAAA,YAAY,CAACW,SAAb,GAAyB,UAACC,MAAD,EAAY;AACpCZ,IAAAA,YAAY,CAACa,OAAb,CAAqBD,MAAM,CAACE,QAA5B;AACA,GAFD;;AAIA,SAAOd,YAAP;AACA,CAvBD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst tipotramites = sequelize.define('tipotramites', {\r\n\t\ttipotramite_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\ttipotramite_describe: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\ttipotramite_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n\t});\r\n\r\n\ttipotramites.associate = (models) => {\r\n\t\ttipotramites.hasMany(models.tramites);\r\n\t}\r\n\t\r\n\treturn tipotramites;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547773151104
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Tramite.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Tramite.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Tramite.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Tramite.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Tramite.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var tramites = sequelize.define('tramites', {\n    tramite_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    tramite_fecsalida: {\n      type: DataTypes.STRING\n    },\n    tramite_fecregreso: {\n      type: DataTypes.STRING\n    },\n    tramite_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  tramites.associate = function (models) {\n    tramites.belongsTo(models.documentos, {\n      foreignKey: 'documento_id',\n      targetKey: 'documento_id'\n    });\n    tramites.belongsTo(models.tipotramites, {\n      foreignKey: 'tipotramite_id',\n      targetKey: 'tipotramite_id'\n    });\n    tramites.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n  };\n\n  return tramites;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRyYW1pdGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInRyYW1pdGVzIiwiZGVmaW5lIiwidHJhbWl0ZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJ0cmFtaXRlX2ZlY3NhbGlkYSIsIlNUUklORyIsInRyYW1pdGVfZmVjcmVncmVzbyIsInRyYW1pdGVfZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsImRvY3VtZW50b3MiLCJmb3JlaWduS2V5IiwidGFyZ2V0S2V5IiwidGlwb3RyYW1pdGVzIiwiZW1wbGVhZG9zIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQzFDLE1BQU1DLFFBQVEsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFVBQWpCLEVBQTZCO0FBQzdDQyxJQUFBQSxVQUFVLEVBQUU7QUFDWEMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE9BREw7QUFFWEMsTUFBQUEsVUFBVSxFQUFFLElBRkQ7QUFHWEMsTUFBQUEsYUFBYSxFQUFFO0FBSEosS0FEaUM7QUFNN0NDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQU4wQjtBQVM3Q0MsSUFBQUEsa0JBQWtCLEVBQUU7QUFDbkJOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURHLEtBVHlCO0FBWTdDRSxJQUFBQSxjQUFjLEVBQUU7QUFDZlAsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREQ7QUFaNkIsR0FBN0IsRUFnQmpCO0FBQ0NPLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBaEJpQixDQUFqQjs7QUFvQkFYLEVBQUFBLFFBQVEsQ0FBQ1ksU0FBVCxHQUFxQixVQUFDQyxNQUFELEVBQVk7QUFDaENiLElBQUFBLFFBQVEsQ0FBQ2MsU0FBVCxDQUFtQkQsTUFBTSxDQUFDRSxVQUExQixFQUFzQztBQUNyQ0MsTUFBQUEsVUFBVSxFQUFFLGNBRHlCO0FBRXJDQyxNQUFBQSxTQUFTLEVBQUU7QUFGMEIsS0FBdEM7QUFJQWpCLElBQUFBLFFBQVEsQ0FBQ2MsU0FBVCxDQUFtQkQsTUFBTSxDQUFDSyxZQUExQixFQUF3QztBQUN2Q0YsTUFBQUEsVUFBVSxFQUFFLGdCQUQyQjtBQUV2Q0MsTUFBQUEsU0FBUyxFQUFFO0FBRjRCLEtBQXhDO0FBSUFqQixJQUFBQSxRQUFRLENBQUNjLFNBQVQsQ0FBbUJELE1BQU0sQ0FBQ00sU0FBMUIsRUFBcUM7QUFDcENILE1BQUFBLFVBQVUsRUFBRSxhQUR3QjtBQUVwQ0MsTUFBQUEsU0FBUyxFQUFFO0FBRnlCLEtBQXJDO0FBSUEsR0FiRDs7QUFlQSxTQUFPakIsUUFBUDtBQUNBLENBckNEIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IHRyYW1pdGVzID0gc2VxdWVsaXplLmRlZmluZSgndHJhbWl0ZXMnLCB7XHJcblx0XHR0cmFtaXRlX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0dHJhbWl0ZV9mZWNzYWxpZGE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdHRyYW1pdGVfZmVjcmVncmVzbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dHJhbWl0ZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcblx0fSk7XHJcblxyXG5cdHRyYW1pdGVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHRyYW1pdGVzLmJlbG9uZ3NUbyhtb2RlbHMuZG9jdW1lbnRvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnZG9jdW1lbnRvX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnZG9jdW1lbnRvX2lkJ1xyXG5cdFx0fSk7XHJcblx0XHR0cmFtaXRlcy5iZWxvbmdzVG8obW9kZWxzLnRpcG90cmFtaXRlcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAndGlwb3RyYW1pdGVfaWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICd0aXBvdHJhbWl0ZV9pZCdcclxuXHRcdH0pO1xyXG5cdFx0dHJhbWl0ZXMuYmVsb25nc1RvKG1vZGVscy5lbXBsZWFkb3MsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ2VtcGxlYWRvX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnZW1wbGVhZG9faWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIHRyYW1pdGVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Tramite.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "tramites",
        "define",
        "tramite_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "tramite_fecsalida",
        "STRING",
        "tramite_fecregreso",
        "tramite_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "documentos",
        "foreignKey",
        "targetKey",
        "tipotramites",
        "empleados"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC7CC,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADL;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KADiC;AAM7CC,IAAAA,iBAAiB,EAAE;AAClBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KAN0B;AAS7CC,IAAAA,kBAAkB,EAAE;AACnBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KATyB;AAY7CE,IAAAA,cAAc,EAAE;AACfP,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AAZ6B,GAA7B,EAgBjB;AACCO,IAAAA,UAAU,EAAE;AADb,GAhBiB,CAAjB;;AAoBAX,EAAAA,QAAQ,CAACY,SAAT,GAAqB,UAACC,MAAD,EAAY;AAChCb,IAAAA,QAAQ,CAACc,SAAT,CAAmBD,MAAM,CAACE,UAA1B,EAAsC;AACrCC,MAAAA,UAAU,EAAE,cADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIAjB,IAAAA,QAAQ,CAACc,SAAT,CAAmBD,MAAM,CAACK,YAA1B,EAAwC;AACvCF,MAAAA,UAAU,EAAE,gBAD2B;AAEvCC,MAAAA,SAAS,EAAE;AAF4B,KAAxC;AAIAjB,IAAAA,QAAQ,CAACc,SAAT,CAAmBD,MAAM,CAACM,SAA1B,EAAqC;AACpCH,MAAAA,UAAU,EAAE,aADwB;AAEpCC,MAAAA,SAAS,EAAE;AAFyB,KAArC;AAIA,GAbD;;AAeA,SAAOjB,QAAP;AACA,CArCD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst tramites = sequelize.define('tramites', {\r\n\t\ttramite_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\ttramite_fecsalida: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\ttramite_fecregreso: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\ttramite_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n\t});\r\n\r\n\ttramites.associate = (models) => {\r\n\t\ttramites.belongsTo(models.documentos, {\r\n\t\t\tforeignKey: 'documento_id',\r\n\t\t\ttargetKey: 'documento_id'\r\n\t\t});\r\n\t\ttramites.belongsTo(models.tipotramites, {\r\n\t\t\tforeignKey: 'tipotramite_id',\r\n\t\t\ttargetKey: 'tipotramite_id'\r\n\t\t});\r\n\t\ttramites.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn tramites;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547848110815
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Viaje.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Viaje.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Viaje.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Viaje.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Viaje.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var viajes = sequelize.define('viajes', {\n    viaje_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    empleado_id: {\n      type: DataTypes.INTEGER\n    },\n    lugarp_nombre: {\n      type: DataTypes.STRING\n    },\n    lugar_id: {\n      type: DataTypes.INTEGER\n    },\n    cliente_id: {\n      type: DataTypes.INTEGER\n    },\n    cliented_nombre: {\n      type: DataTypes.STRING\n    },\n    viaje_grt: {\n      type: DataTypes.STRING\n    },\n    viaje_detalle: {\n      type: DataTypes.STRING\n    },\n    viaje_fecsalida: {\n      type: DataTypes.STRING\n    },\n    viaje_fecsalida2: {\n      type: DataTypes.DATE\n    },\n    viaje_fecrecibido: {\n      type: DataTypes.STRING\n    },\n    viaje_factura: {\n      type: DataTypes.STRING\n    },\n    viaje_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  viajes.associate = function (models) {\n    viajes.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n    viajes.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n    viajes.belongsTo(models.lugares, {\n      foreignKey: 'lugar_id',\n      targetKey: 'lugar_id'\n    });\n    viajes.belongsTo(models.clientes, {\n      foreignKey: 'cliente_id',\n      targetKey: 'cliente_id'\n    });\n  };\n\n  return viajes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpYWplLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJ2aWFqZXMiLCJkZWZpbmUiLCJ2aWFqZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjYXJyb19pZCIsImVtcGxlYWRvX2lkIiwibHVnYXJwX25vbWJyZSIsIlNUUklORyIsImx1Z2FyX2lkIiwiY2xpZW50ZV9pZCIsImNsaWVudGVkX25vbWJyZSIsInZpYWplX2dydCIsInZpYWplX2RldGFsbGUiLCJ2aWFqZV9mZWNzYWxpZGEiLCJ2aWFqZV9mZWNzYWxpZGEyIiwiREFURSIsInZpYWplX2ZlY3JlY2liaWRvIiwidmlhamVfZmFjdHVyYSIsInZpYWplX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJjYXJyb3MiLCJmb3JlaWduS2V5IiwidGFyZ2V0S2V5IiwiZW1wbGVhZG9zIiwibHVnYXJlcyIsImNsaWVudGVzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQzFDLE1BQU1DLE1BQU0sR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFFBQWpCLEVBQTJCO0FBQ3pDQyxJQUFBQSxRQUFRLEVBQUU7QUFDVEMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE9BRFA7QUFFVEMsTUFBQUEsVUFBVSxFQUFFLElBRkg7QUFHVEMsTUFBQUEsYUFBYSxFQUFFO0FBSE4sS0FEK0I7QUFNekNDLElBQUFBLFFBQVEsRUFBRTtBQUNUSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEUCxLQU4rQjtBQVN6Q0ksSUFBQUEsV0FBVyxFQUFFO0FBQ1pMLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURKLEtBVDRCO0FBWXpDSyxJQUFBQSxhQUFhLEVBQUU7QUFDZE4sTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREYsS0FaMEI7QUFlekNDLElBQUFBLFFBQVEsRUFBRTtBQUNUUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEUCxLQWYrQjtBQWtCekNRLElBQUFBLFVBQVUsRUFBRTtBQUNYVCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFETCxLQWxCNkI7QUFxQnpDUyxJQUFBQSxlQUFlLEVBQUU7QUFDaEJWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVztBQURBLEtBckJ3QjtBQXdCekNJLElBQUFBLFNBQVMsRUFBRTtBQUNWWCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFETixLQXhCOEI7QUEyQnpDSyxJQUFBQSxhQUFhLEVBQUU7QUFDZFosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREYsS0EzQjBCO0FBOEJ6Q00sSUFBQUEsZUFBZSxFQUFFO0FBQ2hCYixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFEQSxLQTlCd0I7QUFpQ3pDTyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNqQmQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNtQjtBQURDLEtBakN1QjtBQW9DekNDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCaEIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREUsS0FwQ3NCO0FBdUN6Q1UsSUFBQUEsYUFBYSxFQUFFO0FBQ2RqQixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFERixLQXZDMEI7QUEwQ3pDVyxJQUFBQSxZQUFZLEVBQUU7QUFDYmxCLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURIO0FBMUMyQixHQUEzQixFQThDZjtBQUNDa0IsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0E5Q2UsQ0FBZjs7QUFrREF0QixFQUFBQSxNQUFNLENBQUN1QixTQUFQLEdBQW1CLFVBQUNDLE1BQUQsRUFBWTtBQUM5QnhCLElBQUFBLE1BQU0sQ0FBQ3lCLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ0UsTUFBeEIsRUFBZ0M7QUFDL0JDLE1BQUFBLFVBQVUsRUFBRSxVQURtQjtBQUUvQkMsTUFBQUEsU0FBUyxFQUFFO0FBRm9CLEtBQWhDO0FBSUE1QixJQUFBQSxNQUFNLENBQUN5QixTQUFQLENBQWlCRCxNQUFNLENBQUNLLFNBQXhCLEVBQW1DO0FBQ2xDRixNQUFBQSxVQUFVLEVBQUUsYUFEc0I7QUFFbENDLE1BQUFBLFNBQVMsRUFBRTtBQUZ1QixLQUFuQztBQUlBNUIsSUFBQUEsTUFBTSxDQUFDeUIsU0FBUCxDQUFpQkQsTUFBTSxDQUFDTSxPQUF4QixFQUFpQztBQUNoQ0gsTUFBQUEsVUFBVSxFQUFFLFVBRG9CO0FBRWhDQyxNQUFBQSxTQUFTLEVBQUU7QUFGcUIsS0FBakM7QUFJQTVCLElBQUFBLE1BQU0sQ0FBQ3lCLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ08sUUFBeEIsRUFBa0M7QUFDakNKLE1BQUFBLFVBQVUsRUFBRSxZQURxQjtBQUVqQ0MsTUFBQUEsU0FBUyxFQUFFO0FBRnNCLEtBQWxDO0FBSUEsR0FqQkQ7O0FBbUJBLFNBQU81QixNQUFQO0FBQ0EsQ0F2RUQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgdmlhamVzID0gc2VxdWVsaXplLmRlZmluZSgndmlhamVzJywge1xyXG5cdFx0dmlhamVfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjYXJyb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0bHVnYXJwX25vbWJyZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0bHVnYXJfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0Y2xpZW50ZWRfbm9tYnJlOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHR2aWFqZV9ncnQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdHZpYWplX2RldGFsbGU6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdHZpYWplX2ZlY3NhbGlkYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dmlhamVfZmVjc2FsaWRhMjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURVxyXG5cdFx0fSwgXHJcblx0XHR2aWFqZV9mZWNyZWNpYmlkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dmlhamVfZmFjdHVyYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dmlhamVfZXN0YWRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0dmlhamVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHZpYWplcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdFx0dmlhamVzLmJlbG9uZ3NUbyhtb2RlbHMuZW1wbGVhZG9zLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdlbXBsZWFkb19pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2VtcGxlYWRvX2lkJ1xyXG5cdFx0fSk7XHJcblx0XHR2aWFqZXMuYmVsb25nc1RvKG1vZGVscy5sdWdhcmVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdsdWdhcl9pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2x1Z2FyX2lkJ1xyXG5cdFx0fSk7XHJcblx0XHR2aWFqZXMuYmVsb25nc1RvKG1vZGVscy5jbGllbnRlcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2xpZW50ZV9pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2NsaWVudGVfaWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0IFxyXG5cdHJldHVybiB2aWFqZXM7IFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Viaje.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "viajes",
        "define",
        "viaje_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_id",
        "empleado_id",
        "lugarp_nombre",
        "STRING",
        "lugar_id",
        "cliente_id",
        "cliented_nombre",
        "viaje_grt",
        "viaje_detalle",
        "viaje_fecsalida",
        "viaje_fecsalida2",
        "DATE",
        "viaje_fecrecibido",
        "viaje_factura",
        "viaje_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey",
        "empleados",
        "lugares",
        "clientes"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACzCC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAD+B;AAMzCC,IAAAA,QAAQ,EAAE;AACTJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAN+B;AASzCI,IAAAA,WAAW,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADJ,KAT4B;AAYzCK,IAAAA,aAAa,EAAE;AACdN,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAZ0B;AAezCC,IAAAA,QAAQ,EAAE;AACTR,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAf+B;AAkBzCQ,IAAAA,UAAU,EAAE;AACXT,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADL,KAlB6B;AAqBzCS,IAAAA,eAAe,EAAE;AAChBV,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KArBwB;AAwBzCI,IAAAA,SAAS,EAAE;AACVX,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADN,KAxB8B;AA2BzCK,IAAAA,aAAa,EAAE;AACdZ,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KA3B0B;AA8BzCM,IAAAA,eAAe,EAAE;AAChBb,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KA9BwB;AAiCzCO,IAAAA,gBAAgB,EAAE;AACjBd,MAAAA,IAAI,EAAEJ,SAAS,CAACmB;AADC,KAjCuB;AAoCzCC,IAAAA,iBAAiB,EAAE;AAClBhB,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADE,KApCsB;AAuCzCU,IAAAA,aAAa,EAAE;AACdjB,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAvC0B;AA0CzCW,IAAAA,YAAY,EAAE;AACblB,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AA1C2B,GAA3B,EA8Cf;AACCkB,IAAAA,UAAU,EAAE;AADb,GA9Ce,CAAf;;AAkDAtB,EAAAA,MAAM,CAACuB,SAAP,GAAmB,UAACC,MAAD,EAAY;AAC9BxB,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACE,MAAxB,EAAgC;AAC/BC,MAAAA,UAAU,EAAE,UADmB;AAE/BC,MAAAA,SAAS,EAAE;AAFoB,KAAhC;AAIA5B,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACK,SAAxB,EAAmC;AAClCF,MAAAA,UAAU,EAAE,aADsB;AAElCC,MAAAA,SAAS,EAAE;AAFuB,KAAnC;AAIA5B,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACM,OAAxB,EAAiC;AAChCH,MAAAA,UAAU,EAAE,UADoB;AAEhCC,MAAAA,SAAS,EAAE;AAFqB,KAAjC;AAIA5B,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACO,QAAxB,EAAkC;AACjCJ,MAAAA,UAAU,EAAE,YADqB;AAEjCC,MAAAA,SAAS,EAAE;AAFsB,KAAlC;AAIA,GAjBD;;AAmBA,SAAO5B,MAAP;AACA,CAvED",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst viajes = sequelize.define('viajes', {\r\n\t\tviaje_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tlugarp_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tlugar_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tcliente_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tcliented_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_grt: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_detalle: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_fecsalida: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_fecsalida2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t}, \r\n\t\tviaje_fecrecibido: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_factura: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tviajes.associate = (models) => {\r\n\t\tviajes.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t\tviajes.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t\tviajes.belongsTo(models.lugares, {\r\n\t\t\tforeignKey: 'lugar_id',\r\n\t\t\ttargetKey: 'lugar_id'\r\n\t\t});\r\n\t\tviajes.belongsTo(models.clientes, {\r\n\t\t\tforeignKey: 'cliente_id',\r\n\t\t\ttargetKey: 'cliente_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn viajes; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554823422963
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\libs\\\\middlewares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\libs\\middlewares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\libs\\middlewares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\libs\\middlewares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\libs",
        "sourceFileName": "middlewares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.set('port', process.env.port || 3000);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwicG9ydCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUN2QkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBcEM7QUFDQSxDQUZEIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxsaWJzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cdGFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5wb3J0IHx8IDMwMDApOyBcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "middlewares.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "set",
        "process",
        "env",
        "port"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACA,CAFD",
      "sourceRoot": "D:\\dassis\\sis\\src\\libs",
      "sourcesContent": [
        "module.exports = app => {\r\n\tapp.set('port', process.env.port || 3000); \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550073620039
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\carros.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\carros.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\carros.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\carros.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "carros.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Carro = app.db.models.carros; // add carros\n\n  app.get('/carros', function (req, res) {\n    Carro.findAll({\n      where: {\n        carro_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // update carros\n\n  app.put('/carros/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.placa + \"\\n\")\n    if (!req.body.placa) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Carro.update({\n        carro_constancia: req.body.constancia,\n        carro_seriechasis: req.body.seriechasis,\n        carro_categoria: req.body.categoria,\n        carro_modelo: req.body.modelo,\n        carro_placa: req.body.placa,\n        carro_marca: req.body.marca,\n        carro_ejes: req.body.ejes,\n        carro_aniofab: req.body.aniofab,\n        carro_carga: req.body.carga,\n        carro_soatfec: req.body.soatfec,\n        carro_revtecfec: req.body.revtecfec,\n        carro_extinfec: req.body.extinfec\n      }, {\n        where: {\n          carro_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Carro Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcnJvcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiQ2Fycm8iLCJkYiIsIm1vZGVscyIsImNhcnJvcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ3aGVyZSIsImNhcnJvX2VzdGFkbyIsInRoZW4iLCJyZXN1bHQiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsImJvZHkiLCJwdXQiLCJwbGFjYSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJjYXJyb19jb25zdGFuY2lhIiwiY29uc3RhbmNpYSIsImNhcnJvX3NlcmllY2hhc2lzIiwic2VyaWVjaGFzaXMiLCJjYXJyb19jYXRlZ29yaWEiLCJjYXRlZ29yaWEiLCJjYXJyb19tb2RlbG8iLCJtb2RlbG8iLCJjYXJyb19wbGFjYSIsImNhcnJvX21hcmNhIiwibWFyY2EiLCJjYXJyb19lamVzIiwiZWplcyIsImNhcnJvX2FuaW9mYWIiLCJhbmlvZmFiIiwiY2Fycm9fY2FyZ2EiLCJjYXJnYSIsImNhcnJvX3NvYXRmZWMiLCJzb2F0ZmVjIiwiY2Fycm9fcmV2dGVjZmVjIiwicmV2dGVjZmVjIiwiY2Fycm9fZXh0aW5mZWMiLCJleHRpbmZlYyIsImNhcnJvX2lkIiwicGFyYW1zIiwiaWQiLCJzZW5kIiwiZXJyIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLEtBQUssR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsTUFBNUIsQ0FEc0IsQ0FHdEI7O0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFNBQVIsRUFBbUIsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDL0JOLElBQUFBLEtBQUssQ0FBQ08sT0FBTixDQUFjO0FBQUNDLE1BQUFBLEtBQUssRUFBRTtBQUFDQyxRQUFBQSxZQUFZLEVBQUU7QUFBZjtBQUFSLEtBQWQsRUFDQ0MsSUFERCxDQUNNLFVBQUFDLE1BQU07QUFBQSxhQUFJTCxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVCxDQUFKO0FBQUEsS0FEWixFQUVDRSxLQUZELENBRU8sVUFBQUMsS0FBSyxFQUFJO0FBQUVSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCUCxHQUFHLENBQUNXLElBQXpCO0FBQWdDLEtBRmxEO0FBR0EsR0FKRCxFQUpzQixDQVV0Qjs7QUFDQWpCLEVBQUFBLEdBQUcsQ0FBQ2tCLEdBQUosQ0FBUSxhQUFSLEVBQXVCLFVBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2xDO0FBQ0EsUUFBRyxDQUFDRCxHQUFHLENBQUNXLElBQUosQ0FBU0UsS0FBYixFQUNBO0FBQ0NaLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVg7QUFDQUksTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUNBZCxNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDVyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NoQixNQUFBQSxLQUFLLENBQUNxQixNQUFOLENBQ0M7QUFBRUMsUUFBQUEsZ0JBQWdCLEVBQUVqQixHQUFHLENBQUNXLElBQUosQ0FBU08sVUFBN0I7QUFBeUNDLFFBQUFBLGlCQUFpQixFQUFFbkIsR0FBRyxDQUFDVyxJQUFKLENBQVNTLFdBQXJFO0FBQWtGQyxRQUFBQSxlQUFlLEVBQUVyQixHQUFHLENBQUNXLElBQUosQ0FBU1csU0FBNUc7QUFBdUhDLFFBQUFBLFlBQVksRUFBRXZCLEdBQUcsQ0FBQ1csSUFBSixDQUFTYSxNQUE5STtBQUFzSkMsUUFBQUEsV0FBVyxFQUFFekIsR0FBRyxDQUFDVyxJQUFKLENBQVNFLEtBQTVLO0FBQW1MYSxRQUFBQSxXQUFXLEVBQUUxQixHQUFHLENBQUNXLElBQUosQ0FBU2dCLEtBQXpNO0FBQWdOQyxRQUFBQSxVQUFVLEVBQUU1QixHQUFHLENBQUNXLElBQUosQ0FBU2tCLElBQXJPO0FBQTJPQyxRQUFBQSxhQUFhLEVBQUU5QixHQUFHLENBQUNXLElBQUosQ0FBU29CLE9BQW5RO0FBQTRRQyxRQUFBQSxXQUFXLEVBQUVoQyxHQUFHLENBQUNXLElBQUosQ0FBU3NCLEtBQWxTO0FBQXlTQyxRQUFBQSxhQUFhLEVBQUVsQyxHQUFHLENBQUNXLElBQUosQ0FBU3dCLE9BQWpVO0FBQTBVQyxRQUFBQSxlQUFlLEVBQUVwQyxHQUFHLENBQUNXLElBQUosQ0FBUzBCLFNBQXBXO0FBQStXQyxRQUFBQSxjQUFjLEVBQUV0QyxHQUFHLENBQUNXLElBQUosQ0FBUzRCO0FBQXhZLE9BREQsRUFDcVo7QUFBRXBDLFFBQUFBLEtBQUssRUFBRTtBQUFDcUMsVUFBQUEsUUFBUSxFQUFFeEMsR0FBRyxDQUFDeUMsTUFBSixDQUFXQztBQUF0QjtBQUFULE9BRHJaLEVBR0NyQyxJQUhELENBR00sWUFBSTtBQUNUSixRQUFBQSxHQUFHLENBQUMwQyxJQUFKLENBQVMsa0JBQVQ7QUFDQSxPQUxELEVBTUNsQyxLQU5ELENBTU8sVUFBQW1DLEdBQUcsRUFBSTtBQUNiM0MsUUFBQUEsR0FBRyxDQUFDMEMsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FSRDtBQVNBO0FBQ0QsR0FwQkQ7QUFxQkEsQ0FoQ0QiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IENhcnJvID0gYXBwLmRiLm1vZGVscy5jYXJyb3M7XHJcblxyXG5cdC8vIGFkZCBjYXJyb3NcclxuXHRhcHAuZ2V0KCcvY2Fycm9zJywgKHJlcSxyZXMpID0+IHtcclxuXHRcdENhcnJvLmZpbmRBbGwoe3doZXJlOiB7Y2Fycm9fZXN0YWRvOiAxfX0pXHJcblx0XHQudGhlbihyZXN1bHQgPT4gcmVzLmpzb24ocmVzdWx0KSlcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7IHJlcy5zdGF0dXMoNDEyKS5qc29uKHJlcS5ib2R5KSB9KSBcclxuXHR9KTtcclxuXHJcblx0Ly8gdXBkYXRlIGNhcnJvc1xyXG5cdGFwcC5wdXQoJy9jYXJyb3MvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0Ly8gY29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LnBsYWNhICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5wbGFjYSlcclxuXHRcdHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0XHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUFVUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRDYXJyby51cGRhdGUoXHJcblx0XHRcdFx0eyBjYXJyb19jb25zdGFuY2lhOiByZXEuYm9keS5jb25zdGFuY2lhLCBjYXJyb19zZXJpZWNoYXNpczogcmVxLmJvZHkuc2VyaWVjaGFzaXMsIGNhcnJvX2NhdGVnb3JpYTogcmVxLmJvZHkuY2F0ZWdvcmlhLCBjYXJyb19tb2RlbG86IHJlcS5ib2R5Lm1vZGVsbywgY2Fycm9fcGxhY2E6IHJlcS5ib2R5LnBsYWNhLCBjYXJyb19tYXJjYTogcmVxLmJvZHkubWFyY2EsIGNhcnJvX2VqZXM6IHJlcS5ib2R5LmVqZXMsIGNhcnJvX2FuaW9mYWI6IHJlcS5ib2R5LmFuaW9mYWIsIGNhcnJvX2NhcmdhOiByZXEuYm9keS5jYXJnYSwgY2Fycm9fc29hdGZlYzogcmVxLmJvZHkuc29hdGZlYywgY2Fycm9fcmV2dGVjZmVjOiByZXEuYm9keS5yZXZ0ZWNmZWMsIGNhcnJvX2V4dGluZmVjOiByZXEuYm9keS5leHRpbmZlYyB9LCB7IHdoZXJlOiB7Y2Fycm9faWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHRcdFx0KVxyXG5cdFx0XHQudGhlbigoKT0+e1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdDYXJybyBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "carros.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Carro",
        "db",
        "models",
        "carros",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "carro_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "put",
        "placa",
        "console",
        "log",
        "update",
        "carro_constancia",
        "constancia",
        "carro_seriechasis",
        "seriechasis",
        "carro_categoria",
        "categoria",
        "carro_modelo",
        "modelo",
        "carro_placa",
        "carro_marca",
        "marca",
        "carro_ejes",
        "ejes",
        "carro_aniofab",
        "aniofab",
        "carro_carga",
        "carga",
        "carro_soatfec",
        "soatfec",
        "carro_revtecfec",
        "revtecfec",
        "carro_extinfec",
        "extinfec",
        "carro_id",
        "params",
        "id",
        "send",
        "err"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B,CADsB,CAGtB;;AACAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC/BN,IAAAA,KAAK,CAACO,OAAN,CAAc;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAAR,KAAd,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AAAER,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBP,GAAG,CAACW,IAAzB;AAAgC,KAFlD;AAGA,GAJD,EAJsB,CAUtB;;AACAjB,EAAAA,GAAG,CAACkB,GAAJ,CAAQ,aAAR,EAAuB,UAACZ,GAAD,EAAMC,GAAN,EAAY;AAClC;AACA,QAAG,CAACD,GAAG,CAACW,IAAJ,CAASE,KAAb,EACA;AACCZ,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAd,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACW,IAAb;AACA,KALD,MAOA;AACChB,MAAAA,KAAK,CAACqB,MAAN,CACC;AAAEC,QAAAA,gBAAgB,EAAEjB,GAAG,CAACW,IAAJ,CAASO,UAA7B;AAAyCC,QAAAA,iBAAiB,EAAEnB,GAAG,CAACW,IAAJ,CAASS,WAArE;AAAkFC,QAAAA,eAAe,EAAErB,GAAG,CAACW,IAAJ,CAASW,SAA5G;AAAuHC,QAAAA,YAAY,EAAEvB,GAAG,CAACW,IAAJ,CAASa,MAA9I;AAAsJC,QAAAA,WAAW,EAAEzB,GAAG,CAACW,IAAJ,CAASE,KAA5K;AAAmLa,QAAAA,WAAW,EAAE1B,GAAG,CAACW,IAAJ,CAASgB,KAAzM;AAAgNC,QAAAA,UAAU,EAAE5B,GAAG,CAACW,IAAJ,CAASkB,IAArO;AAA2OC,QAAAA,aAAa,EAAE9B,GAAG,CAACW,IAAJ,CAASoB,OAAnQ;AAA4QC,QAAAA,WAAW,EAAEhC,GAAG,CAACW,IAAJ,CAASsB,KAAlS;AAAySC,QAAAA,aAAa,EAAElC,GAAG,CAACW,IAAJ,CAASwB,OAAjU;AAA0UC,QAAAA,eAAe,EAAEpC,GAAG,CAACW,IAAJ,CAAS0B,SAApW;AAA+WC,QAAAA,cAAc,EAAEtC,GAAG,CAACW,IAAJ,CAAS4B;AAAxY,OADD,EACqZ;AAAEpC,QAAAA,KAAK,EAAE;AAACqC,UAAAA,QAAQ,EAAExC,GAAG,CAACyC,MAAJ,CAAWC;AAAtB;AAAT,OADrZ,EAGCrC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAAC0C,IAAJ,CAAS,kBAAT;AACA,OALD,EAMClC,KAND,CAMO,UAAAmC,GAAG,EAAI;AACb3C,QAAAA,GAAG,CAAC0C,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAhCD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Carro = app.db.models.carros;\r\n\r\n\t// add carros\r\n\tapp.get('/carros', (req,res) => {\r\n\t\tCarro.findAll({where: {carro_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// update carros\r\n\tapp.put('/carros/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.placa + \"\\n\")\r\n\t\tif(!req.body.placa)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCarro.update(\r\n\t\t\t\t{ carro_constancia: req.body.constancia, carro_seriechasis: req.body.seriechasis, carro_categoria: req.body.categoria, carro_modelo: req.body.modelo, carro_placa: req.body.placa, carro_marca: req.body.marca, carro_ejes: req.body.ejes, carro_aniofab: req.body.aniofab, carro_carga: req.body.carga, carro_soatfec: req.body.soatfec, carro_revtecfec: req.body.revtecfec, carro_extinfec: req.body.extinfec }, { where: {carro_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Carro Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557182266264
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\clientes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\clientes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\clientes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\clientes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "clientes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Cliente = app.db.models.clientes; // get cliente\n\n  app.get('/clientes', function (req, res) {\n    Cliente.findAll({\n      where: {\n        cliente_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add cliente\n\n  app.post('/clientes', function (req, res) {\n    // console.log(\"======>> \" + req.body.cliente_dniruc + \"\\n\");\n    if (!req.body.cliente_dniruc) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Cliente.create(req.body).then(function () {\n        res.send('Cliente Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // actualiza empleado \n\n  app.put('/clientes/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.dniruc + \"\\n\");\n\n    if (!req.body.dniruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Cliente.update({\n        cliente_nombre: req.body.nombre,\n        cliente_apepat: req.body.apepat,\n        cliente_apemat: req.body.apemat,\n        cliente_dniruc: req.body.dniruc,\n        cliente_fecing: req.body.fecing,\n        cliente_direccion: req.body.direccion,\n        cliente_telefono: req.body.telefono,\n        cliente_email: req.body.email,\n        cliente_nacion: req.body.nacion\n      }, {\n        where: {\n          cliente_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Cliente Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudGVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJDbGllbnRlIiwiZGIiLCJtb2RlbHMiLCJjbGllbnRlcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ3aGVyZSIsImNsaWVudGVfZXN0YWRvIiwidGhlbiIsInJlc3VsdCIsImpzb24iLCJjYXRjaCIsImVycm9yIiwic3RhdHVzIiwibXNnIiwibWVzc2FnZSIsInBvc3QiLCJib2R5IiwiY2xpZW50ZV9kbmlydWMiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsImRuaXJ1YyIsInVwZGF0ZSIsImNsaWVudGVfbm9tYnJlIiwibm9tYnJlIiwiY2xpZW50ZV9hcGVwYXQiLCJhcGVwYXQiLCJjbGllbnRlX2FwZW1hdCIsImFwZW1hdCIsImNsaWVudGVfZmVjaW5nIiwiZmVjaW5nIiwiY2xpZW50ZV9kaXJlY2Npb24iLCJkaXJlY2Npb24iLCJjbGllbnRlX3RlbGVmb25vIiwidGVsZWZvbm8iLCJjbGllbnRlX2VtYWlsIiwiZW1haWwiLCJjbGllbnRlX25hY2lvbiIsIm5hY2lvbiIsImNsaWVudGVfaWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxPQUFPLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLFFBQTlCLENBRHNCLENBR3RCOztBQUNBSixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSxXQUFSLEVBQXFCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQ2pDTixJQUFBQSxPQUFPLENBQUNPLE9BQVIsQ0FBZ0I7QUFBRUMsTUFBQUEsS0FBSyxFQUFFO0FBQUNDLFFBQUFBLGNBQWMsRUFBRTtBQUFqQjtBQUFULEtBQWhCLEVBQ0NDLElBREQsQ0FDTSxVQUFBQyxNQUFNO0FBQUEsYUFBSUwsR0FBRyxDQUFDTSxJQUFKLENBQVNELE1BQVQsQ0FBSjtBQUFBLEtBRFosRUFFQ0UsS0FGRCxDQUVPLFVBQUFDLEtBQUssRUFBSTtBQUNmUixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFDSSxRQUFBQSxHQUFHLEVBQUVGLEtBQUssQ0FBQ0c7QUFBWixPQUFyQjtBQUNBLEtBSkQ7QUFLQSxHQU5ELEVBSnNCLENBWXRCOztBQUNBbEIsRUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ2IsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDakM7QUFDQSxRQUFHLENBQUNELEdBQUcsQ0FBQ2MsSUFBSixDQUFTQyxjQUFiLEVBQ0E7QUFDQ2QsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWDtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FoQixNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDYyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NuQixNQUFBQSxPQUFPLENBQUN1QixNQUFSLENBQWVsQixHQUFHLENBQUNjLElBQW5CLEVBQ0NULElBREQsQ0FDTyxZQUFNO0FBQ1pKLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxrQkFBVDtBQUNBLE9BSEQsRUFJQ1gsS0FKRCxDQUlPLFVBQUFZLEdBQUcsRUFBSTtBQUNibkIsUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUFic0IsQ0FpQ3RCOztBQUNBMUIsRUFBQUEsR0FBRyxDQUFDMkIsR0FBSixDQUFRLGVBQVIsRUFBeUIsVUFBQ3JCLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3BDZSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFjakIsR0FBRyxDQUFDYyxJQUFKLENBQVNRLE1BQXZCLEdBQWdDLElBQTVDOztBQUNBLFFBQUcsQ0FBQ3RCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxNQUFiLEVBQ0E7QUFDQ3JCLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVg7QUFDQU0sTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUNBaEIsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNQLEdBQUcsQ0FBQ2MsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDbkIsTUFBQUEsT0FBTyxDQUFDNEIsTUFBUixDQUNDO0FBQUVDLFFBQUFBLGNBQWMsRUFBRXhCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTVyxNQUEzQjtBQUFtQ0MsUUFBQUEsY0FBYyxFQUFFMUIsR0FBRyxDQUFDYyxJQUFKLENBQVNhLE1BQTVEO0FBQW9FQyxRQUFBQSxjQUFjLEVBQUU1QixHQUFHLENBQUNjLElBQUosQ0FBU2UsTUFBN0Y7QUFBcUdkLFFBQUFBLGNBQWMsRUFBRWYsR0FBRyxDQUFDYyxJQUFKLENBQVNRLE1BQTlIO0FBQXNJUSxRQUFBQSxjQUFjLEVBQUU5QixHQUFHLENBQUNjLElBQUosQ0FBU2lCLE1BQS9KO0FBQXVLQyxRQUFBQSxpQkFBaUIsRUFBRWhDLEdBQUcsQ0FBQ2MsSUFBSixDQUFTbUIsU0FBbk07QUFBOE1DLFFBQUFBLGdCQUFnQixFQUFFbEMsR0FBRyxDQUFDYyxJQUFKLENBQVNxQixRQUF6TztBQUFtUEMsUUFBQUEsYUFBYSxFQUFFcEMsR0FBRyxDQUFDYyxJQUFKLENBQVN1QixLQUEzUTtBQUFrUkMsUUFBQUEsY0FBYyxFQUFFdEMsR0FBRyxDQUFDYyxJQUFKLENBQVN5QjtBQUEzUyxPQURELEVBQ3NUO0FBQUVwQyxRQUFBQSxLQUFLLEVBQUU7QUFBQ3FDLFVBQUFBLFVBQVUsRUFBRXhDLEdBQUcsQ0FBQ3lDLE1BQUosQ0FBV0M7QUFBeEI7QUFBVCxPQUR0VCxFQUdDckMsSUFIRCxDQUdNLFlBQUk7QUFDVEosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLG9CQUFUO0FBQ0EsT0FMRCxFQU1DVixLQU5ELENBTU8sVUFBQVcsR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQVJEO0FBU0E7QUFDRCxHQXBCRDtBQXFCQSxDQXZERCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgQ2xpZW50ZSA9IGFwcC5kYi5tb2RlbHMuY2xpZW50ZXM7XHJcblxyXG5cdC8vIGdldCBjbGllbnRlXHJcblx0YXBwLmdldCgnL2NsaWVudGVzJywgKHJlcSxyZXMpID0+IHtcclxuXHRcdENsaWVudGUuZmluZEFsbCh7IHdoZXJlOiB7Y2xpZW50ZV9lc3RhZG86IDF9IH0pXHJcblx0XHQudGhlbihyZXN1bHQgPT4gcmVzLmpzb24ocmVzdWx0KSlcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIGNsaWVudGVcclxuXHRhcHAucG9zdCgnL2NsaWVudGVzJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0Ly8gY29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LmNsaWVudGVfZG5pcnVjICsgXCJcXG5cIik7XHJcblx0XHRpZighcmVxLmJvZHkuY2xpZW50ZV9kbmlydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdENsaWVudGUuY3JlYXRlKHJlcS5ib2R5KVxyXG5cdFx0XHQudGhlbiggKCkgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdDbGllbnRlIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gYWN0dWFsaXphIGVtcGxlYWRvIFxyXG5cdGFwcC5wdXQoJy9jbGllbnRlcy86aWQnLCAocmVxLCByZXMpPT57XHJcblx0XHRjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZG5pcnVjICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5kbmlydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBVVFwiKVxyXG5cdFx0XHRyZXMuanNvbihyZXEuYm9keSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0Q2xpZW50ZS51cGRhdGUoXHJcblx0XHRcdFx0eyBjbGllbnRlX25vbWJyZTogcmVxLmJvZHkubm9tYnJlLCBjbGllbnRlX2FwZXBhdDogcmVxLmJvZHkuYXBlcGF0LCBjbGllbnRlX2FwZW1hdDogcmVxLmJvZHkuYXBlbWF0LCBjbGllbnRlX2RuaXJ1YzogcmVxLmJvZHkuZG5pcnVjLCBjbGllbnRlX2ZlY2luZzogcmVxLmJvZHkuZmVjaW5nLCBjbGllbnRlX2RpcmVjY2lvbjogcmVxLmJvZHkuZGlyZWNjaW9uLCBjbGllbnRlX3RlbGVmb25vOiByZXEuYm9keS50ZWxlZm9ubywgY2xpZW50ZV9lbWFpbDogcmVxLmJvZHkuZW1haWwsIGNsaWVudGVfbmFjaW9uOiByZXEuYm9keS5uYWNpb24gfSwgeyB3aGVyZToge2NsaWVudGVfaWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHRcdFx0KVxyXG5cdFx0XHQudGhlbigoKT0+e1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdDbGllbnRlIE1vZGlmaWNhZG8nKTtcclxuXHRcdFx0fSlcclxuXHRcdFx0LmVycm9yKGVyciA9PiB7XHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKTtcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxufVxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "clientes.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Cliente",
        "db",
        "models",
        "clientes",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "cliente_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "cliente_dniruc",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "dniruc",
        "update",
        "cliente_nombre",
        "nombre",
        "cliente_apepat",
        "apepat",
        "cliente_apemat",
        "apemat",
        "cliente_fecing",
        "fecing",
        "cliente_direccion",
        "direccion",
        "cliente_telefono",
        "telefono",
        "cliente_email",
        "email",
        "cliente_nacion",
        "nacion",
        "cliente_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,OAAO,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,QAA9B,CADsB,CAGtB;;AACAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACjCN,IAAAA,OAAO,CAACO,OAAR,CAAgB;AAAEC,MAAAA,KAAK,EAAE;AAACC,QAAAA,cAAc,EAAE;AAAjB;AAAT,KAAhB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAJsB,CAYtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,WAAT,EAAsB,UAACb,GAAD,EAAMC,GAAN,EAAY;AACjC;AACA,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,cAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,OAAO,CAACuB,MAAR,CAAelB,GAAG,CAACc,IAAnB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,kBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAbsB,CAiCtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,eAAR,EAAyB,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACpCe,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcjB,GAAG,CAACc,IAAJ,CAASQ,MAAvB,GAAgC,IAA5C;;AACA,QAAG,CAACtB,GAAG,CAACc,IAAJ,CAASQ,MAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,OAAO,CAAC4B,MAAR,CACC;AAAEC,QAAAA,cAAc,EAAExB,GAAG,CAACc,IAAJ,CAASW,MAA3B;AAAmCC,QAAAA,cAAc,EAAE1B,GAAG,CAACc,IAAJ,CAASa,MAA5D;AAAoEC,QAAAA,cAAc,EAAE5B,GAAG,CAACc,IAAJ,CAASe,MAA7F;AAAqGd,QAAAA,cAAc,EAAEf,GAAG,CAACc,IAAJ,CAASQ,MAA9H;AAAsIQ,QAAAA,cAAc,EAAE9B,GAAG,CAACc,IAAJ,CAASiB,MAA/J;AAAuKC,QAAAA,iBAAiB,EAAEhC,GAAG,CAACc,IAAJ,CAASmB,SAAnM;AAA8MC,QAAAA,gBAAgB,EAAElC,GAAG,CAACc,IAAJ,CAASqB,QAAzO;AAAmPC,QAAAA,aAAa,EAAEpC,GAAG,CAACc,IAAJ,CAASuB,KAA3Q;AAAkRC,QAAAA,cAAc,EAAEtC,GAAG,CAACc,IAAJ,CAASyB;AAA3S,OADD,EACsT;AAAEpC,QAAAA,KAAK,EAAE;AAACqC,UAAAA,UAAU,EAAExC,GAAG,CAACyC,MAAJ,CAAWC;AAAxB;AAAT,OADtT,EAGCrC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,oBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAvDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Cliente = app.db.models.clientes;\r\n\r\n\t// get cliente\r\n\tapp.get('/clientes', (req,res) => {\r\n\t\tCliente.findAll({ where: {cliente_estado: 1} })\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => {\r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add cliente\r\n\tapp.post('/clientes', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.cliente_dniruc + \"\\n\");\r\n\t\tif(!req.body.cliente_dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCliente.create(req.body)\r\n\t\t\t.then( () => {\r\n\t\t\t\tres.send('Cliente Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// actualiza empleado \r\n\tapp.put('/clientes/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.dniruc + \"\\n\")\r\n\t\tif(!req.body.dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCliente.update(\r\n\t\t\t\t{ cliente_nombre: req.body.nombre, cliente_apepat: req.body.apepat, cliente_apemat: req.body.apemat, cliente_dniruc: req.body.dniruc, cliente_fecing: req.body.fecing, cliente_direccion: req.body.direccion, cliente_telefono: req.body.telefono, cliente_email: req.body.email, cliente_nacion: req.body.nacion }, { where: {cliente_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Cliente Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554152233290
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\documentos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\documentos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\documentos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\documentos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "documentos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Documento = app.db.models.documentos;\n  var Cliente = app.db.models.clientes;\n  var Proveedor = app.db.models.proveedores;\n  var Tipodocumento = app.db.models.tipodocumentos; // get documento\n\n  app.get('/documentos', function (req, res) {\n    Cliente.findAll({\n      attributes: ['cliente_id', 'cliente_nombre']\n    }).then(function (result) {\n      return Proveedor.findAll({\n        attributes: ['proveedor_id', 'proveedor_nombre']\n      }).then(function (result2) {\n        return Tipodocumento.findAll({\n          attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n        }).then(function (result3) {\n          return Documento.findAll({\n            attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_contenido', 'documento_feccan'],\n            include: [{\n              model: Cliente,\n              attributes: ['cliente_id', 'cliente_nombre']\n            }, {\n              model: Proveedor,\n              attributes: ['proveedor_id', 'proveedor_nombre']\n            }, {\n              model: Tipodocumento,\n              attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n            }]\n          }).then(function (result4) {\n            return res.json([result, result2, result3, result4]);\n          });\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add documento\n\n  app.post('/documentos', function (req, res) {\n    console.log(\"======>> \" + req.body.documento_nro + \"\\n\");\n\n    if (!req.body.documento_nro) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Documento.create(req.body).then(function () {\n        res.send('Documento Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update documento\n\n  app.put('/documentos/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.nro + \"\\n\");\n\n    if (!req.body.nro) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Documento.update({\n        tipodocumento_id: req.body.tipodoc,\n        documento_tipoclipro: req.body.tipoclipro,\n        cliente_id: req.body.tipoC,\n        proveedor_id: req.body.tipoP,\n        documento_nro: req.body.nro,\n        documento_feccrea: req.body.feccrea,\n        documento_pago: req.body.pago,\n        documento_pagoTotal: req.body.pagoTotal,\n        documento_detalle: req.body.detalle,\n        documento_feccan: req.body.feccan\n      }, {\n        where: {\n          documento_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Documento Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvY3VtZW50b3MuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsIkRvY3VtZW50byIsImRiIiwibW9kZWxzIiwiZG9jdW1lbnRvcyIsIkNsaWVudGUiLCJjbGllbnRlcyIsIlByb3ZlZWRvciIsInByb3ZlZWRvcmVzIiwiVGlwb2RvY3VtZW50byIsInRpcG9kb2N1bWVudG9zIiwiZ2V0IiwicmVxIiwicmVzIiwiZmluZEFsbCIsImF0dHJpYnV0ZXMiLCJ0aGVuIiwicmVzdWx0IiwicmVzdWx0MiIsInJlc3VsdDMiLCJpbmNsdWRlIiwibW9kZWwiLCJyZXN1bHQ0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJtc2ciLCJtZXNzYWdlIiwicG9zdCIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwiZG9jdW1lbnRvX25ybyIsImNyZWF0ZSIsInNlbmQiLCJlcnIiLCJwdXQiLCJucm8iLCJ1cGRhdGUiLCJ0aXBvZG9jdW1lbnRvX2lkIiwidGlwb2RvYyIsImRvY3VtZW50b190aXBvY2xpcHJvIiwidGlwb2NsaXBybyIsImNsaWVudGVfaWQiLCJ0aXBvQyIsInByb3ZlZWRvcl9pZCIsInRpcG9QIiwiZG9jdW1lbnRvX2ZlY2NyZWEiLCJmZWNjcmVhIiwiZG9jdW1lbnRvX3BhZ28iLCJwYWdvIiwiZG9jdW1lbnRvX3BhZ29Ub3RhbCIsInBhZ29Ub3RhbCIsImRvY3VtZW50b19kZXRhbGxlIiwiZGV0YWxsZSIsImRvY3VtZW50b19mZWNjYW4iLCJmZWNjYW4iLCJ3aGVyZSIsImRvY3VtZW50b19pZCIsInBhcmFtcyIsImlkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLFNBQVMsR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsVUFBaEM7QUFDQSxNQUFNQyxPQUFPLEdBQUdMLEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNHLFFBQTlCO0FBQ0EsTUFBTUMsU0FBUyxHQUFHUCxHQUFHLENBQUNFLEVBQUosQ0FBT0MsTUFBUCxDQUFjSyxXQUFoQztBQUNBLE1BQU1DLGFBQWEsR0FBR1QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY08sY0FBcEMsQ0FKc0IsQ0FNdEI7O0FBQ0FWLEVBQUFBLEdBQUcsQ0FBQ1csR0FBSixDQUFRLGFBQVIsRUFBdUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDcENSLElBQUFBLE9BQU8sQ0FBQ1MsT0FBUixDQUFnQjtBQUFFQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxZQUFELEVBQWMsZ0JBQWQ7QUFBZCxLQUFoQixFQUNDQyxJQURELENBRUMsVUFBQUMsTUFBTTtBQUFBLGFBQUlWLFNBQVMsQ0FBQ08sT0FBVixDQUFrQjtBQUFFQyxRQUFBQSxVQUFVLEVBQUUsQ0FBQyxjQUFELEVBQWlCLGtCQUFqQjtBQUFkLE9BQWxCLEVBQ1JDLElBRFEsQ0FFUixVQUFBRSxPQUFPO0FBQUEsZUFBSVQsYUFBYSxDQUFDSyxPQUFkLENBQXNCO0FBQUVDLFVBQUFBLFVBQVUsRUFBRSxDQUFDLGtCQUFELEVBQXFCLHNCQUFyQjtBQUFkLFNBQXRCLEVBQ1RDLElBRFMsQ0FFVCxVQUFBRyxPQUFPO0FBQUEsaUJBQUlsQixTQUFTLENBQUNhLE9BQVYsQ0FBa0I7QUFBRUMsWUFBQUEsVUFBVSxFQUFFLENBQUMsY0FBRCxFQUFpQixrQkFBakIsRUFBcUMsc0JBQXJDLEVBQTZELFlBQTdELEVBQTJFLGNBQTNFLEVBQTJGLGVBQTNGLEVBQTRHLG1CQUE1RyxFQUFpSSxnQkFBakksRUFBbUoscUJBQW5KLEVBQTBLLHFCQUExSyxFQUFpTSxrQkFBak0sQ0FBZDtBQUFvT0ssWUFBQUEsT0FBTyxFQUFFLENBQUM7QUFBQ0MsY0FBQUEsS0FBSyxFQUFFaEIsT0FBUjtBQUFpQlUsY0FBQUEsVUFBVSxFQUFFLENBQUMsWUFBRCxFQUFlLGdCQUFmO0FBQTdCLGFBQUQsRUFBaUU7QUFBQ00sY0FBQUEsS0FBSyxFQUFFZCxTQUFSO0FBQW1CUSxjQUFBQSxVQUFVLEVBQUUsQ0FBQyxjQUFELEVBQWlCLGtCQUFqQjtBQUEvQixhQUFqRSxFQUF1STtBQUFDTSxjQUFBQSxLQUFLLEVBQUVaLGFBQVI7QUFBdUJNLGNBQUFBLFVBQVUsRUFBRSxDQUFDLGtCQUFELEVBQXFCLHNCQUFyQjtBQUFuQyxhQUF2STtBQUE3TyxXQUFsQixFQUNWQyxJQURVLENBQ0osVUFBQU0sT0FBTztBQUFBLG1CQUFJVCxHQUFHLENBQUNVLElBQUosQ0FBUyxDQUFDTixNQUFELEVBQVNDLE9BQVQsRUFBa0JDLE9BQWxCLEVBQTJCRyxPQUEzQixDQUFULENBQUo7QUFBQSxXQURILENBQUo7QUFBQSxTQUZFLENBQUo7QUFBQSxPQUZDLENBQUo7QUFBQSxLQUZQLEVBV0NFLEtBWEQsQ0FXTyxVQUFBQyxLQUFLLEVBQUk7QUFBRVosTUFBQUEsR0FBRyxDQUFDYSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBQ0ksUUFBQUEsR0FBRyxFQUFFRixLQUFLLENBQUNHO0FBQVosT0FBckI7QUFBNEMsS0FYOUQ7QUFZQSxHQWJELEVBUHNCLENBc0J0Qjs7QUFDQTVCLEVBQUFBLEdBQUcsQ0FBQzZCLElBQUosQ0FBUyxhQUFULEVBQXdCLFVBQUNqQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ2lCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQWNuQixHQUFHLENBQUNvQixJQUFKLENBQVNDLGFBQXZCLEdBQXVDLElBQW5EOztBQUNKLFFBQUcsQ0FBQ3JCLEdBQUcsQ0FBQ29CLElBQUosQ0FBU0MsYUFBYixFQUNBO0FBQ0NwQixNQUFBQSxHQUFHLENBQUNhLE1BQUosQ0FBVyxHQUFYO0FBQ0FJLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQWxCLE1BQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTWCxHQUFHLENBQUNvQixJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0MvQixNQUFBQSxTQUFTLENBQUNpQyxNQUFWLENBQWlCdEIsR0FBRyxDQUFDb0IsSUFBckIsRUFDQ2hCLElBREQsQ0FDTyxZQUFNO0FBQ1pILFFBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxvQkFBVDtBQUNBLE9BSEQsRUFJQ1gsS0FKRCxDQUlPLFVBQUFZLEdBQUcsRUFBSTtBQUNidkIsUUFBQUEsR0FBRyxDQUFDc0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUF2QnNCLENBMkN0Qjs7QUFDQXBDLEVBQUFBLEdBQUcsQ0FBQ3FDLEdBQUosQ0FBUSxpQkFBUixFQUEyQixVQUFDekIsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDdENpQixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFjbkIsR0FBRyxDQUFDb0IsSUFBSixDQUFTTSxHQUF2QixHQUE2QixJQUF6Qzs7QUFDQSxRQUFHLENBQUMxQixHQUFHLENBQUNvQixJQUFKLENBQVNNLEdBQWIsRUFDQTtBQUNDekIsTUFBQUEsR0FBRyxDQUFDYSxNQUFKLENBQVcsR0FBWDtBQUNBSSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FsQixNQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBU1gsR0FBRyxDQUFDb0IsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDL0IsTUFBQUEsU0FBUyxDQUFDc0MsTUFBVixDQUNDO0FBQUVDLFFBQUFBLGdCQUFnQixFQUFFNUIsR0FBRyxDQUFDb0IsSUFBSixDQUFTUyxPQUE3QjtBQUFzQ0MsUUFBQUEsb0JBQW9CLEVBQUU5QixHQUFHLENBQUNvQixJQUFKLENBQVNXLFVBQXJFO0FBQWlGQyxRQUFBQSxVQUFVLEVBQUVoQyxHQUFHLENBQUNvQixJQUFKLENBQVNhLEtBQXRHO0FBQTZHQyxRQUFBQSxZQUFZLEVBQUVsQyxHQUFHLENBQUNvQixJQUFKLENBQVNlLEtBQXBJO0FBQTJJZCxRQUFBQSxhQUFhLEVBQUVyQixHQUFHLENBQUNvQixJQUFKLENBQVNNLEdBQW5LO0FBQXdLVSxRQUFBQSxpQkFBaUIsRUFBRXBDLEdBQUcsQ0FBQ29CLElBQUosQ0FBU2lCLE9BQXBNO0FBQTZNQyxRQUFBQSxjQUFjLEVBQUV0QyxHQUFHLENBQUNvQixJQUFKLENBQVNtQixJQUF0TztBQUE0T0MsUUFBQUEsbUJBQW1CLEVBQUV4QyxHQUFHLENBQUNvQixJQUFKLENBQVNxQixTQUExUTtBQUFxUkMsUUFBQUEsaUJBQWlCLEVBQUUxQyxHQUFHLENBQUNvQixJQUFKLENBQVN1QixPQUFqVDtBQUEwVEMsUUFBQUEsZ0JBQWdCLEVBQUU1QyxHQUFHLENBQUNvQixJQUFKLENBQVN5QjtBQUFyVixPQURELEVBQ2dXO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFDQyxVQUFBQSxZQUFZLEVBQUUvQyxHQUFHLENBQUNnRCxNQUFKLENBQVdDO0FBQTFCO0FBQVQsT0FEaFcsRUFHQzdDLElBSEQsQ0FHTSxZQUFJO0FBQ1RILFFBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxzQkFBVDtBQUNBLE9BTEQsRUFNQ1YsS0FORCxDQU1PLFVBQUFXLEdBQUcsRUFBSTtBQUNidkIsUUFBQUEsR0FBRyxDQUFDc0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FSRDtBQVNBO0FBQ0QsR0FwQkQ7QUFxQkEsQ0FqRUQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IERvY3VtZW50byA9IGFwcC5kYi5tb2RlbHMuZG9jdW1lbnRvcztcclxuXHRjb25zdCBDbGllbnRlID0gYXBwLmRiLm1vZGVscy5jbGllbnRlcztcclxuXHRjb25zdCBQcm92ZWVkb3IgPSBhcHAuZGIubW9kZWxzLnByb3ZlZWRvcmVzO1xyXG5cdGNvbnN0IFRpcG9kb2N1bWVudG8gPSBhcHAuZGIubW9kZWxzLnRpcG9kb2N1bWVudG9zO1xyXG5cclxuXHQvLyBnZXQgZG9jdW1lbnRvXHJcblx0YXBwLmdldCgnL2RvY3VtZW50b3MnLCAocmVxLCByZXMpID0+IHtcclxuXHRcdENsaWVudGUuZmluZEFsbCh7IGF0dHJpYnV0ZXM6IFsnY2xpZW50ZV9pZCcsJ2NsaWVudGVfbm9tYnJlJ10gfSlcclxuXHRcdC50aGVuKCBcclxuXHRcdFx0cmVzdWx0ID0+IFByb3ZlZWRvci5maW5kQWxsKHsgYXR0cmlidXRlczogWydwcm92ZWVkb3JfaWQnLCAncHJvdmVlZG9yX25vbWJyZSddIH0pXHJcblx0XHRcdFx0LnRoZW4oIFxyXG5cdFx0XHRcdFx0cmVzdWx0MiA9PiBUaXBvZG9jdW1lbnRvLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ3RpcG9kb2N1bWVudG9faWQnLCAndGlwb2RvY3VtZW50b19ub21icmUnXSB9KVxyXG5cdFx0XHRcdFx0XHQudGhlbihcclxuXHRcdFx0XHRcdFx0XHRyZXN1bHQzID0+IERvY3VtZW50by5maW5kQWxsKHsgYXR0cmlidXRlczogWydkb2N1bWVudG9faWQnLCAndGlwb2RvY3VtZW50b19pZCcsICdkb2N1bWVudG9fdGlwb2NsaXBybycsICdjbGllbnRlX2lkJywgJ3Byb3ZlZWRvcl9pZCcsICdkb2N1bWVudG9fbnJvJywgJ2RvY3VtZW50b19mZWNjcmVhJywgJ2RvY3VtZW50b19wYWdvJywgJ2RvY3VtZW50b19wYWdvVG90YWwnLCAnZG9jdW1lbnRvX2NvbnRlbmlkbycsICdkb2N1bWVudG9fZmVjY2FuJ10sIGluY2x1ZGU6IFt7bW9kZWw6IENsaWVudGUsIGF0dHJpYnV0ZXM6IFsnY2xpZW50ZV9pZCcsICdjbGllbnRlX25vbWJyZSddfSwge21vZGVsOiBQcm92ZWVkb3IsIGF0dHJpYnV0ZXM6IFsncHJvdmVlZG9yX2lkJywgJ3Byb3ZlZWRvcl9ub21icmUnXX0sIHttb2RlbDogVGlwb2RvY3VtZW50bywgYXR0cmlidXRlczogWyd0aXBvZG9jdW1lbnRvX2lkJywgJ3RpcG9kb2N1bWVudG9fbm9tYnJlJ119XSB9KVxyXG5cdFx0XHRcdFx0XHRcdC50aGVuKCByZXN1bHQ0ID0+IHJlcy5qc29uKFtyZXN1bHQsIHJlc3VsdDIsIHJlc3VsdDMsIHJlc3VsdDRdKSApXHJcblx0XHRcdFx0XHRcdClcclxuXHRcdFx0XHQpXHJcblx0XHQpXHJcblx0XHQuY2F0Y2goZXJyb3IgPT4geyByZXMuc3RhdHVzKDQxMikuanNvbih7bXNnOiBlcnJvci5tZXNzYWdlfSkgfSkgXHJcblx0fSk7XHJcblxyXG5cdC8vIGFkZCBkb2N1bWVudG9cclxuXHRhcHAucG9zdCgnL2RvY3VtZW50b3MnLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LmRvY3VtZW50b19ucm8gKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmRvY3VtZW50b19ucm8pXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdERvY3VtZW50by5jcmVhdGUocmVxLmJvZHkpXHJcblx0XHRcdC50aGVuKCAoKSA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdEb2N1bWVudG8gQWdyZWdhZG8nKVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHQvLyB1cGRhdGUgZG9jdW1lbnRvXHJcblx0YXBwLnB1dCgnL2RvY3VtZW50b3MvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0Y29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5Lm5ybyArIFwiXFxuXCIpXHJcblx0XHRpZighcmVxLmJvZHkubnJvKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQVVRcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdERvY3VtZW50by51cGRhdGUoXHJcblx0XHRcdFx0eyB0aXBvZG9jdW1lbnRvX2lkOiByZXEuYm9keS50aXBvZG9jLCBkb2N1bWVudG9fdGlwb2NsaXBybzogcmVxLmJvZHkudGlwb2NsaXBybywgY2xpZW50ZV9pZDogcmVxLmJvZHkudGlwb0MsIHByb3ZlZWRvcl9pZDogcmVxLmJvZHkudGlwb1AsIGRvY3VtZW50b19ucm86IHJlcS5ib2R5Lm5ybywgZG9jdW1lbnRvX2ZlY2NyZWE6IHJlcS5ib2R5LmZlY2NyZWEsIGRvY3VtZW50b19wYWdvOiByZXEuYm9keS5wYWdvLCBkb2N1bWVudG9fcGFnb1RvdGFsOiByZXEuYm9keS5wYWdvVG90YWwsIGRvY3VtZW50b19kZXRhbGxlOiByZXEuYm9keS5kZXRhbGxlLCBkb2N1bWVudG9fZmVjY2FuOiByZXEuYm9keS5mZWNjYW4gfSwgeyB3aGVyZToge2RvY3VtZW50b19pZDogcmVxLnBhcmFtcy5pZH0gfVxyXG5cdFx0XHQpXHJcblx0XHRcdC50aGVuKCgpPT57XHJcblx0XHRcdFx0cmVzLnNlbmQoJ0RvY3VtZW50byBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "documentos.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Documento",
        "db",
        "models",
        "documentos",
        "Cliente",
        "clientes",
        "Proveedor",
        "proveedores",
        "Tipodocumento",
        "tipodocumentos",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "then",
        "result",
        "result2",
        "result3",
        "include",
        "model",
        "result4",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "console",
        "log",
        "body",
        "documento_nro",
        "create",
        "send",
        "err",
        "put",
        "nro",
        "update",
        "tipodocumento_id",
        "tipodoc",
        "documento_tipoclipro",
        "tipoclipro",
        "cliente_id",
        "tipoC",
        "proveedor_id",
        "tipoP",
        "documento_feccrea",
        "feccrea",
        "documento_pago",
        "pago",
        "documento_pagoTotal",
        "pagoTotal",
        "documento_detalle",
        "detalle",
        "documento_feccan",
        "feccan",
        "where",
        "documento_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,SAAS,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,UAAhC;AACA,MAAMC,OAAO,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,QAA9B;AACA,MAAMC,SAAS,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,WAAhC;AACA,MAAMC,aAAa,GAAGT,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcO,cAApC,CAJsB,CAMtB;;AACAV,EAAAA,GAAG,CAACW,GAAJ,CAAQ,aAAR,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpCR,IAAAA,OAAO,CAACS,OAAR,CAAgB;AAAEC,MAAAA,UAAU,EAAE,CAAC,YAAD,EAAc,gBAAd;AAAd,KAAhB,EACCC,IADD,CAEC,UAAAC,MAAM;AAAA,aAAIV,SAAS,CAACO,OAAV,CAAkB;AAAEC,QAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAAd,OAAlB,EACRC,IADQ,CAER,UAAAE,OAAO;AAAA,eAAIT,aAAa,CAACK,OAAd,CAAsB;AAAEC,UAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAd,SAAtB,EACTC,IADS,CAET,UAAAG,OAAO;AAAA,iBAAIlB,SAAS,CAACa,OAAV,CAAkB;AAAEC,YAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,sBAArC,EAA6D,YAA7D,EAA2E,cAA3E,EAA2F,eAA3F,EAA4G,mBAA5G,EAAiI,gBAAjI,EAAmJ,qBAAnJ,EAA0K,qBAA1K,EAAiM,kBAAjM,CAAd;AAAoOK,YAAAA,OAAO,EAAE,CAAC;AAACC,cAAAA,KAAK,EAAEhB,OAAR;AAAiBU,cAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAA7B,aAAD,EAAiE;AAACM,cAAAA,KAAK,EAAEd,SAAR;AAAmBQ,cAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAA/B,aAAjE,EAAuI;AAACM,cAAAA,KAAK,EAAEZ,aAAR;AAAuBM,cAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAnC,aAAvI;AAA7O,WAAlB,EACVC,IADU,CACJ,UAAAM,OAAO;AAAA,mBAAIT,GAAG,CAACU,IAAJ,CAAS,CAACN,MAAD,EAASC,OAAT,EAAkBC,OAAlB,EAA2BG,OAA3B,CAAT,CAAJ;AAAA,WADH,CAAJ;AAAA,SAFE,CAAJ;AAAA,OAFC,CAAJ;AAAA,KAFP,EAWCE,KAXD,CAWO,UAAAC,KAAK,EAAI;AAAEZ,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AAA4C,KAX9D;AAYA,GAbD,EAPsB,CAsBtB;;AACA5B,EAAAA,GAAG,CAAC6B,IAAJ,CAAS,aAAT,EAAwB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AACjCiB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcnB,GAAG,CAACoB,IAAJ,CAASC,aAAvB,GAAuC,IAAnD;;AACJ,QAAG,CAACrB,GAAG,CAACoB,IAAJ,CAASC,aAAb,EACA;AACCpB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAlB,MAAAA,GAAG,CAACU,IAAJ,CAASX,GAAG,CAACoB,IAAb;AACA,KALD,MAOA;AACC/B,MAAAA,SAAS,CAACiC,MAAV,CAAiBtB,GAAG,CAACoB,IAArB,EACChB,IADD,CACO,YAAM;AACZH,QAAAA,GAAG,CAACsB,IAAJ,CAAS,oBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAvBsB,CA2CtB;;AACApC,EAAAA,GAAG,CAACqC,GAAJ,CAAQ,iBAAR,EAA2B,UAACzB,GAAD,EAAMC,GAAN,EAAY;AACtCiB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcnB,GAAG,CAACoB,IAAJ,CAASM,GAAvB,GAA6B,IAAzC;;AACA,QAAG,CAAC1B,GAAG,CAACoB,IAAJ,CAASM,GAAb,EACA;AACCzB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAlB,MAAAA,GAAG,CAACU,IAAJ,CAASX,GAAG,CAACoB,IAAb;AACA,KALD,MAOA;AACC/B,MAAAA,SAAS,CAACsC,MAAV,CACC;AAAEC,QAAAA,gBAAgB,EAAE5B,GAAG,CAACoB,IAAJ,CAASS,OAA7B;AAAsCC,QAAAA,oBAAoB,EAAE9B,GAAG,CAACoB,IAAJ,CAASW,UAArE;AAAiFC,QAAAA,UAAU,EAAEhC,GAAG,CAACoB,IAAJ,CAASa,KAAtG;AAA6GC,QAAAA,YAAY,EAAElC,GAAG,CAACoB,IAAJ,CAASe,KAApI;AAA2Id,QAAAA,aAAa,EAAErB,GAAG,CAACoB,IAAJ,CAASM,GAAnK;AAAwKU,QAAAA,iBAAiB,EAAEpC,GAAG,CAACoB,IAAJ,CAASiB,OAApM;AAA6MC,QAAAA,cAAc,EAAEtC,GAAG,CAACoB,IAAJ,CAASmB,IAAtO;AAA4OC,QAAAA,mBAAmB,EAAExC,GAAG,CAACoB,IAAJ,CAASqB,SAA1Q;AAAqRC,QAAAA,iBAAiB,EAAE1C,GAAG,CAACoB,IAAJ,CAASuB,OAAjT;AAA0TC,QAAAA,gBAAgB,EAAE5C,GAAG,CAACoB,IAAJ,CAASyB;AAArV,OADD,EACgW;AAAEC,QAAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE/C,GAAG,CAACgD,MAAJ,CAAWC;AAA1B;AAAT,OADhW,EAGC7C,IAHD,CAGM,YAAI;AACTH,QAAAA,GAAG,CAACsB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAjED",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Documento = app.db.models.documentos;\r\n\tconst Cliente = app.db.models.clientes;\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\tconst Tipodocumento = app.db.models.tipodocumentos;\r\n\r\n\t// get documento\r\n\tapp.get('/documentos', (req, res) => {\r\n\t\tCliente.findAll({ attributes: ['cliente_id','cliente_nombre'] })\r\n\t\t.then( \r\n\t\t\tresult => Proveedor.findAll({ attributes: ['proveedor_id', 'proveedor_nombre'] })\r\n\t\t\t\t.then( \r\n\t\t\t\t\tresult2 => Tipodocumento.findAll({ attributes: ['tipodocumento_id', 'tipodocumento_nombre'] })\r\n\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\tresult3 => Documento.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_contenido', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n\t\t\t\t\t\t\t.then( result4 => res.json([result, result2, result3, result4]) )\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json({msg: error.message}) }) \r\n\t});\r\n\r\n\t// add documento\r\n\tapp.post('/documentos', (req, res) => {\r\n      console.log(\"======>> \" + req.body.documento_nro + \"\\n\")\r\n\t\tif(!req.body.documento_nro)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tDocumento.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Documento Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update documento\r\n\tapp.put('/documentos/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.nro + \"\\n\")\r\n\t\tif(!req.body.nro)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tDocumento.update(\r\n\t\t\t\t{ tipodocumento_id: req.body.tipodoc, documento_tipoclipro: req.body.tipoclipro, cliente_id: req.body.tipoC, proveedor_id: req.body.tipoP, documento_nro: req.body.nro, documento_feccrea: req.body.feccrea, documento_pago: req.body.pago, documento_pagoTotal: req.body.pagoTotal, documento_detalle: req.body.detalle, documento_feccan: req.body.feccan }, { where: {documento_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Documento Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550416493009
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\efectivoviajes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\efectivoviajes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\efectivoviajes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\efectivoviajes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "efectivoviajes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Carro = app.db.models.carros;\n  var Empleado = app.db.models.empleados;\n  var Efectivoviaje = app.db.models.efectivoviajes; // get efectivoviaje\n\n  app.get('/efectivoviajes', function (req, res) {\n    Carro.findAll({\n      attributes: ['carro_id', 'carro_placa']\n    }).then(function (result1) {\n      return Empleado.findAll({\n        attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n      }).then(function (result2) {\n        return Efectivoviaje.findAll({\n          attributes: ['efectivoviaje_id', 'efectivoviaje_fecha', 'carro_id', 'empleado_id', 'efectivoviaje_monto', 'efectivoviaje_tipo'],\n          include: [{\n            model: Empleado,\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n          }, {\n            model: Carro,\n            attributes: ['carro_id', 'carro_placa']\n          }]\n        }).then(function (result3) {\n          return res.json([result1, result2, result3]);\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add efectivoviaje\n\n  app.post('/efectivoviajes', function (req, res) {\n    console.log(\"======>> \" + req.body.efectivoviajes_fecha + \"\\n\");\n\n    if (!req.body.efectivoviajes_fecha) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Efectivoviaje.create(req.body).then(function () {\n        res.send('EfectivoViaje Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update viaje\n  // app.put('/viajes/:id', (req, res)=>{\n  // \tconsole.log(\"======>> \" + req.body.viajeid + \"\\n\")\n  // \tif(!req.body.viajeid)\n  // \t{\n  // \t\tres.status(400)\n  // \t\tconsole.log(\"ERROR PUT\")\n  // \t\tres.json(req.body)\n  // \t}\n  // \telse\n  // \t{\n  // \t\tViaje.update(\n  // \t\t\t{ viaje_id: req.body.viajeid, carro_id: req.body.carroid, empleado_id: req.body.empleadoid, lugar_id: req.body.lugarid, cliente_id: req.body.clienteid, viaje_fecsalida: req.body.fecsalida, viaje_fecretorno: req.body.fecretorno }, { where: {viaje_id: req.params.id} }\n  // \t\t)\n  // \t\t.then(()=>{\n  // \t\t\tres.send('Viaje Modificado');\n  // \t\t})\n  // \t\t.error(err => {\n  // \t\t\tres.send('error: ' + err);\n  // \t\t})\n  // \t}\n  // });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVmZWN0aXZvdmlhamVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJDYXJybyIsImRiIiwibW9kZWxzIiwiY2Fycm9zIiwiRW1wbGVhZG8iLCJlbXBsZWFkb3MiLCJFZmVjdGl2b3ZpYWplIiwiZWZlY3Rpdm92aWFqZXMiLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kQWxsIiwiYXR0cmlidXRlcyIsInRoZW4iLCJyZXN1bHQxIiwicmVzdWx0MiIsImluY2x1ZGUiLCJtb2RlbCIsInJlc3VsdDMiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsImJvZHkiLCJwb3N0IiwiY29uc29sZSIsImxvZyIsImVmZWN0aXZvdmlhamVzX2ZlY2hhIiwiY3JlYXRlIiwic2VuZCIsImVyciJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLE1BQTVCO0FBQ0EsTUFBTUMsUUFBUSxHQUFHTCxHQUFHLENBQUNFLEVBQUosQ0FBT0MsTUFBUCxDQUFjRyxTQUEvQjtBQUNBLE1BQU1DLGFBQWEsR0FBR1AsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0ssY0FBcEMsQ0FIc0IsQ0FLdEI7O0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLGlCQUFSLEVBQTJCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3hDVixJQUFBQSxLQUFLLENBQUNXLE9BQU4sQ0FBYztBQUFFQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxVQUFELEVBQWEsYUFBYjtBQUFkLEtBQWQsRUFDQ0MsSUFERCxDQUVDLFVBQUFDLE9BQU87QUFBQSxhQUFJVixRQUFRLENBQUNPLE9BQVQsQ0FBaUI7QUFBRUMsUUFBQUEsVUFBVSxFQUFFLENBQUMsYUFBRCxFQUFnQixpQkFBaEIsRUFBbUMsaUJBQW5DLEVBQXNELGlCQUF0RDtBQUFkLE9BQWpCLEVBQ1ZDLElBRFUsQ0FFVixVQUFBRSxPQUFPO0FBQUEsZUFBSVQsYUFBYSxDQUFDSyxPQUFkLENBQXNCO0FBQUVDLFVBQUFBLFVBQVUsRUFBRSxDQUFDLGtCQUFELEVBQXFCLHFCQUFyQixFQUE0QyxVQUE1QyxFQUF3RCxhQUF4RCxFQUF1RSxxQkFBdkUsRUFBOEYsb0JBQTlGLENBQWQ7QUFBbUlJLFVBQUFBLE9BQU8sRUFBRSxDQUFDO0FBQUNDLFlBQUFBLEtBQUssRUFBRWIsUUFBUjtBQUFrQlEsWUFBQUEsVUFBVSxFQUFFLENBQUMsYUFBRCxFQUFnQixpQkFBaEIsRUFBbUMsaUJBQW5DLEVBQXNELGlCQUF0RDtBQUE5QixXQUFELEVBQTBHO0FBQUNLLFlBQUFBLEtBQUssRUFBRWpCLEtBQVI7QUFBZVksWUFBQUEsVUFBVSxFQUFFLENBQUMsVUFBRCxFQUFZLGFBQVo7QUFBM0IsV0FBMUc7QUFBNUksU0FBdEIsRUFDVkMsSUFEVSxDQUVWLFVBQUFLLE9BQU87QUFBQSxpQkFBSVIsR0FBRyxDQUFDUyxJQUFKLENBQVMsQ0FBQ0wsT0FBRCxFQUFVQyxPQUFWLEVBQW1CRyxPQUFuQixDQUFULENBQUo7QUFBQSxTQUZHLENBQUo7QUFBQSxPQUZHLENBQUo7QUFBQSxLQUZSLEVBVUNFLEtBVkQsQ0FVTyxVQUFBQyxLQUFLLEVBQUk7QUFBRVgsTUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUJWLEdBQUcsQ0FBQ2MsSUFBekI7QUFBZ0MsS0FWbEQ7QUFXQSxHQVpELEVBTnNCLENBb0J0Qjs7QUFDQXhCLEVBQUFBLEdBQUcsQ0FBQ3lCLElBQUosQ0FBUyxpQkFBVCxFQUE0QixVQUFDZixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNyQ2UsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBY2pCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTSSxvQkFBdkIsR0FBOEMsSUFBMUQ7O0FBQ0osUUFBRyxDQUFDbEIsR0FBRyxDQUFDYyxJQUFKLENBQVNJLG9CQUFiLEVBQ0E7QUFDQ2pCLE1BQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVg7QUFDQUcsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNBaEIsTUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVNWLEdBQUcsQ0FBQ2MsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDakIsTUFBQUEsYUFBYSxDQUFDc0IsTUFBZCxDQUFxQm5CLEdBQUcsQ0FBQ2MsSUFBekIsRUFDQ1YsSUFERCxDQUNPLFlBQU07QUFDWkgsUUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLHdCQUFUO0FBQ0EsT0FIRCxFQUlDVCxLQUpELENBSU8sVUFBQVUsR0FBRyxFQUFJO0FBQ2JwQixRQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQU5EO0FBT0E7QUFDRCxHQWxCRCxFQXJCc0IsQ0EwQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FoRUQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IENhcnJvID0gYXBwLmRiLm1vZGVscy5jYXJyb3M7XHJcblx0Y29uc3QgRW1wbGVhZG8gPSBhcHAuZGIubW9kZWxzLmVtcGxlYWRvcztcclxuXHRjb25zdCBFZmVjdGl2b3ZpYWplID0gYXBwLmRiLm1vZGVscy5lZmVjdGl2b3ZpYWplcztcclxuXHJcblx0Ly8gZ2V0IGVmZWN0aXZvdmlhamVcclxuXHRhcHAuZ2V0KCcvZWZlY3Rpdm92aWFqZXMnLCAocmVxLCByZXMpID0+IHtcclxuXHRcdENhcnJvLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2NhcnJvX2lkJywgJ2NhcnJvX3BsYWNhJ10gfSlcclxuXHRcdC50aGVuKFxyXG5cdFx0XHRyZXN1bHQxID0+IEVtcGxlYWRvLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2VtcGxlYWRvX2lkJywgJ2VtcGxlYWRvX25vbWJyZScsICdlbXBsZWFkb19hcGVwYXQnLCAnZW1wbGVhZG9fYXBlbWF0J10gfSlcclxuXHRcdFx0LnRoZW4oXHJcblx0XHRcdFx0cmVzdWx0MiA9PiBFZmVjdGl2b3ZpYWplLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2VmZWN0aXZvdmlhamVfaWQnLCAnZWZlY3Rpdm92aWFqZV9mZWNoYScsICdjYXJyb19pZCcsICdlbXBsZWFkb19pZCcsICdlZmVjdGl2b3ZpYWplX21vbnRvJywgJ2VmZWN0aXZvdmlhamVfdGlwbyddLCBpbmNsdWRlOiBbe21vZGVsOiBFbXBsZWFkbywgYXR0cmlidXRlczogWydlbXBsZWFkb19pZCcsICdlbXBsZWFkb19ub21icmUnLCAnZW1wbGVhZG9fYXBlcGF0JywgJ2VtcGxlYWRvX2FwZW1hdCddfSwge21vZGVsOiBDYXJybywgYXR0cmlidXRlczogWydjYXJyb19pZCcsJ2NhcnJvX3BsYWNhJ119IF19KVxyXG5cdFx0XHRcdC50aGVuKFxyXG5cdFx0XHRcdFx0cmVzdWx0MyA9PiByZXMuanNvbihbcmVzdWx0MSwgcmVzdWx0MiwgcmVzdWx0M10pXHJcblx0XHRcdFx0KVxyXG5cdFx0XHQpXHJcblx0XHQpXHJcblx0XHQuY2F0Y2goZXJyb3IgPT4geyByZXMuc3RhdHVzKDQxMikuanNvbihyZXEuYm9keSkgfSkgXHJcblx0fSk7XHJcblxyXG5cdC8vIGFkZCBlZmVjdGl2b3ZpYWplXHJcblx0YXBwLnBvc3QoJy9lZmVjdGl2b3ZpYWplcycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZWZlY3Rpdm92aWFqZXNfZmVjaGEgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmVmZWN0aXZvdmlhamVzX2ZlY2hhKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQT1NUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRFZmVjdGl2b3ZpYWplLmNyZWF0ZShyZXEuYm9keSlcclxuXHRcdFx0LnRoZW4oICgpID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ0VmZWN0aXZvVmlhamUgQWdyZWdhZG8nKVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHJcblx0Ly8gdXBkYXRlIHZpYWplXHJcblx0Ly8gYXBwLnB1dCgnL3ZpYWplcy86aWQnLCAocmVxLCByZXMpPT57XHJcblx0Ly8gXHRjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkudmlhamVpZCArIFwiXFxuXCIpXHJcblx0Ly8gXHRpZighcmVxLmJvZHkudmlhamVpZClcclxuXHQvLyBcdHtcclxuXHQvLyBcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0Ly8gXHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUFVUXCIpXHJcblx0Ly8gXHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdC8vIFx0fVxyXG5cdC8vIFx0ZWxzZVxyXG5cdC8vIFx0e1xyXG5cdC8vIFx0XHRWaWFqZS51cGRhdGUoXHJcblx0Ly8gXHRcdFx0eyB2aWFqZV9pZDogcmVxLmJvZHkudmlhamVpZCwgY2Fycm9faWQ6IHJlcS5ib2R5LmNhcnJvaWQsIGVtcGxlYWRvX2lkOiByZXEuYm9keS5lbXBsZWFkb2lkLCBsdWdhcl9pZDogcmVxLmJvZHkubHVnYXJpZCwgY2xpZW50ZV9pZDogcmVxLmJvZHkuY2xpZW50ZWlkLCB2aWFqZV9mZWNzYWxpZGE6IHJlcS5ib2R5LmZlY3NhbGlkYSwgdmlhamVfZmVjcmV0b3JubzogcmVxLmJvZHkuZmVjcmV0b3JubyB9LCB7IHdoZXJlOiB7dmlhamVfaWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHQvLyBcdFx0KVxyXG5cdC8vIFx0XHQudGhlbigoKT0+e1xyXG5cdC8vIFx0XHRcdHJlcy5zZW5kKCdWaWFqZSBNb2RpZmljYWRvJyk7XHJcblx0Ly8gXHRcdH0pXHJcblx0Ly8gXHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdC8vIFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0Ly8gXHRcdH0pXHJcblx0Ly8gXHR9XHJcblx0Ly8gfSk7XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "efectivoviajes.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Carro",
        "db",
        "models",
        "carros",
        "Empleado",
        "empleados",
        "Efectivoviaje",
        "efectivoviajes",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "then",
        "result1",
        "result2",
        "include",
        "model",
        "result3",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "efectivoviajes_fecha",
        "create",
        "send",
        "err"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B;AACA,MAAMC,QAAQ,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,SAA/B;AACA,MAAMC,aAAa,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,cAApC,CAHsB,CAKtB;;AACAR,EAAAA,GAAG,CAACS,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCV,IAAAA,KAAK,CAACW,OAAN,CAAc;AAAEC,MAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb;AAAd,KAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIV,QAAQ,CAACO,OAAT,CAAiB;AAAEC,QAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAAd,OAAjB,EACVC,IADU,CAEV,UAAAE,OAAO;AAAA,eAAIT,aAAa,CAACK,OAAd,CAAsB;AAAEC,UAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,qBAArB,EAA4C,UAA5C,EAAwD,aAAxD,EAAuE,qBAAvE,EAA8F,oBAA9F,CAAd;AAAmII,UAAAA,OAAO,EAAE,CAAC;AAACC,YAAAA,KAAK,EAAEb,QAAR;AAAkBQ,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,WAAD,EAA0G;AAACK,YAAAA,KAAK,EAAEjB,KAAR;AAAeY,YAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,WAA1G;AAA5I,SAAtB,EACVC,IADU,CAEV,UAAAK,OAAO;AAAA,iBAAIR,GAAG,CAACS,IAAJ,CAAS,CAACL,OAAD,EAAUC,OAAV,EAAmBG,OAAnB,CAAT,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFG,CAAJ;AAAA,KAFR,EAUCE,KAVD,CAUO,UAAAC,KAAK,EAAI;AAAEX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBV,GAAG,CAACc,IAAzB;AAAgC,KAVlD;AAWA,GAZD,EANsB,CAoBtB;;AACAxB,EAAAA,GAAG,CAACyB,IAAJ,CAAS,iBAAT,EAA4B,UAACf,GAAD,EAAMC,GAAN,EAAc;AACrCe,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcjB,GAAG,CAACc,IAAJ,CAASI,oBAAvB,GAA8C,IAA1D;;AACJ,QAAG,CAAClB,GAAG,CAACc,IAAJ,CAASI,oBAAb,EACA;AACCjB,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACS,IAAJ,CAASV,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCjB,MAAAA,aAAa,CAACsB,MAAd,CAAqBnB,GAAG,CAACc,IAAzB,EACCV,IADD,CACO,YAAM;AACZH,QAAAA,GAAG,CAACmB,IAAJ,CAAS,wBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbpB,QAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EArBsB,CA0CtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhED",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Carro = app.db.models.carros;\r\n\tconst Empleado = app.db.models.empleados;\r\n\tconst Efectivoviaje = app.db.models.efectivoviajes;\r\n\r\n\t// get efectivoviaje\r\n\tapp.get('/efectivoviajes', (req, res) => {\r\n\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'] })\r\n\t\t.then(\r\n\t\t\tresult1 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\r\n\t\t\t.then(\r\n\t\t\t\tresult2 => Efectivoviaje.findAll({ attributes: ['efectivoviaje_id', 'efectivoviaje_fecha', 'carro_id', 'empleado_id', 'efectivoviaje_monto', 'efectivoviaje_tipo'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Carro, attributes: ['carro_id','carro_placa']} ]})\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult3 => res.json([result1, result2, result3])\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// add efectivoviaje\r\n\tapp.post('/efectivoviajes', (req, res) => {\r\n      console.log(\"======>> \" + req.body.efectivoviajes_fecha + \"\\n\")\r\n\t\tif(!req.body.efectivoviajes_fecha)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tEfectivoviaje.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('EfectivoViaje Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// update viaje\r\n\t// app.put('/viajes/:id', (req, res)=>{\r\n\t// \tconsole.log(\"======>> \" + req.body.viajeid + \"\\n\")\r\n\t// \tif(!req.body.viajeid)\r\n\t// \t{\r\n\t// \t\tres.status(400)\r\n\t// \t\tconsole.log(\"ERROR PUT\")\r\n\t// \t\tres.json(req.body)\r\n\t// \t}\r\n\t// \telse\r\n\t// \t{\r\n\t// \t\tViaje.update(\r\n\t// \t\t\t{ viaje_id: req.body.viajeid, carro_id: req.body.carroid, empleado_id: req.body.empleadoid, lugar_id: req.body.lugarid, cliente_id: req.body.clienteid, viaje_fecsalida: req.body.fecsalida, viaje_fecretorno: req.body.fecretorno }, { where: {viaje_id: req.params.id} }\r\n\t// \t\t)\r\n\t// \t\t.then(()=>{\r\n\t// \t\t\tres.send('Viaje Modificado');\r\n\t// \t\t})\r\n\t// \t\t.error(err => {\r\n\t// \t\t\tres.send('error: ' + err);\r\n\t// \t\t})\r\n\t// \t}\r\n\t// });\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550787526198
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\empleados.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\empleados.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\empleados.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\empleados.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "empleados.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Empleado = app.db.models.empleados;\n  app.get('/empleados', function (req, res) {\n    Empleado.findAll({\n      where: {\n        empleado_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add empleado\n\n  app.post('/empleados', function (req, res) {\n    // console.log(\"======>> \" + req.body.empleado_dniruc + \"\\n\")\n    if (!req.body.empleado_dniruc) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Empleado.create(req.body).then(function () {\n        res.send('Empleado Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // actualiza empleado \n\n  app.put('/empleados/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.dniruc + \"\\n\");\n\n    if (!req.body.dniruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Empleado.update({\n        empleado_nombre: req.body.nombre,\n        empleado_apepat: req.body.apepat,\n        empleado_apemat: req.body.apemat,\n        empleado_dniruc: req.body.dniruc,\n        empleado_fecing: req.body.fecing,\n        empleado_feclicencia: req.body.feclicencia,\n        empleado_cargo: req.body.cargo,\n        empleado_paga: req.body.paga,\n        empleado_direccion: req.body.direccion,\n        empleado_telefono: req.body.telefono,\n        empleado_email: req.body.email,\n        empleado_nacion: req.body.nacion\n      }, {\n        where: {\n          empleado_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Empleado Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxlYWRvcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiRW1wbGVhZG8iLCJkYiIsIm1vZGVscyIsImVtcGxlYWRvcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ3aGVyZSIsImVtcGxlYWRvX2VzdGFkbyIsInRoZW4iLCJyZXN1bHQiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsIm1zZyIsIm1lc3NhZ2UiLCJwb3N0IiwiYm9keSIsImVtcGxlYWRvX2RuaXJ1YyIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGUiLCJzZW5kIiwiZXJyIiwicHV0IiwiZG5pcnVjIiwidXBkYXRlIiwiZW1wbGVhZG9fbm9tYnJlIiwibm9tYnJlIiwiZW1wbGVhZG9fYXBlcGF0IiwiYXBlcGF0IiwiZW1wbGVhZG9fYXBlbWF0IiwiYXBlbWF0IiwiZW1wbGVhZG9fZmVjaW5nIiwiZmVjaW5nIiwiZW1wbGVhZG9fZmVjbGljZW5jaWEiLCJmZWNsaWNlbmNpYSIsImVtcGxlYWRvX2NhcmdvIiwiY2FyZ28iLCJlbXBsZWFkb19wYWdhIiwicGFnYSIsImVtcGxlYWRvX2RpcmVjY2lvbiIsImRpcmVjY2lvbiIsImVtcGxlYWRvX3RlbGVmb25vIiwidGVsZWZvbm8iLCJlbXBsZWFkb19lbWFpbCIsImVtYWlsIiwiZW1wbGVhZG9fbmFjaW9uIiwibmFjaW9uIiwiZW1wbGVhZG9faWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxRQUFRLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLFNBQS9CO0FBRUFKLEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbkNOLElBQUFBLFFBQVEsQ0FBQ08sT0FBVCxDQUFpQjtBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsZUFBZSxFQUFFO0FBQWxCO0FBQVIsS0FBakIsRUFDQ0MsSUFERCxDQUNNLFVBQUFDLE1BQU07QUFBQSxhQUFJTCxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVCxDQUFKO0FBQUEsS0FEWixFQUVDRSxLQUZELENBRU8sVUFBQUMsS0FBSyxFQUFJO0FBQ2ZSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCO0FBQUNJLFFBQUFBLEdBQUcsRUFBRUYsS0FBSyxDQUFDRztBQUFaLE9BQXJCO0FBQ0EsS0FKRDtBQUtBLEdBTkQsRUFIc0IsQ0FXdEI7O0FBQ0FsQixFQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsWUFBVCxFQUF1QixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNoQztBQUNKLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNDLGVBQWIsRUFDQTtBQUNDZCxNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLFFBQVEsQ0FBQ3VCLE1BQVQsQ0FBZ0JsQixHQUFHLENBQUNjLElBQXBCLEVBQ0NULElBREQsQ0FDTyxZQUFNO0FBQ1pKLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxtQkFBVDtBQUNBLE9BSEQsRUFJQ1gsS0FKRCxDQUlPLFVBQUFZLEdBQUcsRUFBSTtBQUNibkIsUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUFac0IsQ0FnQ3RCOztBQUNBMUIsRUFBQUEsR0FBRyxDQUFDMkIsR0FBSixDQUFRLGdCQUFSLEVBQTBCLFVBQUNyQixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNyQ2UsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBY2pCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxNQUF2QixHQUFnQyxJQUE1Qzs7QUFDQSxRQUFHLENBQUN0QixHQUFHLENBQUNjLElBQUosQ0FBU1EsTUFBYixFQUNBO0FBQ0NyQixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLFFBQVEsQ0FBQzRCLE1BQVQsQ0FDQztBQUFFQyxRQUFBQSxlQUFlLEVBQUV4QixHQUFHLENBQUNjLElBQUosQ0FBU1csTUFBNUI7QUFBb0NDLFFBQUFBLGVBQWUsRUFBRTFCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTYSxNQUE5RDtBQUFzRUMsUUFBQUEsZUFBZSxFQUFFNUIsR0FBRyxDQUFDYyxJQUFKLENBQVNlLE1BQWhHO0FBQXdHZCxRQUFBQSxlQUFlLEVBQUVmLEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxNQUFsSTtBQUEwSVEsUUFBQUEsZUFBZSxFQUFFOUIsR0FBRyxDQUFDYyxJQUFKLENBQVNpQixNQUFwSztBQUE0S0MsUUFBQUEsb0JBQW9CLEVBQUVoQyxHQUFHLENBQUNjLElBQUosQ0FBU21CLFdBQTNNO0FBQXdOQyxRQUFBQSxjQUFjLEVBQUVsQyxHQUFHLENBQUNjLElBQUosQ0FBU3FCLEtBQWpQO0FBQXdQQyxRQUFBQSxhQUFhLEVBQUVwQyxHQUFHLENBQUNjLElBQUosQ0FBU3VCLElBQWhSO0FBQXNSQyxRQUFBQSxrQkFBa0IsRUFBRXRDLEdBQUcsQ0FBQ2MsSUFBSixDQUFTeUIsU0FBblQ7QUFBOFRDLFFBQUFBLGlCQUFpQixFQUFFeEMsR0FBRyxDQUFDYyxJQUFKLENBQVMyQixRQUExVjtBQUFvV0MsUUFBQUEsY0FBYyxFQUFFMUMsR0FBRyxDQUFDYyxJQUFKLENBQVM2QixLQUE3WDtBQUFvWUMsUUFBQUEsZUFBZSxFQUFFNUMsR0FBRyxDQUFDYyxJQUFKLENBQVMrQjtBQUE5WixPQURELEVBQ3lhO0FBQUUxQyxRQUFBQSxLQUFLLEVBQUU7QUFBQzJDLFVBQUFBLFdBQVcsRUFBRTlDLEdBQUcsQ0FBQytDLE1BQUosQ0FBV0M7QUFBekI7QUFBVCxPQUR6YSxFQUdDM0MsSUFIRCxDQUdNLFlBQUk7QUFDVEosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLHFCQUFUO0FBQ0EsT0FMRCxFQU1DVixLQU5ELENBTU8sVUFBQVcsR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQVJEO0FBU0E7QUFDRCxHQXBCRDtBQXFCQSxDQXRERCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgRW1wbGVhZG8gPSBhcHAuZGIubW9kZWxzLmVtcGxlYWRvcztcclxuXHJcblx0YXBwLmdldCgnL2VtcGxlYWRvcycsIChyZXEsIHJlcykgPT4ge1xyXG5cdFx0RW1wbGVhZG8uZmluZEFsbCh7d2hlcmU6IHtlbXBsZWFkb19lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MTIpLmpzb24oe21zZzogZXJyb3IubWVzc2FnZX0pXHJcblx0XHR9KVxyXG5cdH0pO1xyXG5cclxuXHQvLyBhZGQgZW1wbGVhZG9cclxuXHRhcHAucG9zdCgnL2VtcGxlYWRvcycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZW1wbGVhZG9fZG5pcnVjICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5lbXBsZWFkb19kbmlydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdEVtcGxlYWRvLmNyZWF0ZShyZXEuYm9keSlcclxuXHRcdFx0LnRoZW4oICgpID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ0VtcGxlYWRvIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gYWN0dWFsaXphIGVtcGxlYWRvIFxyXG5cdGFwcC5wdXQoJy9lbXBsZWFkb3MvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0Y29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LmRuaXJ1YyArIFwiXFxuXCIpXHJcblx0XHRpZighcmVxLmJvZHkuZG5pcnVjKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQVVRcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdEVtcGxlYWRvLnVwZGF0ZShcclxuXHRcdFx0XHR7IGVtcGxlYWRvX25vbWJyZTogcmVxLmJvZHkubm9tYnJlLCBlbXBsZWFkb19hcGVwYXQ6IHJlcS5ib2R5LmFwZXBhdCwgZW1wbGVhZG9fYXBlbWF0OiByZXEuYm9keS5hcGVtYXQsIGVtcGxlYWRvX2RuaXJ1YzogcmVxLmJvZHkuZG5pcnVjLCBlbXBsZWFkb19mZWNpbmc6IHJlcS5ib2R5LmZlY2luZywgZW1wbGVhZG9fZmVjbGljZW5jaWE6IHJlcS5ib2R5LmZlY2xpY2VuY2lhLCBlbXBsZWFkb19jYXJnbzogcmVxLmJvZHkuY2FyZ28sIGVtcGxlYWRvX3BhZ2E6IHJlcS5ib2R5LnBhZ2EsIGVtcGxlYWRvX2RpcmVjY2lvbjogcmVxLmJvZHkuZGlyZWNjaW9uLCBlbXBsZWFkb190ZWxlZm9ubzogcmVxLmJvZHkudGVsZWZvbm8sIGVtcGxlYWRvX2VtYWlsOiByZXEuYm9keS5lbWFpbCwgZW1wbGVhZG9fbmFjaW9uOiByZXEuYm9keS5uYWNpb24gfSwgeyB3aGVyZToge2VtcGxlYWRvX2lkOiByZXEucGFyYW1zLmlkfSB9XHJcblx0XHRcdClcclxuXHRcdFx0LnRoZW4oKCk9PntcclxuXHRcdFx0XHRyZXMuc2VuZCgnRW1wbGVhZG8gTW9kaWZpY2FkbycpO1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQuZXJyb3IoZXJyID0+IHtcclxuXHRcdFx0XHRyZXMuc2VuZCgnZXJyb3I6ICcgKyBlcnIpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "empleados.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Empleado",
        "db",
        "models",
        "empleados",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "empleado_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "empleado_dniruc",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "dniruc",
        "update",
        "empleado_nombre",
        "nombre",
        "empleado_apepat",
        "apepat",
        "empleado_apemat",
        "apemat",
        "empleado_fecing",
        "fecing",
        "empleado_feclicencia",
        "feclicencia",
        "empleado_cargo",
        "cargo",
        "empleado_paga",
        "paga",
        "empleado_direccion",
        "direccion",
        "empleado_telefono",
        "telefono",
        "empleado_email",
        "email",
        "empleado_nacion",
        "nacion",
        "empleado_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,QAAQ,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,SAA/B;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCN,IAAAA,QAAQ,CAACO,OAAT,CAAiB;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB;AAAR,KAAjB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAHsB,CAWtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAT,EAAuB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAChC;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,eAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,QAAQ,CAACuB,MAAT,CAAgBlB,GAAG,CAACc,IAApB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,mBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAZsB,CAgCtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,gBAAR,EAA0B,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACrCe,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcjB,GAAG,CAACc,IAAJ,CAASQ,MAAvB,GAAgC,IAA5C;;AACA,QAAG,CAACtB,GAAG,CAACc,IAAJ,CAASQ,MAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,QAAQ,CAAC4B,MAAT,CACC;AAAEC,QAAAA,eAAe,EAAExB,GAAG,CAACc,IAAJ,CAASW,MAA5B;AAAoCC,QAAAA,eAAe,EAAE1B,GAAG,CAACc,IAAJ,CAASa,MAA9D;AAAsEC,QAAAA,eAAe,EAAE5B,GAAG,CAACc,IAAJ,CAASe,MAAhG;AAAwGd,QAAAA,eAAe,EAAEf,GAAG,CAACc,IAAJ,CAASQ,MAAlI;AAA0IQ,QAAAA,eAAe,EAAE9B,GAAG,CAACc,IAAJ,CAASiB,MAApK;AAA4KC,QAAAA,oBAAoB,EAAEhC,GAAG,CAACc,IAAJ,CAASmB,WAA3M;AAAwNC,QAAAA,cAAc,EAAElC,GAAG,CAACc,IAAJ,CAASqB,KAAjP;AAAwPC,QAAAA,aAAa,EAAEpC,GAAG,CAACc,IAAJ,CAASuB,IAAhR;AAAsRC,QAAAA,kBAAkB,EAAEtC,GAAG,CAACc,IAAJ,CAASyB,SAAnT;AAA8TC,QAAAA,iBAAiB,EAAExC,GAAG,CAACc,IAAJ,CAAS2B,QAA1V;AAAoWC,QAAAA,cAAc,EAAE1C,GAAG,CAACc,IAAJ,CAAS6B,KAA7X;AAAoYC,QAAAA,eAAe,EAAE5C,GAAG,CAACc,IAAJ,CAAS+B;AAA9Z,OADD,EACya;AAAE1C,QAAAA,KAAK,EAAE;AAAC2C,UAAAA,WAAW,EAAE9C,GAAG,CAAC+C,MAAJ,CAAWC;AAAzB;AAAT,OADza,EAGC3C,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,qBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAtDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Empleado = app.db.models.empleados;\r\n\r\n\tapp.get('/empleados', (req, res) => {\r\n\t\tEmpleado.findAll({where: {empleado_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => {\r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add empleado\r\n\tapp.post('/empleados', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.empleado_dniruc + \"\\n\")\r\n\t\tif(!req.body.empleado_dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tEmpleado.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Empleado Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// actualiza empleado \r\n\tapp.put('/empleados/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.dniruc + \"\\n\")\r\n\t\tif(!req.body.dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tEmpleado.update(\r\n\t\t\t\t{ empleado_nombre: req.body.nombre, empleado_apepat: req.body.apepat, empleado_apemat: req.body.apemat, empleado_dniruc: req.body.dniruc, empleado_fecing: req.body.fecing, empleado_feclicencia: req.body.feclicencia, empleado_cargo: req.body.cargo, empleado_paga: req.body.paga, empleado_direccion: req.body.direccion, empleado_telefono: req.body.telefono, empleado_email: req.body.email, empleado_nacion: req.body.nacion }, { where: {empleado_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Empleado Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554152285985
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\facturas.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\facturas.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\facturas.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\facturas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "facturas.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Factura = app.db.models.facturas;\n  var Cliente = app.db.models.clientes; // get factura\n\n  app.get('/facturas', function (req, res) {\n    Cliente.findAll({\n      attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre'],\n      where: {\n        cliente_estado: 1\n      },\n      order: [['cliente_nombre', 'ASC']]\n    }).then(function (result1) {\n      return Factura.findAll({\n        attributes: ['factura_id', 'cliente_id', 'factura_nro', 'factura_fecha2', 'factura_total', 'factura_guias', 'factura_feccancela2'],\n        include: [{\n          model: Cliente,\n          attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre']\n        }],\n        order: [['factura_nro', 'DESC'], ['factura_fecha2', 'DESC']],\n        where: {\n          factura_estado: 1\n        }\n      }).then(function (result2) {\n        return res.json([result1, result2]);\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add factura\n\n  app.post('/facturas', function (req, res) {\n    console.log(\"======>> \" + req.body.factura_fecha2 + \"\\n\");\n\n    if (!req.body.factura_fecha2) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Factura.create(req.body).then(function () {\n        res.send('Factura Agregada');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update factura\n\n  app.put('/facturas/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.clienteid + \"\\n\");\n\n    if (!req.body.clienteid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Factura.update({\n        cliente_id: req.body.clienteid,\n        factura_nro: req.body.facturanro,\n        factura_fecha2: req.body.facturafecha2,\n        factura_total: req.body.facturatotal,\n        factura_guias: req.body.facturaguias,\n        factura_feccancela2: req.body.facturafeccancela2\n      }, {\n        where: {\n          factura_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Factura Modificada');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhY3R1cmFzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJGYWN0dXJhIiwiZGIiLCJtb2RlbHMiLCJmYWN0dXJhcyIsIkNsaWVudGUiLCJjbGllbnRlcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJjbGllbnRlX2VzdGFkbyIsIm9yZGVyIiwidGhlbiIsInJlc3VsdDEiLCJpbmNsdWRlIiwibW9kZWwiLCJmYWN0dXJhX2VzdGFkbyIsInJlc3VsdDIiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsImJvZHkiLCJwb3N0IiwiY29uc29sZSIsImxvZyIsImZhY3R1cmFfZmVjaGEyIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsImNsaWVudGVpZCIsInVwZGF0ZSIsImNsaWVudGVfaWQiLCJmYWN0dXJhX25ybyIsImZhY3R1cmFucm8iLCJmYWN0dXJhZmVjaGEyIiwiZmFjdHVyYV90b3RhbCIsImZhY3R1cmF0b3RhbCIsImZhY3R1cmFfZ3VpYXMiLCJmYWN0dXJhZ3VpYXMiLCJmYWN0dXJhX2ZlY2NhbmNlbGEyIiwiZmFjdHVyYWZlY2NhbmNlbGEyIiwiZmFjdHVyYV9pZCIsInBhcmFtcyIsImlkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLE9BQU8sR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsUUFBOUI7QUFDQSxNQUFNQyxPQUFPLEdBQUdMLEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNHLFFBQTlCLENBRnNCLENBSXRCOztBQUNBTixFQUFBQSxHQUFHLENBQUNPLEdBQUosQ0FBUSxXQUFSLEVBQXFCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDSixJQUFBQSxPQUFPLENBQUNLLE9BQVIsQ0FBZ0I7QUFBRUMsTUFBQUEsVUFBVSxFQUFFLENBQUMsWUFBRCxFQUFlLGdCQUFmLEVBQWlDLGdCQUFqQyxDQUFkO0FBQWtFQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsY0FBYyxFQUFFO0FBQWpCLE9BQXpFO0FBQThGQyxNQUFBQSxLQUFLLEVBQUUsQ0FBQyxDQUFDLGdCQUFELEVBQW1CLEtBQW5CLENBQUQ7QUFBckcsS0FBaEIsRUFDQ0MsSUFERCxDQUVDLFVBQUFDLE9BQU87QUFBQSxhQUFJZixPQUFPLENBQUNTLE9BQVIsQ0FBZ0I7QUFBRUMsUUFBQUEsVUFBVSxFQUFFLENBQUMsWUFBRCxFQUFlLFlBQWYsRUFBNkIsYUFBN0IsRUFBNEMsZ0JBQTVDLEVBQThELGVBQTlELEVBQStFLGVBQS9FLEVBQWdHLHFCQUFoRyxDQUFkO0FBQXNJTSxRQUFBQSxPQUFPLEVBQUUsQ0FBQztBQUFDQyxVQUFBQSxLQUFLLEVBQUViLE9BQVI7QUFBaUJNLFVBQUFBLFVBQVUsRUFBRSxDQUFDLFlBQUQsRUFBZSxnQkFBZixFQUFpQyxnQkFBakM7QUFBN0IsU0FBRCxDQUEvSTtBQUFtT0csUUFBQUEsS0FBSyxFQUFFLENBQUMsQ0FBQyxhQUFELEVBQWdCLE1BQWhCLENBQUQsRUFBMEIsQ0FBQyxnQkFBRCxFQUFtQixNQUFuQixDQUExQixDQUExTztBQUFpU0YsUUFBQUEsS0FBSyxFQUFFO0FBQUNPLFVBQUFBLGNBQWMsRUFBRTtBQUFqQjtBQUF4UyxPQUFoQixFQUNQSixJQURPLENBQ0QsVUFBQUssT0FBTztBQUFBLGVBQUlYLEdBQUcsQ0FBQ1ksSUFBSixDQUFTLENBQUNMLE9BQUQsRUFBVUksT0FBVixDQUFULENBQUo7QUFBQSxPQUROLENBQUo7QUFBQSxLQUZSLEVBS0NFLEtBTEQsQ0FLTyxVQUFBQyxLQUFLLEVBQUk7QUFBRWQsTUFBQUEsR0FBRyxDQUFDZSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUJiLEdBQUcsQ0FBQ2lCLElBQXpCO0FBQWdDLEtBTGxEO0FBTUEsR0FQRCxFQUxzQixDQWN0Qjs7QUFDQXpCLEVBQUFBLEdBQUcsQ0FBQzBCLElBQUosQ0FBUyxXQUFULEVBQXNCLFVBQUNsQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMvQmtCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQWNwQixHQUFHLENBQUNpQixJQUFKLENBQVNJLGNBQXZCLEdBQXdDLElBQXBEOztBQUNKLFFBQUcsQ0FBQ3JCLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU0ksY0FBYixFQUNBO0FBQ0NwQixNQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYO0FBQ0FHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQW5CLE1BQUFBLEdBQUcsQ0FBQ1ksSUFBSixDQUFTYixHQUFHLENBQUNpQixJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0N4QixNQUFBQSxPQUFPLENBQUM2QixNQUFSLENBQWV0QixHQUFHLENBQUNpQixJQUFuQixFQUNDVixJQURELENBQ08sWUFBTTtBQUNaTixRQUFBQSxHQUFHLENBQUNzQixJQUFKLENBQVMsa0JBQVQ7QUFDQSxPQUhELEVBSUNULEtBSkQsQ0FJTyxVQUFBVSxHQUFHLEVBQUk7QUFDYnZCLFFBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxZQUFZQyxHQUFyQjtBQUNBLE9BTkQ7QUFPQTtBQUNELEdBbEJELEVBZnNCLENBbUN0Qjs7QUFDQWhDLEVBQUFBLEdBQUcsQ0FBQ2lDLEdBQUosQ0FBUSxlQUFSLEVBQXlCLFVBQUN6QixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNwQ2tCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQWNwQixHQUFHLENBQUNpQixJQUFKLENBQVNTLFNBQXZCLEdBQW1DLElBQS9DOztBQUNBLFFBQUcsQ0FBQzFCLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU1MsU0FBYixFQUNBO0FBQ0N6QixNQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYO0FBQ0FHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDQW5CLE1BQUFBLEdBQUcsQ0FBQ1ksSUFBSixDQUFTYixHQUFHLENBQUNpQixJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0N4QixNQUFBQSxPQUFPLENBQUNrQyxNQUFSLENBQ0M7QUFBRUMsUUFBQUEsVUFBVSxFQUFFNUIsR0FBRyxDQUFDaUIsSUFBSixDQUFTUyxTQUF2QjtBQUFrQ0csUUFBQUEsV0FBVyxFQUFFN0IsR0FBRyxDQUFDaUIsSUFBSixDQUFTYSxVQUF4RDtBQUFvRVQsUUFBQUEsY0FBYyxFQUFFckIsR0FBRyxDQUFDaUIsSUFBSixDQUFTYyxhQUE3RjtBQUE0R0MsUUFBQUEsYUFBYSxFQUFFaEMsR0FBRyxDQUFDaUIsSUFBSixDQUFTZ0IsWUFBcEk7QUFBa0pDLFFBQUFBLGFBQWEsRUFBRWxDLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU2tCLFlBQTFLO0FBQXdMQyxRQUFBQSxtQkFBbUIsRUFBRXBDLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU29CO0FBQXROLE9BREQsRUFDNk87QUFBRWpDLFFBQUFBLEtBQUssRUFBRTtBQUFDa0MsVUFBQUEsVUFBVSxFQUFFdEMsR0FBRyxDQUFDdUMsTUFBSixDQUFXQztBQUF4QjtBQUFULE9BRDdPLEVBR0NqQyxJQUhELENBR00sWUFBSTtBQUNUTixRQUFBQSxHQUFHLENBQUNzQixJQUFKLENBQVMsb0JBQVQ7QUFDQSxPQUxELEVBTUNSLEtBTkQsQ0FNTyxVQUFBUyxHQUFHLEVBQUk7QUFDYnZCLFFBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxZQUFZQyxHQUFyQjtBQUNBLE9BUkQ7QUFTQTtBQUNELEdBcEJEO0FBcUJBLENBekREIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFwcCA9PntcclxuXHRjb25zdCBGYWN0dXJhID0gYXBwLmRiLm1vZGVscy5mYWN0dXJhcztcclxuXHRjb25zdCBDbGllbnRlID0gYXBwLmRiLm1vZGVscy5jbGllbnRlcztcclxuXHJcblx0Ly8gZ2V0IGZhY3R1cmFcclxuXHRhcHAuZ2V0KCcvZmFjdHVyYXMnLCAocmVxLCByZXMpID0+IHtcclxuXHRcdENsaWVudGUuZmluZEFsbCh7IGF0dHJpYnV0ZXM6IFsnY2xpZW50ZV9pZCcsICdjbGllbnRlX2RuaXJ1YycsICdjbGllbnRlX25vbWJyZSddLCB3aGVyZToge2NsaWVudGVfZXN0YWRvOiAxfSwgb3JkZXI6IFtbJ2NsaWVudGVfbm9tYnJlJywgJ0FTQyddXSB9KVxyXG5cdFx0LnRoZW4oXHJcblx0XHRcdHJlc3VsdDEgPT4gRmFjdHVyYS5maW5kQWxsKHsgYXR0cmlidXRlczogWydmYWN0dXJhX2lkJywgJ2NsaWVudGVfaWQnLCAnZmFjdHVyYV9ucm8nLCAnZmFjdHVyYV9mZWNoYTInLCAnZmFjdHVyYV90b3RhbCcsICdmYWN0dXJhX2d1aWFzJywgJ2ZhY3R1cmFfZmVjY2FuY2VsYTInXSwgaW5jbHVkZTogW3ttb2RlbDogQ2xpZW50ZSwgYXR0cmlidXRlczogWydjbGllbnRlX2lkJywgJ2NsaWVudGVfZG5pcnVjJywgJ2NsaWVudGVfbm9tYnJlJ119XSwgb3JkZXI6IFtbJ2ZhY3R1cmFfbnJvJywgJ0RFU0MnXSwgWydmYWN0dXJhX2ZlY2hhMicsICdERVNDJ11dLCB3aGVyZToge2ZhY3R1cmFfZXN0YWRvOiAxfSB9KVxyXG5cdFx0XHQgICAudGhlbiggcmVzdWx0MiA9PiByZXMuanNvbihbcmVzdWx0MSwgcmVzdWx0Ml0pIClcclxuXHRcdClcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7IHJlcy5zdGF0dXMoNDEyKS5qc29uKHJlcS5ib2R5KSB9KSBcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIGZhY3R1cmFcclxuXHRhcHAucG9zdCgnL2ZhY3R1cmFzJywgKHJlcSwgcmVzKSA9PiB7IFxyXG4gICAgICBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZmFjdHVyYV9mZWNoYTIgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmZhY3R1cmFfZmVjaGEyKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQT1NUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRGYWN0dXJhLmNyZWF0ZShyZXEuYm9keSlcclxuXHRcdFx0LnRoZW4oICgpID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ0ZhY3R1cmEgQWdyZWdhZGEnKVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHQvLyB1cGRhdGUgZmFjdHVyYVxyXG5cdGFwcC5wdXQoJy9mYWN0dXJhcy86aWQnLCAocmVxLCByZXMpPT57XHJcblx0XHRjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuY2xpZW50ZWlkICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5jbGllbnRlaWQpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBVVFwiKVxyXG5cdFx0XHRyZXMuanNvbihyZXEuYm9keSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0RmFjdHVyYS51cGRhdGUoXHJcblx0XHRcdFx0eyBjbGllbnRlX2lkOiByZXEuYm9keS5jbGllbnRlaWQsIGZhY3R1cmFfbnJvOiByZXEuYm9keS5mYWN0dXJhbnJvLCBmYWN0dXJhX2ZlY2hhMjogcmVxLmJvZHkuZmFjdHVyYWZlY2hhMiwgZmFjdHVyYV90b3RhbDogcmVxLmJvZHkuZmFjdHVyYXRvdGFsLCBmYWN0dXJhX2d1aWFzOiByZXEuYm9keS5mYWN0dXJhZ3VpYXMsIGZhY3R1cmFfZmVjY2FuY2VsYTI6IHJlcS5ib2R5LmZhY3R1cmFmZWNjYW5jZWxhMiB9LCB7IHdoZXJlOiB7ZmFjdHVyYV9pZDogcmVxLnBhcmFtcy5pZH0gfVxyXG5cdFx0XHQpXHJcblx0XHRcdC50aGVuKCgpPT57XHJcblx0XHRcdFx0cmVzLnNlbmQoJ0ZhY3R1cmEgTW9kaWZpY2FkYScpO1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQuZXJyb3IoZXJyID0+IHtcclxuXHRcdFx0XHRyZXMuc2VuZCgnZXJyb3I6ICcgKyBlcnIpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "facturas.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Factura",
        "db",
        "models",
        "facturas",
        "Cliente",
        "clientes",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "where",
        "cliente_estado",
        "order",
        "then",
        "result1",
        "include",
        "model",
        "factura_estado",
        "result2",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "factura_fecha2",
        "create",
        "send",
        "err",
        "put",
        "clienteid",
        "update",
        "cliente_id",
        "factura_nro",
        "facturanro",
        "facturafecha2",
        "factura_total",
        "facturatotal",
        "factura_guias",
        "facturaguias",
        "factura_feccancela2",
        "facturafeccancela2",
        "factura_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,OAAO,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,QAA9B;AACA,MAAMC,OAAO,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,QAA9B,CAFsB,CAItB;;AACAN,EAAAA,GAAG,CAACO,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCJ,IAAAA,OAAO,CAACK,OAAR,CAAgB;AAAEC,MAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,CAAd;AAAkEC,MAAAA,KAAK,EAAE;AAACC,QAAAA,cAAc,EAAE;AAAjB,OAAzE;AAA8FC,MAAAA,KAAK,EAAE,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAArG,KAAhB,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIf,OAAO,CAACS,OAAR,CAAgB;AAAEC,QAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,YAAf,EAA6B,aAA7B,EAA4C,gBAA5C,EAA8D,eAA9D,EAA+E,eAA/E,EAAgG,qBAAhG,CAAd;AAAsIM,QAAAA,OAAO,EAAE,CAAC;AAACC,UAAAA,KAAK,EAAEb,OAAR;AAAiBM,UAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC;AAA7B,SAAD,CAA/I;AAAmOG,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,CAAD,EAA0B,CAAC,gBAAD,EAAmB,MAAnB,CAA1B,CAA1O;AAAiSF,QAAAA,KAAK,EAAE;AAACO,UAAAA,cAAc,EAAE;AAAjB;AAAxS,OAAhB,EACPJ,IADO,CACD,UAAAK,OAAO;AAAA,eAAIX,GAAG,CAACY,IAAJ,CAAS,CAACL,OAAD,EAAUI,OAAV,CAAT,CAAJ;AAAA,OADN,CAAJ;AAAA,KAFR,EAKCE,KALD,CAKO,UAAAC,KAAK,EAAI;AAAEd,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBb,GAAG,CAACiB,IAAzB;AAAgC,KALlD;AAMA,GAPD,EALsB,CActB;;AACAzB,EAAAA,GAAG,CAAC0B,IAAJ,CAAS,WAAT,EAAsB,UAAClB,GAAD,EAAMC,GAAN,EAAc;AAC/BkB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcpB,GAAG,CAACiB,IAAJ,CAASI,cAAvB,GAAwC,IAApD;;AACJ,QAAG,CAACrB,GAAG,CAACiB,IAAJ,CAASI,cAAb,EACA;AACCpB,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAnB,MAAAA,GAAG,CAACY,IAAJ,CAASb,GAAG,CAACiB,IAAb;AACA,KALD,MAOA;AACCxB,MAAAA,OAAO,CAAC6B,MAAR,CAAetB,GAAG,CAACiB,IAAnB,EACCV,IADD,CACO,YAAM;AACZN,QAAAA,GAAG,CAACsB,IAAJ,CAAS,kBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAfsB,CAmCtB;;AACAhC,EAAAA,GAAG,CAACiC,GAAJ,CAAQ,eAAR,EAAyB,UAACzB,GAAD,EAAMC,GAAN,EAAY;AACpCkB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcpB,GAAG,CAACiB,IAAJ,CAASS,SAAvB,GAAmC,IAA/C;;AACA,QAAG,CAAC1B,GAAG,CAACiB,IAAJ,CAASS,SAAb,EACA;AACCzB,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAnB,MAAAA,GAAG,CAACY,IAAJ,CAASb,GAAG,CAACiB,IAAb;AACA,KALD,MAOA;AACCxB,MAAAA,OAAO,CAACkC,MAAR,CACC;AAAEC,QAAAA,UAAU,EAAE5B,GAAG,CAACiB,IAAJ,CAASS,SAAvB;AAAkCG,QAAAA,WAAW,EAAE7B,GAAG,CAACiB,IAAJ,CAASa,UAAxD;AAAoET,QAAAA,cAAc,EAAErB,GAAG,CAACiB,IAAJ,CAASc,aAA7F;AAA4GC,QAAAA,aAAa,EAAEhC,GAAG,CAACiB,IAAJ,CAASgB,YAApI;AAAkJC,QAAAA,aAAa,EAAElC,GAAG,CAACiB,IAAJ,CAASkB,YAA1K;AAAwLC,QAAAA,mBAAmB,EAAEpC,GAAG,CAACiB,IAAJ,CAASoB;AAAtN,OADD,EAC6O;AAAEjC,QAAAA,KAAK,EAAE;AAACkC,UAAAA,UAAU,EAAEtC,GAAG,CAACuC,MAAJ,CAAWC;AAAxB;AAAT,OAD7O,EAGCjC,IAHD,CAGM,YAAI;AACTN,QAAAA,GAAG,CAACsB,IAAJ,CAAS,oBAAT;AACA,OALD,EAMCR,KAND,CAMO,UAAAS,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAzDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Factura = app.db.models.facturas;\r\n\tconst Cliente = app.db.models.clientes;\r\n\r\n\t// get factura\r\n\tapp.get('/facturas', (req, res) => {\r\n\t\tCliente.findAll({ attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre'], where: {cliente_estado: 1}, order: [['cliente_nombre', 'ASC']] })\r\n\t\t.then(\r\n\t\t\tresult1 => Factura.findAll({ attributes: ['factura_id', 'cliente_id', 'factura_nro', 'factura_fecha2', 'factura_total', 'factura_guias', 'factura_feccancela2'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre']}], order: [['factura_nro', 'DESC'], ['factura_fecha2', 'DESC']], where: {factura_estado: 1} })\r\n\t\t\t   .then( result2 => res.json([result1, result2]) )\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// add factura\r\n\tapp.post('/facturas', (req, res) => { \r\n      console.log(\"======>> \" + req.body.factura_fecha2 + \"\\n\")\r\n\t\tif(!req.body.factura_fecha2)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tFactura.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Factura Agregada')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update factura\r\n\tapp.put('/facturas/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.clienteid + \"\\n\")\r\n\t\tif(!req.body.clienteid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tFactura.update(\r\n\t\t\t\t{ cliente_id: req.body.clienteid, factura_nro: req.body.facturanro, factura_fecha2: req.body.facturafecha2, factura_total: req.body.facturatotal, factura_guias: req.body.facturaguias, factura_feccancela2: req.body.facturafeccancela2 }, { where: {factura_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Factura Modificada');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557335537387
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\gastos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\gastos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\gastos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\gastos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "gastos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar sequelize = require('sequelize');\n\nmodule.exports = function (app) {\n  var Gasto = app.db.models.gastos;\n  var Proveedor = app.db.models.proveedores;\n  var Carro = app.db.models.carros; // get gastos \n\n  app.get('/gastos', function (req, res) {\n    Proveedor.findAll({\n      attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc'],\n      where: {\n        proveedor_estado: 1\n      },\n      order: [['proveedor_nombre', 'ASC']]\n    }).then(function (result1) {\n      return Carro.findAll({\n        attributes: ['carro_id', 'carro_placa'],\n        where: {\n          carro_estado: 1\n        },\n        order: [['carro_placa', 'ASC']]\n      }).then(function (result2) {\n        return Gasto.findAll({\n          attributes: ['gasto_id', 'proveedor_id', 'carro_id', 'gasto_detalle', 'gasto_importe', 'gasto_factura', 'gasto_fecha2'],\n          include: [{\n            model: Proveedor,\n            attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc']\n          }, {\n            model: Carro,\n            attributes: ['carro_id', 'carro_placa']\n          }],\n          order: [['gasto_fecha2', 'DESC'], [sequelize.literal('Carro.carro_placa'), 'ASC']],\n          where: {\n            gasto_estado: 1\n          }\n        }).then(function (result3) {\n          return res.json([result1, result2, result3]);\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add gastos\n\n  app.post('/gastos', function (req, res) {\n    console.log(\"======>> \" + req.body.gasto_fecha2 + \"\\n\");\n\n    if (!req.body.gasto_fecha2) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Gasto.create(req.body).then(function () {\n        res.send('Gasto Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update gastos \n\n  app.put('/gastos/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.proveedorid + \"\\n\");\n\n    if (!req.body.proveedorid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Gasto.update({\n        proveedor_id: req.body.proveedorid,\n        carro_id: req.body.carroid,\n        gasto_detalle: req.body.detalle,\n        gasto_importe: req.body.importe,\n        gasto_factura: req.body.factura,\n        gasto_fecha2: req.body.fecha2\n      }, {\n        where: {\n          gasto_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Gasto Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gastos.js"
      ],
      "names": [
        "sequelize",
        "require",
        "module",
        "exports",
        "app",
        "Gasto",
        "db",
        "models",
        "gastos",
        "Proveedor",
        "proveedores",
        "Carro",
        "carros",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "where",
        "proveedor_estado",
        "order",
        "then",
        "result1",
        "carro_estado",
        "result2",
        "include",
        "model",
        "literal",
        "gasto_estado",
        "result3",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "console",
        "log",
        "body",
        "gasto_fecha2",
        "create",
        "send",
        "err",
        "put",
        "proveedorid",
        "update",
        "proveedor_id",
        "carro_id",
        "carroid",
        "gasto_detalle",
        "detalle",
        "gasto_importe",
        "importe",
        "gasto_factura",
        "factura",
        "fecha2",
        "gasto_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B;AACA,MAAMC,SAAS,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,WAAhC;AACA,MAAMC,KAAK,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,MAA5B,CAHsB,CAKtB;;AACAR,EAAAA,GAAG,CAACS,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCN,IAAAA,SAAS,CAACO,OAAV,CAAkB;AAAEC,MAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,eAArC,CAAd;AAAqEC,MAAAA,KAAK,EAAE;AAACC,QAAAA,gBAAgB,EAAE;AAAnB,OAA5E;AAAmGC,MAAAA,KAAK,EAAE,CAAC,CAAC,kBAAD,EAAqB,KAArB,CAAD;AAA1G,KAAlB,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIX,KAAK,CAACK,OAAN,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,QAAAA,KAAK,EAAE;AAACK,UAAAA,YAAY,EAAE;AAAf,SAAlD;AAAqEH,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,KAAhB,CAAD;AAA5E,OAAd,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,eAAInB,KAAK,CAACW,OAAN,CAAc;AAAEC,UAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,cAAb,EAA6B,UAA7B,EAAyC,eAAzC,EAAyD,eAAzD,EAA0E,eAA1E,EAA2F,cAA3F,CAAd;AAA0HQ,UAAAA,OAAO,EAAE,CAAC;AAACC,YAAAA,KAAK,EAAEjB,SAAR;AAAmBQ,YAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,eAArC;AAA/B,WAAD,EAAwF;AAACS,YAAAA,KAAK,EAAEf,KAAR;AAAeM,YAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb;AAA3B,WAAxF,CAAnI;AAAqRG,UAAAA,KAAK,EAAE,CAAC,CAAC,cAAD,EAAiB,MAAjB,CAAD,EAA0B,CAACpB,SAAS,CAAC2B,OAAV,CAAkB,mBAAlB,CAAD,EAAyC,KAAzC,CAA1B,CAA5R;AAAwWT,UAAAA,KAAK,EAAE;AAACU,YAAAA,YAAY,EAAE;AAAf;AAA/W,SAAd,EACRP,IADQ,CACF,UAAAQ,OAAO;AAAA,iBAAId,GAAG,CAACe,IAAJ,CAAS,CAACR,OAAD,EAAUE,OAAV,EAAmBK,OAAnB,CAAT,CAAJ;AAAA,SADL,CAAJ;AAAA,OAFG,CAAJ;AAAA,KAFR,EAQCE,KARD,CAQO,UAAAC,KAAK,EAAI;AAAEjB,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AAA4C,KAR9D;AASA,GAVD,EANsB,CAkBtB;;AACA/B,EAAAA,GAAG,CAACgC,IAAJ,CAAS,SAAT,EAAoB,UAACtB,GAAD,EAAMC,GAAN,EAAc;AAC7BsB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcxB,GAAG,CAACyB,IAAJ,CAASC,YAAvB,GAAsC,IAAlD;;AACJ,QAAG,CAAC1B,GAAG,CAACyB,IAAJ,CAASC,YAAb,EACA;AACCzB,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAvB,MAAAA,GAAG,CAACe,IAAJ,CAAShB,GAAG,CAACyB,IAAb;AACA,KALD,MAOA;AACClC,MAAAA,KAAK,CAACoC,MAAN,CAAa3B,GAAG,CAACyB,IAAjB,EACClB,IADD,CACO,YAAM;AACZN,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,gBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACb5B,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAnBsB,CAwCtB;;AACAvC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,aAAR,EAAuB,UAAC9B,GAAD,EAAMC,GAAN,EAAY;AAClCsB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcxB,GAAG,CAACyB,IAAJ,CAASM,WAAvB,GAAqC,IAAjD;;AACA,QAAG,CAAC/B,GAAG,CAACyB,IAAJ,CAASM,WAAb,EACA;AACC9B,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAvB,MAAAA,GAAG,CAACe,IAAJ,CAAShB,GAAG,CAACyB,IAAb;AACA,KALD,MAOA;AACClC,MAAAA,KAAK,CAACyC,MAAN,CACC;AAAEC,QAAAA,YAAY,EAAEjC,GAAG,CAACyB,IAAJ,CAASM,WAAzB;AAAsCG,QAAAA,QAAQ,EAAElC,GAAG,CAACyB,IAAJ,CAASU,OAAzD;AAAkEC,QAAAA,aAAa,EAAEpC,GAAG,CAACyB,IAAJ,CAASY,OAA1F;AAAmGC,QAAAA,aAAa,EAAEtC,GAAG,CAACyB,IAAJ,CAASc,OAA3H;AAAoIC,QAAAA,aAAa,EAAExC,GAAG,CAACyB,IAAJ,CAASgB,OAA5J;AAAqKf,QAAAA,YAAY,EAAE1B,GAAG,CAACyB,IAAJ,CAASiB;AAA5L,OADD,EACuM;AAAEtC,QAAAA,KAAK,EAAE;AAACuC,UAAAA,QAAQ,EAAE3C,GAAG,CAAC4C,MAAJ,CAAWC;AAAtB;AAAT,OADvM,EAGCtC,IAHD,CAGM,YAAI;AACTN,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,kBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACb5B,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CA9DD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "const sequelize = require('sequelize');\r\nmodule.exports = app =>{\r\n\tconst Gasto = app.db.models.gastos;\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\tconst Carro = app.db.models.carros;\r\n\r\n\t// get gastos \r\n\tapp.get('/gastos', (req, res) => {\r\n\t\tProveedor.findAll({ attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc'], where: {proveedor_estado: 1}, order: [['proveedor_nombre', 'ASC']] })\r\n\t\t.then(\r\n\t\t\tresult1 => Carro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1}, order: [['carro_placa', 'ASC']] })\r\n\t\t\t.then(\r\n\t\t\t\tresult2 => Gasto.findAll({ attributes: ['gasto_id', 'proveedor_id', 'carro_id', 'gasto_detalle','gasto_importe', 'gasto_factura', 'gasto_fecha2'], include: [{model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc']}, {model: Carro, attributes: ['carro_id', 'carro_placa']}], order: [['gasto_fecha2', 'DESC'],[sequelize.literal('Carro.carro_placa'), 'ASC']], where: {gasto_estado: 1} })\r\n\t\t\t   .then( result3 => res.json([result1, result2, result3]) )\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json({msg: error.message}) }) \r\n\t});\r\n\r\n\t// add gastos\r\n\tapp.post('/gastos', (req, res) => {\r\n      console.log(\"======>> \" + req.body.gasto_fecha2 + \"\\n\")\r\n\t\tif(!req.body.gasto_fecha2)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tGasto.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Gasto Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// update gastos \r\n\tapp.put('/gastos/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.proveedorid + \"\\n\")\r\n\t\tif(!req.body.proveedorid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tGasto.update(\r\n\t\t\t\t{ proveedor_id: req.body.proveedorid, carro_id: req.body.carroid, gasto_detalle: req.body.detalle, gasto_importe: req.body.importe, gasto_factura: req.body.factura, gasto_fecha2: req.body.fecha2 }, { where: {gasto_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Gasto Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556663141412
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.get('/', function (req, res) {\n    res.json();\n  });\n  app.post('/', function (req, res) {\n    res.json();\n  });\n  app.get('/cliente', function (req, res) {\n    res.json();\n  });\n  app.post('/cliente', function (req, res) {\n    res.json();\n  });\n  app.get('/empleado', function (req, res) {\n    res.json();\n  });\n  app.post('/empleado', function (req, res) {\n    res.json();\n  });\n  app.get('/carro', function (req, res) {\n    res.json();\n  });\n  app.get('/proveedor', function (req, res) {\n    res.json();\n  });\n  app.post('/proveedor', function (req, res) {\n    res.json();\n  });\n  app.get('/tipodocumento', function (req, res) {\n    res.json();\n  });\n  app.get('/documento', function (req, res) {\n    res.json();\n  });\n  app.post('/documento', function (req, res) {\n    res.json();\n  });\n  app.put('/documento', function (req, res) {\n    res.json();\n  });\n  app.get('/tipotramite', function (req, res) {\n    res.json();\n  });\n  app.get('/tramite', function (req, res) {\n    res.json();\n  });\n  app.post('/tramite', function (req, res) {\n    res.json();\n  });\n  app.get('/viaje', function (req, res) {\n    res.json();\n  });\n  app.post('/viaje', function (req, res) {\n    res.json();\n  });\n  app.get('/gasto', function (req, res) {\n    res.json();\n  });\n  app.post('/gasto', function (req, res) {\n    res.json();\n  });\n  app.get('/lugar', function (req, res) {\n    res.json();\n  });\n  app.post('/lugar', function (req, res) {\n    res.json();\n  });\n  app.get('/facturas', function (req, res) {\n    res.json();\n  });\n  app.post('/facturas', function (req, res) {\n    res.json();\n  });\n  app.get(\"/efectivoviajes\", function (req, res) {\n    res.json();\n  });\n  app.post(\"/efectivoviajes\", function (req, res) {\n    res.json();\n  });\n  app.get(\"/repuesto\", function (req, res) {\n    res.json();\n  });\n  app.post(\"/repuesto\", function (req, res) {\n    res.json();\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJqc29uIiwicG9zdCIsInB1dCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUN2QkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3hCQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLEdBQVQsRUFBYyxVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN6QkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQy9CQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFVBQVQsRUFBcUIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDaENBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsV0FBUixFQUFxQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNoQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxXQUFULEVBQXNCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2pDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDN0JBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsWUFBUixFQUFzQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNqQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxZQUFULEVBQXVCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2xDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3JDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDakNBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsWUFBVCxFQUF1QixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNsQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNNLEdBQUosQ0FBUSxZQUFSLEVBQXNCLFVBQUNKLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2pDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGNBQVIsRUFBd0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDbkNBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBUixFQUFvQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUMvQkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2hDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDN0JBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsUUFBVCxFQUFtQixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUM5QkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQzdCQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFFBQVQsRUFBbUIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDOUJBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUM3QkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdFSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxRQUFULEVBQW1CLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2hDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZDO0FBR0ZKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDaENBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsV0FBVCxFQUFzQixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNqQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxpQkFBUixFQUEyQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN0Q0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxpQkFBVCxFQUE0QixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN2Q0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxXQUFSLEVBQXFCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQy9CQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDakNBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQSxDQXJGRCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cdGFwcC5nZXQoJy8nLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5wb3N0KCcvJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvY2xpZW50ZScsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy9jbGllbnRlJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvZW1wbGVhZG8nLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5wb3N0KCcvZW1wbGVhZG8nLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5nZXQoJy9jYXJybycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL3Byb3ZlZWRvcicsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy9wcm92ZWVkb3InLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5nZXQoJy90aXBvZG9jdW1lbnRvJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvZG9jdW1lbnRvJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAucG9zdCgnL2RvY3VtZW50bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnB1dCgnL2RvY3VtZW50bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL3RpcG90cmFtaXRlJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvdHJhbWl0ZScsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy90cmFtaXRlJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvdmlhamUnLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5wb3N0KCcvdmlhamUnLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5nZXQoJy9nYXN0bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy9nYXN0bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL2x1Z2FyJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuICAgYXBwLnBvc3QoJy9sdWdhcicsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL2ZhY3R1cmFzJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAucG9zdCgnL2ZhY3R1cmFzJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KFwiL2VmZWN0aXZvdmlhamVzXCIsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoXCIvZWZlY3Rpdm92aWFqZXNcIiwgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KFwiL3JlcHVlc3RvXCIsIChyZXEscmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAucG9zdChcIi9yZXB1ZXN0b1wiLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "req",
        "res",
        "json",
        "post",
        "put"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAY;AACxBA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT,EAAc,UAACH,GAAD,EAAMC,GAAN,EAAY;AACzBA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC/BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB,UAACH,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAClCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAY;AACrCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAClCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACM,GAAJ,CAAQ,YAAR,EAAsB,UAACJ,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAY;AACnCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC/BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAC9BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAC9BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGEJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFC;AAGFJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB,UAACH,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAY;AACtCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,iBAAT,EAA4B,UAACH,GAAD,EAAMC,GAAN,EAAY;AACvCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAW;AAC/BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB,UAACH,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGA,CArFD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app => {\r\n\tapp.get('/', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/cliente', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/cliente', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/empleado', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/empleado', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/carro', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/proveedor', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/proveedor', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/tipodocumento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/documento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/documento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.put('/documento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/tipotramite', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/tramite', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/tramite', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/viaje', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/viaje', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/gasto', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/gasto', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/lugar', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n   app.post('/lugar', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/facturas', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/facturas', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get(\"/efectivoviajes\", (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post(\"/efectivoviajes\", (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get(\"/repuesto\", (req,res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post(\"/repuesto\", (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555184519369
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\lugares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\lugares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\lugares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\lugares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "lugares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Lugar = app.db.models.lugares; // get lugar\n\n  app.get('/lugares', function (req, res) {\n    Lugar.findAll({\n      where: {\n        lugar_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add lugar\n\n  app.post('/lugares', function (req, res) {\n    // console.log(\"======>> \" + req.body.lugar_distrito + \"\\n\")\n    if (!req.body.lugar_distrito) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Lugar.create(req.body).then(function () {\n        res.send('Lugar Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update lugar\n\n  app.put('/lugares/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.distrito + \"\\n\")\n    if (!req.body.distrito) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Lugar.update({\n        lugar_distrito: req.body.distrito,\n        lugar_provincia: req.body.provincia,\n        lugar_departamento: req.body.departamento\n      }, {\n        where: {\n          lugar_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Lugar Modificado');\n      }).error(function (err) {\n        res.send('error:  ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImx1Z2FyZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsIkx1Z2FyIiwiZGIiLCJtb2RlbHMiLCJsdWdhcmVzIiwiZ2V0IiwicmVxIiwicmVzIiwiZmluZEFsbCIsIndoZXJlIiwibHVnYXJfZXN0YWRvIiwidGhlbiIsInJlc3VsdCIsImpzb24iLCJjYXRjaCIsImVycm9yIiwic3RhdHVzIiwibXNnIiwibWVzc2FnZSIsInBvc3QiLCJib2R5IiwibHVnYXJfZGlzdHJpdG8iLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsImRpc3RyaXRvIiwidXBkYXRlIiwibHVnYXJfcHJvdmluY2lhIiwicHJvdmluY2lhIiwibHVnYXJfZGVwYXJ0YW1lbnRvIiwiZGVwYXJ0YW1lbnRvIiwibHVnYXJfaWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLE9BQTVCLENBRHNCLENBR3RCOztBQUNBSixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDTixJQUFBQSxLQUFLLENBQUNPLE9BQU4sQ0FBYztBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsWUFBWSxFQUFFO0FBQWY7QUFBUixLQUFkLEVBQ0NDLElBREQsQ0FDTSxVQUFBQyxNQUFNO0FBQUEsYUFBSUwsR0FBRyxDQUFDTSxJQUFKLENBQVNELE1BQVQsQ0FBSjtBQUFBLEtBRFosRUFFQ0UsS0FGRCxDQUVPLFVBQUFDLEtBQUssRUFBSTtBQUFFUixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFDSSxRQUFBQSxHQUFHLEVBQUVGLEtBQUssQ0FBQ0c7QUFBWixPQUFyQjtBQUE0QyxLQUY5RDtBQUdBLEdBSkQsRUFKc0IsQ0FVcEI7O0FBQ0ZsQixFQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsVUFBVCxFQUFxQixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QjtBQUNKLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNDLGNBQWIsRUFDQTtBQUNDZCxNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYWxCLEdBQUcsQ0FBQ2MsSUFBakIsRUFDQ1QsSUFERCxDQUNPLFlBQU07QUFDWkosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLGdCQUFUO0FBQ0EsT0FIRCxFQUlDWCxLQUpELENBSU8sVUFBQVksR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQU5EO0FBT0E7QUFDRCxHQWxCRCxFQVhzQixDQStCdEI7O0FBQ0ExQixFQUFBQSxHQUFHLENBQUMyQixHQUFKLENBQVEsY0FBUixFQUF3QixVQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDL0I7QUFDSixRQUFHLENBQUNELEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxRQUFiLEVBQ0E7QUFDQ3JCLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVg7QUFDQU0sTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNBaEIsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNQLEdBQUcsQ0FBQ2MsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDbkIsTUFBQUEsS0FBSyxDQUFDNEIsTUFBTixDQUNDO0FBQUVSLFFBQUFBLGNBQWMsRUFBRWYsR0FBRyxDQUFDYyxJQUFKLENBQVNRLFFBQTNCO0FBQXFDRSxRQUFBQSxlQUFlLEVBQUV4QixHQUFHLENBQUNjLElBQUosQ0FBU1csU0FBL0Q7QUFBMEVDLFFBQUFBLGtCQUFrQixFQUFFMUIsR0FBRyxDQUFDYyxJQUFKLENBQVNhO0FBQXZHLE9BREQsRUFDd0g7QUFBRXhCLFFBQUFBLEtBQUssRUFBRTtBQUFDeUIsVUFBQUEsUUFBUSxFQUFFNUIsR0FBRyxDQUFDNkIsTUFBSixDQUFXQztBQUF0QjtBQUFULE9BRHhILEVBR0N6QixJQUhELENBR00sWUFBSTtBQUNUSixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsa0JBQVQ7QUFDQSxPQUxELEVBTUNWLEtBTkQsQ0FNTyxVQUFBVyxHQUFHLEVBQUk7QUFDYm5CLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxhQUFhQyxHQUF0QjtBQUNBLE9BUkQ7QUFTQTtBQUNELEdBcEJEO0FBcUJBLENBckREIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFwcCA9PntcclxuXHRjb25zdCBMdWdhciA9IGFwcC5kYi5tb2RlbHMubHVnYXJlcztcclxuXHRcclxuXHQvLyBnZXQgbHVnYXJcclxuXHRhcHAuZ2V0KCcvbHVnYXJlcycsIChyZXEsIHJlcykgPT4ge1xyXG5cdFx0THVnYXIuZmluZEFsbCh7d2hlcmU6IHtsdWdhcl9lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgcmVzLnN0YXR1cyg0MTIpLmpzb24oe21zZzogZXJyb3IubWVzc2FnZX0pIH0pIFxyXG5cdH0pO1xyXG5cclxuICAgLy8gYWRkIGx1Z2FyXHJcblx0YXBwLnBvc3QoJy9sdWdhcmVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5sdWdhcl9kaXN0cml0byArIFwiXFxuXCIpXHJcblx0XHRpZighcmVxLmJvZHkubHVnYXJfZGlzdHJpdG8pXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdEx1Z2FyLmNyZWF0ZShyZXEuYm9keSlcclxuXHRcdFx0LnRoZW4oICgpID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ0x1Z2FyIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gdXBkYXRlIGx1Z2FyXHJcblx0YXBwLnB1dCgnL2x1Z2FyZXMvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZGlzdHJpdG8gKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmRpc3RyaXRvKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQT1NUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRMdWdhci51cGRhdGUoXHJcblx0XHRcdFx0eyBsdWdhcl9kaXN0cml0bzogcmVxLmJvZHkuZGlzdHJpdG8sIGx1Z2FyX3Byb3ZpbmNpYTogcmVxLmJvZHkucHJvdmluY2lhLCBsdWdhcl9kZXBhcnRhbWVudG86IHJlcS5ib2R5LmRlcGFydGFtZW50byB9LCB7IHdoZXJlOiB7bHVnYXJfaWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHRcdFx0KVxyXG5cdFx0XHQudGhlbigoKT0+e1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdMdWdhciBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogICcgKyBlcnIpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "lugares.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Lugar",
        "db",
        "models",
        "lugares",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "lugar_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "lugar_distrito",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "distrito",
        "update",
        "lugar_provincia",
        "provincia",
        "lugar_departamento",
        "departamento",
        "lugar_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,OAA5B,CADsB,CAGtB;;AACAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCN,IAAAA,KAAK,CAACO,OAAN,CAAc;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAAR,KAAd,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AAAER,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AAA4C,KAF9D;AAGA,GAJD,EAJsB,CAUpB;;AACFlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,UAAT,EAAqB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAC9B;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,cAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,KAAK,CAACuB,MAAN,CAAalB,GAAG,CAACc,IAAjB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,gBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAXsB,CA+BtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,cAAR,EAAwB,UAACrB,GAAD,EAAMC,GAAN,EAAY;AAC/B;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASQ,QAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,KAAK,CAAC4B,MAAN,CACC;AAAER,QAAAA,cAAc,EAAEf,GAAG,CAACc,IAAJ,CAASQ,QAA3B;AAAqCE,QAAAA,eAAe,EAAExB,GAAG,CAACc,IAAJ,CAASW,SAA/D;AAA0EC,QAAAA,kBAAkB,EAAE1B,GAAG,CAACc,IAAJ,CAASa;AAAvG,OADD,EACwH;AAAExB,QAAAA,KAAK,EAAE;AAACyB,UAAAA,QAAQ,EAAE5B,GAAG,CAAC6B,MAAJ,CAAWC;AAAtB;AAAT,OADxH,EAGCzB,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,kBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,aAAaC,GAAtB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CArDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Lugar = app.db.models.lugares;\r\n\t\r\n\t// get lugar\r\n\tapp.get('/lugares', (req, res) => {\r\n\t\tLugar.findAll({where: {lugar_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { res.status(412).json({msg: error.message}) }) \r\n\t});\r\n\r\n   // add lugar\r\n\tapp.post('/lugares', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.lugar_distrito + \"\\n\")\r\n\t\tif(!req.body.lugar_distrito)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tLugar.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Lugar Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update lugar\r\n\tapp.put('/lugares/:id', (req, res)=>{\r\n      // console.log(\"======>> \" + req.body.distrito + \"\\n\")\r\n\t\tif(!req.body.distrito)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tLugar.update(\r\n\t\t\t\t{ lugar_distrito: req.body.distrito, lugar_provincia: req.body.provincia, lugar_departamento: req.body.departamento }, { where: {lugar_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Lugar Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error:  ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554151993901
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\proveedores.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\proveedores.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\proveedores.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\proveedores.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "proveedores.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Proveedor = app.db.models.proveedores;\n  app.get('/proveedores', function (req, res) {\n    Proveedor.findAll({\n      where: {\n        proveedor_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add proveedor\n\n  app.post('/proveedores', function (req, res) {\n    // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\n    if (!req.body.proveedor_nombre) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Proveedor.create(req.body).then(function () {\n        res.send('Proveedor Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update proveedor\n\n  app.put('/proveedores/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.ruc + \"\\n\")\n    if (!req.body.ruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Proveedor.update({\n        proveedor_nombre: req.body.nombre,\n        proveedor_ruc: req.body.ruc,\n        proveedor_tipo: req.body.tipo,\n        proveedor_direccion: req.body.direccion,\n        proveedor_telefono: req.body.telefono,\n        proveedor_fecing: req.body.fecing,\n        proveedor_email: req.body.email\n      }, {\n        where: {\n          proveedor_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Proveedor Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZlZWRvcmVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJQcm92ZWVkb3IiLCJkYiIsIm1vZGVscyIsInByb3ZlZWRvcmVzIiwiZ2V0IiwicmVxIiwicmVzIiwiZmluZEFsbCIsIndoZXJlIiwicHJvdmVlZG9yX2VzdGFkbyIsInRoZW4iLCJyZXN1bHQiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsIm1zZyIsIm1lc3NhZ2UiLCJwb3N0IiwiYm9keSIsInByb3ZlZWRvcl9ub21icmUiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsInJ1YyIsInVwZGF0ZSIsIm5vbWJyZSIsInByb3ZlZWRvcl9ydWMiLCJwcm92ZWVkb3JfdGlwbyIsInRpcG8iLCJwcm92ZWVkb3JfZGlyZWNjaW9uIiwiZGlyZWNjaW9uIiwicHJvdmVlZG9yX3RlbGVmb25vIiwidGVsZWZvbm8iLCJwcm92ZWVkb3JfZmVjaW5nIiwiZmVjaW5nIiwicHJvdmVlZG9yX2VtYWlsIiwiZW1haWwiLCJwcm92ZWVkb3JfaWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxTQUFTLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLFdBQWhDO0FBRUFKLEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGNBQVIsRUFBd0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDcENOLElBQUFBLFNBQVMsQ0FBQ08sT0FBVixDQUFrQjtBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsZ0JBQWdCLEVBQUU7QUFBbkI7QUFBUixLQUFsQixFQUNDQyxJQURELENBQ00sVUFBQUMsTUFBTTtBQUFBLGFBQUlMLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxNQUFULENBQUo7QUFBQSxLQURaLEVBRUNFLEtBRkQsQ0FFTyxVQUFBQyxLQUFLLEVBQUk7QUFDZlIsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBQ0ksUUFBQUEsR0FBRyxFQUFFRixLQUFLLENBQUNHO0FBQVosT0FBckI7QUFDQSxLQUpEO0FBS0EsR0FORCxFQUhzQixDQVd0Qjs7QUFDQWxCLEVBQUFBLEdBQUcsQ0FBQ21CLElBQUosQ0FBUyxjQUFULEVBQXlCLFVBQUNiLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDO0FBQ0osUUFBRyxDQUFDRCxHQUFHLENBQUNjLElBQUosQ0FBU0MsZ0JBQWIsRUFDQTtBQUNDZCxNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLFNBQVMsQ0FBQ3VCLE1BQVYsQ0FBaUJsQixHQUFHLENBQUNjLElBQXJCLEVBQ0NULElBREQsQ0FDTyxZQUFNO0FBQ1pKLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxvQkFBVDtBQUNBLE9BSEQsRUFJQ1gsS0FKRCxDQUlPLFVBQUFZLEdBQUcsRUFBSTtBQUNibkIsUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUFac0IsQ0FnQ3RCOztBQUNBMUIsRUFBQUEsR0FBRyxDQUFDMkIsR0FBSixDQUFRLGtCQUFSLEVBQTRCLFVBQUNyQixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN2QztBQUNBLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNRLEdBQWIsRUFDQTtBQUNDckIsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWDtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FoQixNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDYyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NuQixNQUFBQSxTQUFTLENBQUM0QixNQUFWLENBQ0M7QUFBRVIsUUFBQUEsZ0JBQWdCLEVBQUVmLEdBQUcsQ0FBQ2MsSUFBSixDQUFTVSxNQUE3QjtBQUFxQ0MsUUFBQUEsYUFBYSxFQUFFekIsR0FBRyxDQUFDYyxJQUFKLENBQVNRLEdBQTdEO0FBQWtFSSxRQUFBQSxjQUFjLEVBQUUxQixHQUFHLENBQUNjLElBQUosQ0FBU2EsSUFBM0Y7QUFBaUdDLFFBQUFBLG1CQUFtQixFQUFFNUIsR0FBRyxDQUFDYyxJQUFKLENBQVNlLFNBQS9IO0FBQTBJQyxRQUFBQSxrQkFBa0IsRUFBRTlCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTaUIsUUFBdks7QUFBaUxDLFFBQUFBLGdCQUFnQixFQUFFaEMsR0FBRyxDQUFDYyxJQUFKLENBQVNtQixNQUE1TTtBQUFvTkMsUUFBQUEsZUFBZSxFQUFFbEMsR0FBRyxDQUFDYyxJQUFKLENBQVNxQjtBQUE5TyxPQURELEVBQ3dQO0FBQUVoQyxRQUFBQSxLQUFLLEVBQUU7QUFBQ2lDLFVBQUFBLFlBQVksRUFBRXBDLEdBQUcsQ0FBQ3FDLE1BQUosQ0FBV0M7QUFBMUI7QUFBVCxPQUR4UCxFQUdDakMsSUFIRCxDQUdNLFlBQUk7QUFDVEosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLHNCQUFUO0FBQ0EsT0FMRCxFQU1DVixLQU5ELENBTU8sVUFBQVcsR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQVJEO0FBU0E7QUFDRCxHQXBCRDtBQXFCQSxDQXRERCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgUHJvdmVlZG9yID0gYXBwLmRiLm1vZGVscy5wcm92ZWVkb3JlcztcclxuXHJcblx0YXBwLmdldCgnL3Byb3ZlZWRvcmVzJywgKHJlcSxyZXMpID0+IHtcclxuXHRcdFByb3ZlZWRvci5maW5kQWxsKHt3aGVyZToge3Byb3ZlZWRvcl9lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIHByb3ZlZWRvclxyXG5cdGFwcC5wb3N0KCcvcHJvdmVlZG9yZXMnLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgLy8gY29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LnByb3ZlZWRvcl9ub21icmUgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LnByb3ZlZWRvcl9ub21icmUpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdFByb3ZlZWRvci5jcmVhdGUocmVxLmJvZHkpXHJcblx0XHRcdC50aGVuKCAoKSA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdQcm92ZWVkb3IgQWdyZWdhZG8nKVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHQvLyB1cGRhdGUgcHJvdmVlZG9yXHJcblx0YXBwLnB1dCgnL3Byb3ZlZWRvcmVzLzppZCcsIChyZXEsIHJlcyk9PntcclxuXHRcdC8vIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5ydWMgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LnJ1YylcclxuXHRcdHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0XHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUFVUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRQcm92ZWVkb3IudXBkYXRlKFxyXG5cdFx0XHRcdHsgcHJvdmVlZG9yX25vbWJyZTogcmVxLmJvZHkubm9tYnJlLCBwcm92ZWVkb3JfcnVjOiByZXEuYm9keS5ydWMsIHByb3ZlZWRvcl90aXBvOiByZXEuYm9keS50aXBvLCBwcm92ZWVkb3JfZGlyZWNjaW9uOiByZXEuYm9keS5kaXJlY2Npb24sIHByb3ZlZWRvcl90ZWxlZm9ubzogcmVxLmJvZHkudGVsZWZvbm8sIHByb3ZlZWRvcl9mZWNpbmc6IHJlcS5ib2R5LmZlY2luZywgcHJvdmVlZG9yX2VtYWlsOiByZXEuYm9keS5lbWFpbCB9LCB7IHdoZXJlOiB7cHJvdmVlZG9yX2lkOiByZXEucGFyYW1zLmlkfSB9XHJcblx0XHRcdClcclxuXHRcdFx0LnRoZW4oKCk9PntcclxuXHRcdFx0XHRyZXMuc2VuZCgnUHJvdmVlZG9yIE1vZGlmaWNhZG8nKTtcclxuXHRcdFx0fSlcclxuXHRcdFx0LmVycm9yKGVyciA9PiB7XHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKTtcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "proveedores.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Proveedor",
        "db",
        "models",
        "proveedores",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "proveedor_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "proveedor_nombre",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "ruc",
        "update",
        "nombre",
        "proveedor_ruc",
        "proveedor_tipo",
        "tipo",
        "proveedor_direccion",
        "direccion",
        "proveedor_telefono",
        "telefono",
        "proveedor_fecing",
        "fecing",
        "proveedor_email",
        "email",
        "proveedor_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,SAAS,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,WAAhC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACpCN,IAAAA,SAAS,CAACO,OAAV,CAAkB;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,gBAAgB,EAAE;AAAnB;AAAR,KAAlB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAHsB,CAWtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,cAAT,EAAyB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAClC;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,gBAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,SAAS,CAACuB,MAAV,CAAiBlB,GAAG,CAACc,IAArB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,oBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAZsB,CAgCtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,kBAAR,EAA4B,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACvC;AACA,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASQ,GAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,SAAS,CAAC4B,MAAV,CACC;AAAER,QAAAA,gBAAgB,EAAEf,GAAG,CAACc,IAAJ,CAASU,MAA7B;AAAqCC,QAAAA,aAAa,EAAEzB,GAAG,CAACc,IAAJ,CAASQ,GAA7D;AAAkEI,QAAAA,cAAc,EAAE1B,GAAG,CAACc,IAAJ,CAASa,IAA3F;AAAiGC,QAAAA,mBAAmB,EAAE5B,GAAG,CAACc,IAAJ,CAASe,SAA/H;AAA0IC,QAAAA,kBAAkB,EAAE9B,GAAG,CAACc,IAAJ,CAASiB,QAAvK;AAAiLC,QAAAA,gBAAgB,EAAEhC,GAAG,CAACc,IAAJ,CAASmB,MAA5M;AAAoNC,QAAAA,eAAe,EAAElC,GAAG,CAACc,IAAJ,CAASqB;AAA9O,OADD,EACwP;AAAEhC,QAAAA,KAAK,EAAE;AAACiC,UAAAA,YAAY,EAAEpC,GAAG,CAACqC,MAAJ,CAAWC;AAA1B;AAAT,OADxP,EAGCjC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAtDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\r\n\tapp.get('/proveedores', (req,res) => {\r\n\t\tProveedor.findAll({where: {proveedor_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add proveedor\r\n\tapp.post('/proveedores', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\r\n\t\tif(!req.body.proveedor_nombre)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Proveedor Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update proveedor\r\n\tapp.put('/proveedores/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.ruc + \"\\n\")\r\n\t\tif(!req.body.ruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.update(\r\n\t\t\t\t{ proveedor_nombre: req.body.nombre, proveedor_ruc: req.body.ruc, proveedor_tipo: req.body.tipo, proveedor_direccion: req.body.direccion, proveedor_telefono: req.body.telefono, proveedor_fecing: req.body.fecing, proveedor_email: req.body.email }, { where: {proveedor_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Proveedor Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554152899350
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\repuestos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\repuestos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\repuestos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\repuestos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "repuestos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Repuesto = app.db.models.repuestos;\n  var Carro = app.db.models.carros;\n  var Empleado = app.db.models.empleados; // get repuesto\n\n  app.get('/repuestos', function (req, res) {\n    Carro.findAll({\n      attributes: ['carro_id', 'carro_placa'],\n      where: {\n        carro_estado: 1\n      }\n    }).then(function (result1) {\n      return Empleado.findAll({\n        attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'],\n        where: {\n          empleado_estado: 1\n        }\n      }).then(function (result2) {\n        return Repuesto.findAll({\n          attributes: ['repuesto_id', 'carro_id', 'empleado_id', 'repuesto_codigo', 'repuesto_descripcion', 'repuesto_imagen', 'repuesto_fecingreso2', 'repuesto_importe'],\n          include: [{\n            model: Empleado,\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n          }, {\n            model: Carro,\n            attributes: ['carro_id', 'carro_placa']\n          }],\n          where: {\n            repuesto_estado: 1\n          }\n        }).then(function (result3) {\n          return res.json([result1, result2, result3]);\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add repuesto\n\n  app.post('/repuestos', function (req, res) {\n    console.log(\"======>> \" + req.body.carro_id + \"\\n\");\n\n    if (!req.body.carro_id) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Repuesto.create(req.body).then(function () {\n        res.send('Repuesto Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update repuesto\n\n  app.put('/repuestos/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.carroid + \"\\n\");\n\n    if (!req.body.carroid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Repuesto.update({\n        empleado_id: req.body.empleadoid,\n        carro_id: req.body.carroid,\n        repuesto_codigo: req.body.codigo,\n        repuesto_descripcion: req.body.descripcion,\n        repuesto_fecingreso2: req.body.fecingreso2,\n        repuesto_importe: req.body.importe,\n        repuesto_imagen: req.body.imagen\n      }, {\n        where: {\n          repuesto_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Repuesto Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "repuestos.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Repuesto",
        "db",
        "models",
        "repuestos",
        "Carro",
        "carros",
        "Empleado",
        "empleados",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "where",
        "carro_estado",
        "then",
        "result1",
        "empleado_estado",
        "result2",
        "include",
        "model",
        "repuesto_estado",
        "result3",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "carro_id",
        "create",
        "send",
        "err",
        "put",
        "carroid",
        "update",
        "empleado_id",
        "empleadoid",
        "repuesto_codigo",
        "codigo",
        "repuesto_descripcion",
        "descripcion",
        "repuesto_fecingreso2",
        "fecingreso2",
        "repuesto_importe",
        "importe",
        "repuesto_imagen",
        "imagen",
        "repuesto_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,QAAQ,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,SAA/B;AACA,MAAMC,KAAK,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,MAA5B;AACA,MAAMC,QAAQ,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,SAA/B,CAHsB,CAKtB;;AACAR,EAAAA,GAAG,CAACS,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCN,IAAAA,KAAK,CAACO,OAAN,CAAc;AAAEC,MAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAAlD,KAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIV,QAAQ,CAACK,OAAT,CAAiB;AAAEC,QAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD,CAAd;AAAwFC,QAAAA,KAAK,EAAE;AAACI,UAAAA,eAAe,EAAE;AAAlB;AAA/F,OAAjB,EACVF,IADU,CAER,UAAAG,OAAO;AAAA,eAAIlB,QAAQ,CAACW,OAAT,CAAiB;AAAEC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,UAAhB,EAA4B,aAA5B,EAA2C,iBAA3C,EAA8D,sBAA9D,EAAsF,iBAAtF,EAAyG,sBAAzG,EAAiI,kBAAjI,CAAd;AAAoKO,UAAAA,OAAO,EAAE,CAAC;AAACC,YAAAA,KAAK,EAAEd,QAAR;AAAkBM,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,WAAD,EAA0G;AAACQ,YAAAA,KAAK,EAAEhB,KAAR;AAAeQ,YAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,WAA1G,CAA7K;AAAgVC,UAAAA,KAAK,EAAE;AAACQ,YAAAA,eAAe,EAAE;AAAlB;AAAvV,SAAjB,EACZN,IADY,CAEV,UAAAO,OAAO;AAAA,iBAAIZ,GAAG,CAACa,IAAJ,CAAS,CAACP,OAAD,EAAUE,OAAV,EAAmBI,OAAnB,CAAT,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFC,CAAJ;AAAA,KAFR,EAUCE,KAVD,CAUO,UAAAC,KAAK,EAAI;AAAEf,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBd,GAAG,CAACkB,IAAzB;AAAgC,KAVlD;AAWA,GAZD,EANsB,CAoBtB;;AACA5B,EAAAA,GAAG,CAAC6B,IAAJ,CAAS,YAAT,EAAuB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAChCmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASI,QAAvB,GAAkC,IAA9C;;AACJ,QAAG,CAACtB,GAAG,CAACkB,IAAJ,CAASI,QAAb,EACA;AACCrB,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACC3B,MAAAA,QAAQ,CAACgC,MAAT,CAAgBvB,GAAG,CAACkB,IAApB,EACCZ,IADD,CACO,YAAM;AACZL,QAAAA,GAAG,CAACuB,IAAJ,CAAS,mBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EArBsB,CAyCtB;;AACAnC,EAAAA,GAAG,CAACoC,GAAJ,CAAQ,gBAAR,EAA0B,UAAC1B,GAAD,EAAMC,GAAN,EAAY;AACrCmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASS,OAAvB,GAAiC,IAA7C;;AACA,QAAG,CAAC3B,GAAG,CAACkB,IAAJ,CAASS,OAAb,EACA;AACC1B,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACC3B,MAAAA,QAAQ,CAACqC,MAAT,CACC;AAAEC,QAAAA,WAAW,EAAE7B,GAAG,CAACkB,IAAJ,CAASY,UAAxB;AAAoCR,QAAAA,QAAQ,EAAEtB,GAAG,CAACkB,IAAJ,CAASS,OAAvD;AAAgEI,QAAAA,eAAe,EAAE/B,GAAG,CAACkB,IAAJ,CAASc,MAA1F;AAAkGC,QAAAA,oBAAoB,EAAEjC,GAAG,CAACkB,IAAJ,CAASgB,WAAjI;AAA8IC,QAAAA,oBAAoB,EAAEnC,GAAG,CAACkB,IAAJ,CAASkB,WAA7K;AAA0LC,QAAAA,gBAAgB,EAAErC,GAAG,CAACkB,IAAJ,CAASoB,OAArN;AAA8NC,QAAAA,eAAe,EAAEvC,GAAG,CAACkB,IAAJ,CAASsB;AAAxP,OADD,EACmQ;AAAEpC,QAAAA,KAAK,EAAE;AAACqC,UAAAA,WAAW,EAAEzC,GAAG,CAAC0C,MAAJ,CAAWC;AAAzB;AAAT,OADnQ,EAGCrC,IAHD,CAGM,YAAI;AACTL,QAAAA,GAAG,CAACuB,IAAJ,CAAS,qBAAT;AACA,OALD,EAMCR,KAND,CAMO,UAAAS,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CA/DD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Repuesto = app.db.models.repuestos;\r\n\tconst Carro = app.db.models.carros;\r\n\tconst Empleado = app.db.models.empleados;\r\n\r\n\t// get repuesto\r\n\tapp.get('/repuestos', (req, res) => {\r\n\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1} })\r\n\t\t.then(\r\n\t\t\tresult1 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'], where: {empleado_estado: 1} })\r\n\t\t\t.then(\r\n\t\t\t   result2 => Repuesto.findAll({ attributes: ['repuesto_id', 'carro_id', 'empleado_id', 'repuesto_codigo', 'repuesto_descripcion', 'repuesto_imagen', 'repuesto_fecingreso2', 'repuesto_importe'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Carro, attributes: ['carro_id','carro_placa']}], where: {repuesto_estado: 1} })\r\n\t\t\t\t.then(\r\n\t\t\t\t   result3 => res.json([result1, result2, result3])\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) })\r\n\t});\r\n\r\n\t// add repuesto\r\n\tapp.post('/repuestos', (req, res) => {\r\n      console.log(\"======>> \" + req.body.carro_id + \"\\n\")\r\n\t\tif(!req.body.carro_id)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tRepuesto.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Repuesto Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update repuesto\r\n\tapp.put('/repuestos/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.carroid + \"\\n\")\r\n\t\tif(!req.body.carroid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tRepuesto.update(\r\n\t\t\t\t{ empleado_id: req.body.empleadoid, carro_id: req.body.carroid, repuesto_codigo: req.body.codigo, repuesto_descripcion: req.body.descripcion, repuesto_fecingreso2: req.body.fecingreso2, repuesto_importe: req.body.importe, repuesto_imagen: req.body.imagen }, { where: {repuesto_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Repuesto Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\t\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556661515413
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\tipodocumentos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\tipodocumentos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\tipodocumentos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\tipodocumentos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "tipodocumentos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Tipodocumento = app.db.models.tipodocumentos;\n  app.get('/tipodocumentos', function (req, res) {\n    Tipodocumento.findAll().then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpcG9kb2N1bWVudG9zLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJUaXBvZG9jdW1lbnRvIiwiZGIiLCJtb2RlbHMiLCJ0aXBvZG9jdW1lbnRvcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ0aGVuIiwicmVzdWx0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJtc2ciLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLGFBQWEsR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsY0FBcEM7QUFFQUosRUFBQUEsR0FBRyxDQUFDSyxHQUFKLENBQVEsaUJBQVIsRUFBMkIsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDdkNOLElBQUFBLGFBQWEsQ0FBQ08sT0FBZCxHQUNDQyxJQURELENBQ00sVUFBQUMsTUFBTTtBQUFBLGFBQUlILEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxNQUFULENBQUo7QUFBQSxLQURaLEVBRUNFLEtBRkQsQ0FFTyxVQUFBQyxLQUFLLEVBQUk7QUFDZk4sTUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBQ0ksUUFBQUEsR0FBRyxFQUFFRixLQUFLLENBQUNHO0FBQVosT0FBckI7QUFDQSxLQUpEO0FBS0EsR0FORDtBQU9BLENBVkQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IFRpcG9kb2N1bWVudG8gPSBhcHAuZGIubW9kZWxzLnRpcG9kb2N1bWVudG9zO1xyXG5cclxuXHRhcHAuZ2V0KCcvdGlwb2RvY3VtZW50b3MnLCAocmVxLHJlcykgPT4ge1xyXG5cdFx0VGlwb2RvY3VtZW50by5maW5kQWxsKClcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tipodocumentos.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Tipodocumento",
        "db",
        "models",
        "tipodocumentos",
        "get",
        "req",
        "res",
        "findAll",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,aAAa,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,cAApC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACvCN,IAAAA,aAAa,CAACO,OAAd,GACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIH,GAAG,CAACI,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND;AAOA,CAVD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Tipodocumento = app.db.models.tipodocumentos;\r\n\r\n\tapp.get('/tipodocumentos', (req,res) => {\r\n\t\tTipodocumento.findAll()\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547434837600
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\tipotramites.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\tipotramites.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\tipotramites.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\tipotramites.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "tipotramites.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Tipotramite = app.db.models.tipotramites;\n  app.get('/tipotramites', function (req, res) {\n    Tipotramite.findAll().then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpcG90cmFtaXRlcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiVGlwb3RyYW1pdGUiLCJkYiIsIm1vZGVscyIsInRpcG90cmFtaXRlcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ0aGVuIiwicmVzdWx0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJtc2ciLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLFdBQVcsR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsWUFBbEM7QUFFQUosRUFBQUEsR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixFQUF5QixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUNyQ04sSUFBQUEsV0FBVyxDQUFDTyxPQUFaLEdBQ0NDLElBREQsQ0FDTSxVQUFBQyxNQUFNO0FBQUEsYUFBSUgsR0FBRyxDQUFDSSxJQUFKLENBQVNELE1BQVQsQ0FBSjtBQUFBLEtBRFosRUFFQ0UsS0FGRCxDQUVPLFVBQUFDLEtBQUssRUFBSTtBQUNmTixNQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFDSSxRQUFBQSxHQUFHLEVBQUVGLEtBQUssQ0FBQ0c7QUFBWixPQUFyQjtBQUNBLEtBSkQ7QUFLQSxHQU5EO0FBT0EsQ0FWRCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgVGlwb3RyYW1pdGUgPSBhcHAuZGIubW9kZWxzLnRpcG90cmFtaXRlcztcclxuXHJcblx0YXBwLmdldCgnL3RpcG90cmFtaXRlcycsIChyZXEscmVzKSA9PiB7XHJcblx0XHRUaXBvdHJhbWl0ZS5maW5kQWxsKClcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tipotramites.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Tipotramite",
        "db",
        "models",
        "tipotramites",
        "get",
        "req",
        "res",
        "findAll",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,WAAW,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,YAAlC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrCN,IAAAA,WAAW,CAACO,OAAZ,GACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIH,GAAG,CAACI,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND;AAOA,CAVD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Tipotramite = app.db.models.tipotramites;\r\n\r\n\tapp.get('/tipotramites', (req,res) => {\r\n\t\tTipotramite.findAll()\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547770902337
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\tramites.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\tramites.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\tramites.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\tramites.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "tramites.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Tramite = app.db.models.tramites;\n  var Empleado = app.db.models.empleados;\n  var Tipotramite = app.db.models.tipotramites;\n  var Documento = app.db.models.documentos;\n  var Cliente = app.db.models.clientes;\n  var Proveedor = app.db.models.proveedores;\n  var Tipodocumento = app.db.models.tipodocumentos; // get tramite\n\n  app.get('/tramites', function (req, res) {\n    Cliente.findAll({\n      attributes: ['cliente_id', 'cliente_nombre']\n    }).then(function (result1) {\n      return Proveedor.findAll({\n        attributes: ['proveedor_id', 'proveedor_nombre']\n      }).then(function (result2) {\n        return Tipodocumento.findAll({\n          attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n        }).then(function (result3) {\n          return Documento.findAll({\n            attributes: ['documento_id', 'documento_nro'],\n            include: [{\n              model: Cliente,\n              attributes: ['cliente_id', 'cliente_nombre']\n            }, {\n              model: Proveedor,\n              attributes: ['proveedor_id', 'proveedor_nombre']\n            }, {\n              model: Tipodocumento,\n              attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n            }]\n          }).then(function (result4) {\n            return Empleado.findAll({\n              attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n            }).then(function (result5) {\n              return Tipotramite.findAll({\n                attributes: ['tipotramite_id', 'tipotramite_describe']\n              }).then(function (result6) {\n                return Tramite.findAll({\n                  attributes: ['tramite_id', 'documento_id', 'empleado_id', 'tipotramite_id', 'tramite_fecsalida', 'tramite_fecregreso'],\n                  include: [{\n                    model: Empleado,\n                    attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n                  }, {\n                    model: Tipotramite,\n                    attributes: ['tipotramite_id', 'tipotramite_describe']\n                  }, {\n                    model: Documento,\n                    attributes: ['documento_id', 'documento_tipoclipro', 'documento_nro', 'cliente_id', 'proveedor_id', 'tipodocumento_id'],\n                    include: [{\n                      model: Cliente,\n                      attributes: ['cliente_id', 'cliente_nombre']\n                    }, {\n                      model: Proveedor,\n                      attributes: ['proveedor_id', 'proveedor_nombre']\n                    }, {\n                      model: Tipodocumento,\n                      attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n                    }]\n                  }]\n                }).then(function (result7) {\n                  return res.json([result1, result2, result3, result4, result5, result6, result7]);\n                });\n              });\n            });\n          });\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add tramite\n\n  app.post('/tramites', function (req, res) {\n    console.log(\"======>> \" + req.body.documento_id + \"\\n\");\n\n    if (!req.body.documento_id) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Tramite.create(req.body).then(function () {\n        res.send('Tramite Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update tramite\n\n  app.put('/tramites/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.documentoid + \"\\n\");\n\n    if (!req.body.documentoid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Tramite.update({\n        documento_id: req.body.documentoid,\n        empleado_id: req.body.empleadoid,\n        tipotramite_id: req.body.tipotramiteid,\n        tramite_fecsalida: req.body.fecsalida,\n        tramite_fecregreso: req.body.fecregreso\n      }, {\n        where: {\n          tramite_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Documento Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n}; // result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\n// .then( result4 => res.json([result, result2, result3, result4]) )\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "tramites.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Tramite",
        "db",
        "models",
        "tramites",
        "Empleado",
        "empleados",
        "Tipotramite",
        "tipotramites",
        "Documento",
        "documentos",
        "Cliente",
        "clientes",
        "Proveedor",
        "proveedores",
        "Tipodocumento",
        "tipodocumentos",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "then",
        "result1",
        "result2",
        "result3",
        "include",
        "model",
        "result4",
        "result5",
        "result6",
        "result7",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "documento_id",
        "create",
        "send",
        "err",
        "put",
        "documentoid",
        "update",
        "empleado_id",
        "empleadoid",
        "tipotramite_id",
        "tipotramiteid",
        "tramite_fecsalida",
        "fecsalida",
        "tramite_fecregreso",
        "fecregreso",
        "where",
        "tramite_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,OAAO,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,QAA9B;AACA,MAAMC,QAAQ,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,SAA/B;AACA,MAAMC,WAAW,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,YAAlC;AACA,MAAMC,SAAS,GAAGT,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcO,UAAhC;AACA,MAAMC,OAAO,GAAGX,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcS,QAA9B;AACA,MAAMC,SAAS,GAAGb,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcW,WAAhC;AACA,MAAMC,aAAa,GAAGf,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAca,cAApC,CAPsB,CAStB;;AACAhB,EAAAA,GAAG,CAACiB,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCR,IAAAA,OAAO,CAACS,OAAR,CAAgB;AAAEC,MAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAAd,KAAhB,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIV,SAAS,CAACO,OAAV,CAAkB;AAAEC,QAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAAd,OAAlB,EACVC,IADU,CAEV,UAAAE,OAAO;AAAA,eAAIT,aAAa,CAACK,OAAd,CAAsB;AAAEC,UAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAd,SAAtB,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,iBAAIhB,SAAS,CAACW,OAAV,CAAkB;AAAEC,YAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,eAAjB,CAAd;AAAiDK,YAAAA,OAAO,EAAC,CAAC;AAACC,cAAAA,KAAK,EAAEhB,OAAR;AAAiBU,cAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAA7B,aAAD,EAAiE;AAACM,cAAAA,KAAK,EAAEd,SAAR;AAAmBQ,cAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAA/B,aAAjE,EAAuI;AAACM,cAAAA,KAAK,EAAEZ,aAAR;AAAuBM,cAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAnC,aAAvI;AAAzD,WAAlB,EACVC,IADU,CAEV,UAAAM,OAAO;AAAA,mBAAIvB,QAAQ,CAACe,OAAT,CAAiB;AAAEC,cAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAAd,aAAjB,EACVC,IADU,CAEV,UAAAO,OAAO;AAAA,qBAAItB,WAAW,CAACa,OAAZ,CAAoB;AAAEC,gBAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,sBAAnB;AAAd,eAApB,EACVC,IADU,CAEV,UAAAQ,OAAO;AAAA,uBAAI7B,OAAO,CAACmB,OAAR,CAAgB;AAAEC,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,cAAf,EAA+B,aAA/B,EAA8C,gBAA9C,EAAgE,mBAAhE,EAAqF,oBAArF,CAAd;AAA0HK,kBAAAA,OAAO,EAAE,CAAC;AAACC,oBAAAA,KAAK,EAAEtB,QAAR;AAAkBgB,oBAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,mBAAD,EAA0G;AAACM,oBAAAA,KAAK,EAAEpB,WAAR;AAAqBc,oBAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,sBAAnB;AAAjC,mBAA1G,EAAwL;AAACM,oBAAAA,KAAK,EAAElB,SAAR;AAAmBY,oBAAAA,UAAU,EAAE,CAAC,cAAD,EAAgB,sBAAhB,EAAuC,eAAvC,EAAwD,YAAxD,EAAsE,cAAtE,EAAsF,kBAAtF,CAA/B;AAA0IK,oBAAAA,OAAO,EAAC,CAAC;AAACC,sBAAAA,KAAK,EAAEhB,OAAR;AAAiBU,sBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAA7B,qBAAD,EAAiE;AAACM,sBAAAA,KAAK,EAAEd,SAAR;AAAmBQ,sBAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAA/B,qBAAjE,EAAuI;AAACM,sBAAAA,KAAK,EAAEZ,aAAR;AAAuBM,sBAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAnC,qBAAvI;AAAlJ,mBAAxL;AAAnI,iBAAhB,EACVC,IADU,CAEV,UAAAS,OAAO;AAAA,yBAAIZ,GAAG,CAACa,IAAJ,CAAS,CAACT,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA4BG,OAA5B,EAAqCC,OAArC,EAA8CC,OAA9C,EAAuDC,OAAvD,CAAT,CAAJ;AAAA,iBAFG,CAAJ;AAAA,eAFG,CAAJ;AAAA,aAFG,CAAJ;AAAA,WAFG,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFG,CAAJ;AAAA,KAFR,EAsBCE,KAtBD,CAsBO,UAAAC,KAAK,EAAI;AAAEf,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBd,GAAG,CAACkB,IAAzB;AAAgC,KAtBlD;AAuBA,GAxBD,EAVsB,CAoCtB;;AACApC,EAAAA,GAAG,CAACqC,IAAJ,CAAS,WAAT,EAAsB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAC/BmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASI,YAAvB,GAAsC,IAAlD;;AACJ,QAAG,CAACtB,GAAG,CAACkB,IAAJ,CAASI,YAAb,EACA;AACCrB,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,OAAO,CAACwC,MAAR,CAAevB,GAAG,CAACkB,IAAnB,EACCd,IADD,CACO,YAAM;AACZH,QAAAA,GAAG,CAACuB,IAAJ,CAAS,kBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EArCsB,CA0DtB;;AACA3C,EAAAA,GAAG,CAAC4C,GAAJ,CAAQ,eAAR,EAAyB,UAAC1B,GAAD,EAAMC,GAAN,EAAY;AACpCmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASS,WAAvB,GAAqC,IAAjD;;AACA,QAAG,CAAC3B,GAAG,CAACkB,IAAJ,CAASS,WAAb,EACA;AACC1B,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,OAAO,CAAC6C,MAAR,CACC;AAAEN,QAAAA,YAAY,EAAEtB,GAAG,CAACkB,IAAJ,CAASS,WAAzB;AAAsCE,QAAAA,WAAW,EAAE7B,GAAG,CAACkB,IAAJ,CAASY,UAA5D;AAAwEC,QAAAA,cAAc,EAAE/B,GAAG,CAACkB,IAAJ,CAASc,aAAjG;AAAgHC,QAAAA,iBAAiB,EAAEjC,GAAG,CAACkB,IAAJ,CAASgB,SAA5I;AAAuJC,QAAAA,kBAAkB,EAAEnC,GAAG,CAACkB,IAAJ,CAASkB;AAApL,OADD,EACmM;AAAEC,QAAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAEtC,GAAG,CAACuC,MAAJ,CAAWC;AAAxB;AAAT,OADnM,EAGCpC,IAHD,CAGM,YAAI;AACTH,QAAAA,GAAG,CAACuB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCR,KAND,CAMO,UAAAS,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAhFD,C,CAoFA;AACA",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Tramite = app.db.models.tramites;\r\n\tconst Empleado = app.db.models.empleados;\r\n\tconst Tipotramite = app.db.models.tipotramites;\r\n\tconst Documento = app.db.models.documentos;\r\n\tconst Cliente = app.db.models.clientes;\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\tconst Tipodocumento = app.db.models.tipodocumentos;\r\n\r\n\t// get tramite\r\n\tapp.get('/tramites', (req, res) => {\r\n\t\tCliente.findAll({ attributes: ['cliente_id', 'cliente_nombre'] })\r\n\t\t.then(\r\n\t\t\tresult1 => Proveedor.findAll({ attributes: ['proveedor_id', 'proveedor_nombre'] })\r\n\t\t\t.then(\r\n\t\t\t\tresult2 => Tipodocumento.findAll({ attributes: ['tipodocumento_id', 'tipodocumento_nombre'] })\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult3 => Documento.findAll({ attributes: ['documento_id', 'documento_nro'], include:[{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\tresult4 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\r\n\t\t\t\t\t\t.then( \r\n\t\t\t\t\t\t\tresult5 => Tipotramite.findAll({ attributes: ['tipotramite_id', 'tipotramite_describe'] })\r\n\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\tresult6 => Tramite.findAll({ attributes: ['tramite_id', 'documento_id', 'empleado_id', 'tipotramite_id', 'tramite_fecsalida', 'tramite_fecregreso'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Tipotramite, attributes: ['tipotramite_id', 'tipotramite_describe']}, {model: Documento, attributes: ['documento_id','documento_tipoclipro','documento_nro', 'cliente_id', 'proveedor_id', 'tipodocumento_id'], include:[{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}]}] })\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\tresult7 => res.json([result1, result2, result3, result4, result5, result6, result7])\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// add tramite\r\n\tapp.post('/tramites', (req, res) => {\r\n      console.log(\"======>> \" + req.body.documento_id + \"\\n\")\r\n\t\tif(!req.body.documento_id)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tTramite.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Tramite Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// update tramite\r\n\tapp.put('/tramites/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.documentoid + \"\\n\")\r\n\t\tif(!req.body.documentoid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tTramite.update(\r\n\t\t\t\t{ documento_id: req.body.documentoid, empleado_id: req.body.empleadoid, tipotramite_id: req.body.tipotramiteid, tramite_fecsalida: req.body.fecsalida, tramite_fecregreso: req.body.fecregreso }, { where: {tramite_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Documento Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n\r\n// result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n// .then( result4 => res.json([result, result2, result3, result4]) )"
      ]
    },
    "sourceType": "script",
    "mtime": 1547942869703
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\viajes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\viajes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\viajes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\viajes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "viajes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Carro = app.db.models.carros;\n  var Empleado = app.db.models.empleados;\n  var Lugar = app.db.models.lugares;\n  var Cliente = app.db.models.clientes;\n  var Viaje = app.db.models.viajes;\n  var Factura = app.db.models.facturas; // // get viaje por nro\n\n  app.get('/viajes/:id', function (req, res) {\n    var auxguia = JSON.stringify(req.params.id); // console.log(\"<<<<<<<GET CON PARAMETRO \" + JSON.stringify(req.params.id))\n\n    if (auxguia === '\"undefined\"') {\n      // console.log(\"<<<<<<<<<< Parametro undefined => todos \")\n      Carro.findAll({\n        attributes: ['carro_id', 'carro_placa'],\n        where: {\n          carro_estado: 1\n        },\n        order: [['carro_placa', 'ASC']]\n      }).then(function (result1) {\n        return Cliente.findAll({\n          attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'],\n          where: {\n            cliente_estado: 1\n          },\n          order: [['cliente_nombre', 'ASC']]\n        }).then(function (result2) {\n          return Empleado.findAll({\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'],\n            where: {\n              empleado_estado: 1\n            },\n            order: [['empleado_nombre', 'ASC']]\n          }).then(function (result3) {\n            return Lugar.findAll({\n              attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'],\n              where: {\n                lugar_estado: 1\n              },\n              order: [['lugar_distrito', 'ASC']]\n            }).then(function (result4) {\n              return Viaje.findAll({\n                attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'],\n                include: [{\n                  model: Empleado,\n                  attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n                }, {\n                  model: Lugar,\n                  attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']\n                }, {\n                  model: Carro,\n                  attributes: ['carro_id', 'carro_placa']\n                }, {\n                  model: Cliente,\n                  attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']\n                }],\n                order: [['viaje_fecsalida2', 'DESC']],\n                where: {\n                  viaje_estado: 1\n                }\n              }).then(function (result5) {\n                return Factura.findAll({\n                  attributes: ['factura_id', 'factura_nro'],\n                  where: {\n                    factura_estado: 1\n                  },\n                  order: [['factura_nro', 'DESC']]\n                }).then(function (result6) {\n                  return res.json([result1, result2, result3, result4, result5, result6]);\n                });\n              });\n            });\n          });\n        });\n      }).catch(function (error) {\n        res.status(412).json(req.body);\n      });\n    } else {\n      // console.log(\">>>>>>>>> Parametro definido >>>>>>>\")\n      Carro.findAll({\n        attributes: ['carro_id', 'carro_placa'],\n        where: {\n          carro_estado: 1\n        },\n        order: [['carro_placa', 'ASC']]\n      }).then(function (result1) {\n        return Cliente.findAll({\n          attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'],\n          where: {\n            cliente_estado: 1\n          },\n          order: [['cliente_nombre', 'ASC']]\n        }).then(function (result2) {\n          return Empleado.findAll({\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'],\n            where: {\n              empleado_estado: 1\n            },\n            order: [['empleado_nombre', 'ASC']]\n          }).then(function (result3) {\n            return Lugar.findAll({\n              attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'],\n              where: {\n                lugar_estado: 1\n              },\n              order: [['lugar_distrito', 'ASC']]\n            }).then(function (result4) {\n              return Viaje.findAll({\n                attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'],\n                include: [{\n                  model: Empleado,\n                  attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n                }, {\n                  model: Lugar,\n                  attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']\n                }, {\n                  model: Carro,\n                  attributes: ['carro_id', 'carro_placa']\n                }, {\n                  model: Cliente,\n                  attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']\n                }],\n                order: [['viaje_fecsalida2', 'DESC']],\n                where: {\n                  viaje_grt: req.params.id,\n                  viaje_estado: 1\n                }\n              }).then(function (result5) {\n                return Factura.findAll({\n                  attributes: ['factura_id', 'factura_nro'],\n                  where: {\n                    factura_estado: 1\n                  },\n                  order: [['factura_nro', 'DESC']]\n                }).then(function (result6) {\n                  return res.json([result1, result2, result3, result4, result5, result6]);\n                });\n              });\n            });\n          });\n        });\n      }).catch(function (error) {\n        res.status(412).json(req.body);\n      });\n    }\n  }); // // get viaje\n  // app.get('/viajes', (req, res) => {\n  // \tconsole.log('------> SIMPLE GET')\n  // \tCarro.findAll({ attributes: ['carro_id', 'carro_placa'] })\n  // \t.then(\n  // \t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'] })\n  // \t\t.then(\n  // \t\t   result2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\n  // \t\t \t.then(\n  // \t\t\t   result3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'] })\n  // \t\t\t\t.then(\n  // \t\t\t\t   result4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugar_id', 'cliente_id', 'cliente2_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida', 'viaje_fecrecibido'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida', 'DESC']], where: {viaje_estado: 1} })\n  // \t\t\t\t\t.then(\n  // \t\t\t\t\t   result5 => res.json([result1, result2, result3, result4, result5])\n  // \t\t\t\t\t)\n  // \t\t\t\t)\n  // \t\t\t)\n  // \t\t)\n  // \t)\n  // \t.catch(error => { res.status(412).json(req.body) }) \n  // });\n  // add viaje\n\n  app.post('/viajes', function (req, res) {\n    // console.log(\"======>> \" + req.body.cliente_id + \"\\n\")\n    if (!req.body.cliente_id) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Viaje.create(req.body).then(function () {\n        res.send('Viaje Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update viaje\n\n  app.put('/viajes/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.clienteid + \"\\n\")\n    if (!req.body.clienteid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Viaje.update({\n        carro_id: req.body.carroid,\n        empleado_id: req.body.empleadoid,\n        lugarp_nombre: req.body.lugarp,\n        lugar_id: req.body.lugarid,\n        cliente_id: req.body.clienteid,\n        cliented_nombre: req.body.cliented,\n        viaje_grt: req.body.grt,\n        viaje_detalle: req.body.detalle,\n        viaje_fecsalida2: req.body.fecsalida2,\n        viaje_fecrecibido: req.body.fecrecibido,\n        viaje_factura: req.body.factura\n      }, {\n        where: {\n          viaje_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Viaje Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n}; // result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\n// .then( result4 => res.json([result, result2, result3, result4]) )\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "viajes.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Carro",
        "db",
        "models",
        "carros",
        "Empleado",
        "empleados",
        "Lugar",
        "lugares",
        "Cliente",
        "clientes",
        "Viaje",
        "viajes",
        "Factura",
        "facturas",
        "get",
        "req",
        "res",
        "auxguia",
        "JSON",
        "stringify",
        "params",
        "id",
        "findAll",
        "attributes",
        "where",
        "carro_estado",
        "order",
        "then",
        "result1",
        "cliente_estado",
        "result2",
        "empleado_estado",
        "result3",
        "lugar_estado",
        "result4",
        "include",
        "model",
        "viaje_estado",
        "result5",
        "factura_estado",
        "result6",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "viaje_grt",
        "post",
        "cliente_id",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "clienteid",
        "update",
        "carro_id",
        "carroid",
        "empleado_id",
        "empleadoid",
        "lugarp_nombre",
        "lugarp",
        "lugar_id",
        "lugarid",
        "cliented_nombre",
        "cliented",
        "grt",
        "viaje_detalle",
        "detalle",
        "viaje_fecsalida2",
        "fecsalida2",
        "viaje_fecrecibido",
        "fecrecibido",
        "viaje_factura",
        "factura",
        "viaje_id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B;AACA,MAAMC,QAAQ,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,SAA/B;AACA,MAAMC,KAAK,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,OAA5B;AACA,MAAMC,OAAO,GAAGT,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcO,QAA9B;AACA,MAAMC,KAAK,GAAGX,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcS,MAA5B;AACA,MAAMC,OAAO,GAAGb,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcW,QAA9B,CANsB,CAQtB;;AACAd,EAAAA,GAAG,CAACe,GAAJ,CAAQ,aAAR,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,QAAIC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,MAAJ,CAAWC,EAA1B,CAAd,CADoC,CAEpC;;AACA,QAAIJ,OAAO,KAAK,aAAhB,EAA+B;AAC9B;AACAjB,MAAAA,KAAK,CAACsB,OAAN,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,QAAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SAAlD;AAAqEC,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,KAAhB,CAAD;AAA5E,OAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,eAAIpB,OAAO,CAACc,OAAR,CAAgB;AAAEC,UAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE,CAAd;AAAsGC,UAAAA,KAAK,EAAE;AAACK,YAAAA,cAAc,EAAE;AAAjB,WAA7G;AAAkIH,UAAAA,KAAK,EAAC,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxI,SAAhB,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,iBAAI1B,QAAQ,CAACkB,OAAT,CAAiB;AAAEC,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD,CAAd;AAAwFC,YAAAA,KAAK,EAAE;AAACO,cAAAA,eAAe,EAAE;AAAlB,aAA/F;AAAqHL,YAAAA,KAAK,EAAE,CAAC,CAAC,iBAAD,EAAoB,KAApB,CAAD;AAA5H,WAAjB,EACVC,IADU,CAEV,UAAAK,OAAO;AAAA,mBAAI1B,KAAK,CAACgB,OAAN,CAAc;AAAEC,cAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD,CAAd;AAAuFC,cAAAA,KAAK,EAAE;AAACS,gBAAAA,YAAY,EAAE;AAAf,eAA9F;AAAiHP,cAAAA,KAAK,EAAE,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxH,aAAd,EACVC,IADU,CAEV,UAAAO,OAAO;AAAA,qBAAIxB,KAAK,CAACY,OAAN,CAAc;AAAEC,gBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,aAAzB,EAAuC,eAAvC,EAAwD,UAAxD,EAAoE,YAApE,EAAkF,iBAAlF,EAAqG,WAArG,EAAkH,eAAlH,EAAmI,kBAAnI,EAAuJ,mBAAvJ,EAA4K,eAA5K,CAAd;AAA4MY,gBAAAA,OAAO,EAAE,CAAC;AAACC,kBAAAA,KAAK,EAAEhC,QAAR;AAAkBmB,kBAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,iBAAD,EAA0G;AAACa,kBAAAA,KAAK,EAAE9B,KAAR;AAAeiB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD;AAA3B,iBAA1G,EAA+M;AAACa,kBAAAA,KAAK,EAAEpC,KAAR;AAAeuB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,iBAA/M,EAAuQ;AAACa,kBAAAA,KAAK,EAAE5B,OAAR;AAAiBe,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE;AAA7B,iBAAvQ,CAArN;AAAmlBG,gBAAAA,KAAK,EAAE,CAAC,CAAC,kBAAD,EAAqB,MAArB,CAAD,CAA1lB;AAA0nBF,gBAAAA,KAAK,EAAE;AAACa,kBAAAA,YAAY,EAAE;AAAf;AAAjoB,eAAd,EACVV,IADU,CAEV,UAAAW,OAAO;AAAA,uBAAI1B,OAAO,CAACU,OAAR,CAAgB;AAAEC,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,aAAf,CAAd;AAA6CC,kBAAAA,KAAK,EAAE;AAACe,oBAAAA,cAAc,EAAE;AAAjB,mBAApD;AAAyEb,kBAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,CAAD;AAAhF,iBAAhB,EACVC,IADU,CAEV,UAAAa,OAAO;AAAA,yBAAIxB,GAAG,CAACyB,IAAJ,CAAS,CAACb,OAAD,EAAUE,OAAV,EAAmBE,OAAnB,EAA4BE,OAA5B,EAAqCI,OAArC,EAA8CE,OAA9C,CAAT,CAAJ;AAAA,iBAFG,CAAJ;AAAA,eAFG,CAAJ;AAAA,aAFG,CAAJ;AAAA,WAFG,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFR,EAmBCE,KAnBD,CAmBO,UAAAC,KAAK,EAAI;AAAE3B,QAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB1B,GAAG,CAAC8B,IAAzB;AAAgC,OAnBlD;AAoBA,KAtBD,MAuBK;AACJ;AACA7C,MAAAA,KAAK,CAACsB,OAAN,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,QAAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SAAlD;AAAqEC,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,KAAhB,CAAD;AAA5E,OAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,eAAIpB,OAAO,CAACc,OAAR,CAAgB;AAAEC,UAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE,CAAd;AAAsGC,UAAAA,KAAK,EAAE;AAACK,YAAAA,cAAc,EAAE;AAAjB,WAA7G;AAAkIH,UAAAA,KAAK,EAAC,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxI,SAAhB,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,iBAAI1B,QAAQ,CAACkB,OAAT,CAAiB;AAAEC,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD,CAAd;AAAwFC,YAAAA,KAAK,EAAE;AAACO,cAAAA,eAAe,EAAE;AAAlB,aAA/F;AAAqHL,YAAAA,KAAK,EAAE,CAAC,CAAC,iBAAD,EAAoB,KAApB,CAAD;AAA5H,WAAjB,EACVC,IADU,CAEV,UAAAK,OAAO;AAAA,mBAAI1B,KAAK,CAACgB,OAAN,CAAc;AAAEC,cAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD,CAAd;AAAuFC,cAAAA,KAAK,EAAE;AAACS,gBAAAA,YAAY,EAAE;AAAf,eAA9F;AAAiHP,cAAAA,KAAK,EAAE,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxH,aAAd,EACVC,IADU,CAEV,UAAAO,OAAO;AAAA,qBAAIxB,KAAK,CAACY,OAAN,CAAc;AAAEC,gBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,aAAzB,EAAuC,eAAvC,EAAwD,UAAxD,EAAoE,YAApE,EAAkF,iBAAlF,EAAqG,WAArG,EAAkH,eAAlH,EAAmI,kBAAnI,EAAuJ,mBAAvJ,EAA4K,eAA5K,CAAd;AAA4MY,gBAAAA,OAAO,EAAE,CAAC;AAACC,kBAAAA,KAAK,EAAEhC,QAAR;AAAkBmB,kBAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,iBAAD,EAA0G;AAACa,kBAAAA,KAAK,EAAE9B,KAAR;AAAeiB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD;AAA3B,iBAA1G,EAA+M;AAACa,kBAAAA,KAAK,EAAEpC,KAAR;AAAeuB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,iBAA/M,EAAuQ;AAACa,kBAAAA,KAAK,EAAE5B,OAAR;AAAiBe,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE;AAA7B,iBAAvQ,CAArN;AAAmlBG,gBAAAA,KAAK,EAAE,CAAC,CAAC,kBAAD,EAAqB,MAArB,CAAD,CAA1lB;AAA0nBF,gBAAAA,KAAK,EAAE;AAACsB,kBAAAA,SAAS,EAAE/B,GAAG,CAACK,MAAJ,CAAWC,EAAvB;AAA2BgB,kBAAAA,YAAY,EAAE;AAAzC;AAAjoB,eAAd,EACVV,IADU,CAEV,UAAAW,OAAO;AAAA,uBAAI1B,OAAO,CAACU,OAAR,CAAgB;AAAEC,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,aAAf,CAAd;AAA6CC,kBAAAA,KAAK,EAAE;AAACe,oBAAAA,cAAc,EAAE;AAAjB,mBAApD;AAAyEb,kBAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,CAAD;AAAhF,iBAAhB,EACVC,IADU,CAEV,UAAAa,OAAO;AAAA,yBAAIxB,GAAG,CAACyB,IAAJ,CAAS,CAACb,OAAD,EAAUE,OAAV,EAAmBE,OAAnB,EAA4BE,OAA5B,EAAqCI,OAArC,EAA8CE,OAA9C,CAAT,CAAJ;AAAA,iBAFG,CAAJ;AAAA,eAFG,CAAJ;AAAA,aAFG,CAAJ;AAAA,WAFG,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFR,EAmBCE,KAnBD,CAmBO,UAAAC,KAAK,EAAI;AAAE3B,QAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB1B,GAAG,CAAC8B,IAAzB;AAAgC,OAnBlD;AAoBA;AACD,GAjDD,EATsB,CA4DtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA9C,EAAAA,GAAG,CAACgD,IAAJ,CAAS,SAAT,EAAoB,UAAChC,GAAD,EAAMC,GAAN,EAAc;AAC7B;AACJ,QAAG,CAACD,GAAG,CAAC8B,IAAJ,CAASG,UAAb,EACA;AACChC,MAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAlC,MAAAA,GAAG,CAACyB,IAAJ,CAAS1B,GAAG,CAAC8B,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,KAAK,CAACyC,MAAN,CAAapC,GAAG,CAAC8B,IAAjB,EACClB,IADD,CACO,YAAM;AACZX,QAAAA,GAAG,CAACoC,IAAJ,CAAS,gBAAT;AACA,OAHD,EAICV,KAJD,CAIO,UAAAW,GAAG,EAAI;AACbrC,QAAAA,GAAG,CAACoC,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAnFsB,CAuGtB;;AACAtD,EAAAA,GAAG,CAACuD,GAAJ,CAAQ,aAAR,EAAuB,UAACvC,GAAD,EAAMC,GAAN,EAAY;AAClC;AACA,QAAG,CAACD,GAAG,CAAC8B,IAAJ,CAASU,SAAb,EACA;AACCvC,MAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAlC,MAAAA,GAAG,CAACyB,IAAJ,CAAS1B,GAAG,CAAC8B,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,KAAK,CAAC8C,MAAN,CACC;AAAEC,QAAAA,QAAQ,EAAE1C,GAAG,CAAC8B,IAAJ,CAASa,OAArB;AAA8BC,QAAAA,WAAW,EAAE5C,GAAG,CAAC8B,IAAJ,CAASe,UAApD;AAAgEC,QAAAA,aAAa,EAAE9C,GAAG,CAAC8B,IAAJ,CAASiB,MAAxF;AAAgGC,QAAAA,QAAQ,EAAEhD,GAAG,CAAC8B,IAAJ,CAASmB,OAAnH;AAA4HhB,QAAAA,UAAU,EAAEjC,GAAG,CAAC8B,IAAJ,CAASU,SAAjJ;AAA4JU,QAAAA,eAAe,EAAElD,GAAG,CAAC8B,IAAJ,CAASqB,QAAtL;AAAgMpB,QAAAA,SAAS,EAAE/B,GAAG,CAAC8B,IAAJ,CAASsB,GAApN;AAAyNC,QAAAA,aAAa,EAAErD,GAAG,CAAC8B,IAAJ,CAASwB,OAAjP;AAA0PC,QAAAA,gBAAgB,EAAEvD,GAAG,CAAC8B,IAAJ,CAAS0B,UAArR;AAAiSC,QAAAA,iBAAiB,EAAEzD,GAAG,CAAC8B,IAAJ,CAAS4B,WAA7T;AAA0UC,QAAAA,aAAa,EAAE3D,GAAG,CAAC8B,IAAJ,CAAS8B;AAAlW,OADD,EAC8W;AAAEnD,QAAAA,KAAK,EAAE;AAACoD,UAAAA,QAAQ,EAAE7D,GAAG,CAACK,MAAJ,CAAWC;AAAtB;AAAT,OAD9W,EAGCM,IAHD,CAGM,YAAI;AACTX,QAAAA,GAAG,CAACoC,IAAJ,CAAS,kBAAT;AACA,OALD,EAMCT,KAND,CAMO,UAAAU,GAAG,EAAI;AACbrC,QAAAA,GAAG,CAACoC,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CA7HD,C,CAiIA;AACA",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Carro = app.db.models.carros;\r\n\tconst Empleado = app.db.models.empleados;\r\n\tconst Lugar = app.db.models.lugares;\r\n\tconst Cliente = app.db.models.clientes;\r\n\tconst Viaje = app.db.models.viajes;\r\n\tconst Factura = app.db.models.facturas;\r\n\r\n\t// // get viaje por nro\r\n\tapp.get('/viajes/:id', (req, res) => {\r\n\t\tvar auxguia = JSON.stringify(req.params.id)\r\n\t\t// console.log(\"<<<<<<<GET CON PARAMETRO \" + JSON.stringify(req.params.id))\r\n\t\tif (auxguia === '\"undefined\"') {\r\n\t\t\t// console.log(\"<<<<<<<<<< Parametro undefined => todos \")\r\n\t\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1}, order: [['carro_placa', 'ASC']] })\r\n\t\t\t.then(\r\n\t\t\t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'], where: {cliente_estado: 1}, order:[['cliente_nombre', 'ASC']] })\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'], where: {empleado_estado: 1}, order: [['empleado_nombre', 'ASC']] })\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\tresult3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'], where: {lugar_estado: 1}, order: [['lugar_distrito', 'ASC']] })\r\n\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\tresult4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id','lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida2', 'DESC']], where: {viaje_estado: 1} })\r\n\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\tresult5 => Factura.findAll({ attributes: ['factura_id', 'factura_nro'], where: {factura_estado: 1}, order: [['factura_nro', 'DESC']] })\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\tresult6 => res.json([result1, result2, result3, result4, result5, result6])\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t\t}\r\n\t\telse {\r\n\t\t\t// console.log(\">>>>>>>>> Parametro definido >>>>>>>\")\r\n\t\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1}, order: [['carro_placa', 'ASC']] })\r\n\t\t\t.then(\r\n\t\t\t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'], where: {cliente_estado: 1}, order:[['cliente_nombre', 'ASC']] })\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'], where: {empleado_estado: 1}, order: [['empleado_nombre', 'ASC']] })\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\tresult3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'], where: {lugar_estado: 1}, order: [['lugar_distrito', 'ASC']] })\r\n\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\tresult4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id','lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida2', 'DESC']], where: {viaje_grt: req.params.id, viaje_estado: 1} })\r\n\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\tresult5 => Factura.findAll({ attributes: ['factura_id', 'factura_nro'], where: {factura_estado: 1}, order: [['factura_nro', 'DESC']] })\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\tresult6 => res.json([result1, result2, result3, result4, result5, result6])\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t\t}\r\n\t});\r\n\r\n\t// // get viaje\r\n\t// app.get('/viajes', (req, res) => {\r\n\t// \tconsole.log('------> SIMPLE GET')\r\n\t// \tCarro.findAll({ attributes: ['carro_id', 'carro_placa'] })\r\n\t// \t.then(\r\n\t// \t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'] })\r\n\t// \t\t.then(\r\n\t// \t\t   result2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\r\n\t// \t\t \t.then(\r\n\t// \t\t\t   result3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'] })\r\n\t// \t\t\t\t.then(\r\n\t// \t\t\t\t   result4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugar_id', 'cliente_id', 'cliente2_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida', 'viaje_fecrecibido'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida', 'DESC']], where: {viaje_estado: 1} })\r\n\t// \t\t\t\t\t.then(\r\n\t// \t\t\t\t\t   result5 => res.json([result1, result2, result3, result4, result5])\r\n\t// \t\t\t\t\t)\r\n\t// \t\t\t\t)\r\n\t// \t\t\t)\r\n\t// \t\t)\r\n\t// \t)\r\n\t// \t.catch(error => { res.status(412).json(req.body) }) \r\n\t// });\r\n\r\n\t// add viaje\r\n\tapp.post('/viajes', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.cliente_id + \"\\n\")\r\n\t\tif(!req.body.cliente_id)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tViaje.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Viaje Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update viaje\r\n\tapp.put('/viajes/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.clienteid + \"\\n\")\r\n\t\tif(!req.body.clienteid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tViaje.update(\r\n\t\t\t\t{ carro_id: req.body.carroid, empleado_id: req.body.empleadoid, lugarp_nombre: req.body.lugarp, lugar_id: req.body.lugarid, cliente_id: req.body.clienteid, cliented_nombre: req.body.cliented, viaje_grt: req.body.grt, viaje_detalle: req.body.detalle, viaje_fecsalida2: req.body.fecsalida2, viaje_fecrecibido: req.body.fecrecibido, viaje_factura: req.body.factura }, { where: {viaje_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Viaje Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n\r\n// result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n// .then( result4 => res.json([result, result2, result3, result4]) )"
      ]
    },
    "sourceType": "script",
    "mtime": 1554842760682
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\libs\\\\boot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\libs\\boot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\libs\\boot.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\libs\\boot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\libs",
        "sourceFileName": "boot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.db.sequelize.sync().done(function () {\n    app.listen(app.get('port'), function () {\n      console.log('server escuchando in ' + app.get('port'));\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb3QuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImRiIiwic2VxdWVsaXplIiwic3luYyIsImRvbmUiLCJsaXN0ZW4iLCJnZXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFJO0FBQ3ZCQSxFQUFBQSxHQUFHLENBQUNDLEVBQUosQ0FBT0MsU0FBUCxDQUFpQkMsSUFBakIsR0FBd0JDLElBQXhCLENBQTZCLFlBQUk7QUFDaENKLElBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXTCxHQUFHLENBQUNNLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUNqQ0MsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQTBCUixHQUFHLENBQUNNLEdBQUosQ0FBUSxNQUFSLENBQXRDO0FBQ0EsS0FGRDtBQUdBLEdBSkQ7QUFLQSxDQU5EIiwic291cmNlUm9vdCI6IkQ6XFxkYXNzaXNcXHNpc1xcc3JjXFxsaWJzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cdGFwcC5kYi5zZXF1ZWxpemUuc3luYygpLmRvbmUoKCk9PntcclxuXHRcdGFwcC5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCAoKSA9PiB7XHJcblx0XHRcdGNvbnNvbGUubG9nKCdzZXJ2ZXIgZXNjdWNoYW5kbyBpbiAnICsgYXBwLmdldCgncG9ydCcpKTtcclxuXHRcdH0pO1xyXG5cdH0pO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "boot.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "db",
        "sequelize",
        "sync",
        "done",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvBA,EAAAA,GAAG,CAACC,EAAJ,CAAOC,SAAP,CAAiBC,IAAjB,GAAwBC,IAAxB,CAA6B,YAAI;AAChCJ,IAAAA,GAAG,CAACK,MAAJ,CAAWL,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BR,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAAtC;AACA,KAFD;AAGA,GAJD;AAKA,CAND",
      "sourceRoot": "D:\\dassis\\sis\\src\\libs",
      "sourcesContent": [
        "module.exports = app => {\r\n\tapp.db.sequelize.sync().done(()=>{\r\n\t\tapp.listen(app.get('port'), () => {\r\n\t\t\tconsole.log('server escuchando in ' + app.get('port'));\r\n\t\t});\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550864512022
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\models\\\\Reparacion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\models\\Reparacion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\models\\Reparacion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\models\\Reparacion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\models",
        "sourceFileName": "Reparacion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var reparaciones = sequelize.define('reparaciones', {\n    reparacion_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    reparacion_qh: {\n      type: DataTypes.STRING\n    },\n    reparacion_qu: {\n      type: DataTypes.STRING\n    },\n    reparacion_fecha: {\n      type: DataTypes.DATE\n    },\n    reparacion_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  reparaciones.associate = function (models) {\n    reparaciones.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n  };\n\n  return reparaciones;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcGFyYWNpb24uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInJlcGFyYWNpb25lcyIsImRlZmluZSIsInJlcGFyYWNpb25faWQiLCJ0eXBlIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwiY2Fycm9faWQiLCJyZXBhcmFjaW9uX3FoIiwiU1RSSU5HIiwicmVwYXJhY2lvbl9xdSIsInJlcGFyYWNpb25fZmVjaGEiLCJEQVRFIiwicmVwYXJhY2lvbl9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiY2Fycm9zIiwiZm9yZWlnbktleSIsInRhcmdldEtleSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxZQUFZLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixjQUFqQixFQUFpQztBQUNyREMsSUFBQUEsYUFBYSxFQUFFO0FBQ2RDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURGO0FBRWRDLE1BQUFBLFVBQVUsRUFBRSxJQUZFO0FBR2RDLE1BQUFBLGFBQWEsRUFBRTtBQUhELEtBRHNDO0FBTXJEQyxJQUFBQSxRQUFRLEVBQUU7QUFDVEosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBRFAsS0FOMkM7QUFTakRJLElBQUFBLGFBQWEsRUFBRTtBQUNaTCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1U7QUFESixLQVRrQztBQVlqREMsSUFBQUEsYUFBYSxFQUFFO0FBQ1pQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVTtBQURKLEtBWmtDO0FBZWpERSxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNmUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ2E7QUFERCxLQWYrQjtBQWtCakRDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2hCVixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEQTtBQWxCOEIsR0FBakMsRUFzQnJCO0FBQ0NVLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBdEJxQixDQUFyQjs7QUEwQkFkLEVBQUFBLFlBQVksQ0FBQ2UsU0FBYixHQUF5QixVQUFDQyxNQUFELEVBQVk7QUFDcENoQixJQUFBQSxZQUFZLENBQUNpQixTQUFiLENBQXVCRCxNQUFNLENBQUNFLE1BQTlCLEVBQXNDO0FBQ3JDQyxNQUFBQSxVQUFVLEVBQUUsVUFEeUI7QUFFckNDLE1BQUFBLFNBQVMsRUFBRTtBQUYwQixLQUF0QztBQUlBLEdBTEQ7O0FBT0EsU0FBT3BCLFlBQVA7QUFDQSxDQW5DRCIsInNvdXJjZVJvb3QiOiJEOlxcZGFzc2lzXFxzaXNcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuXHRjb25zdCByZXBhcmFjaW9uZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdyZXBhcmFjaW9uZXMnLCB7XHJcblx0XHRyZXBhcmFjaW9uX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH0sXHJcbiAgICAgIHJlcGFyYWNpb25fcWg6IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICByZXBhcmFjaW9uX3F1OiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcmVwYXJhY2lvbl9mZWNoYToge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURVxyXG4gICAgICB9LFxyXG4gICAgICByZXBhcmFjaW9uX2VzdGFkbzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG4gICAgICB9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0cmVwYXJhY2lvbmVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHJlcGFyYWNpb25lcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdH1cclxuXHRcclxuXHRyZXR1cm4gcmVwYXJhY2lvbmVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Reparacion.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "reparaciones",
        "define",
        "reparacion_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_id",
        "reparacion_qh",
        "STRING",
        "reparacion_qu",
        "reparacion_fecha",
        "DATE",
        "reparacion_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAiB,cAAjB,EAAiC;AACrDC,IAAAA,aAAa,EAAE;AACdC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADF;AAEdC,MAAAA,UAAU,EAAE,IAFE;AAGdC,MAAAA,aAAa,EAAE;AAHD,KADsC;AAMrDC,IAAAA,QAAQ,EAAE;AACTJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAN2C;AASjDI,IAAAA,aAAa,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADJ,KATkC;AAYjDC,IAAAA,aAAa,EAAE;AACZP,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADJ,KAZkC;AAejDE,IAAAA,gBAAgB,EAAE;AACfR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADD,KAf+B;AAkBjDC,IAAAA,iBAAiB,EAAE;AAChBV,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADA;AAlB8B,GAAjC,EAsBrB;AACCU,IAAAA,UAAU,EAAE;AADb,GAtBqB,CAArB;;AA0BAd,EAAAA,YAAY,CAACe,SAAb,GAAyB,UAACC,MAAD,EAAY;AACpChB,IAAAA,YAAY,CAACiB,SAAb,CAAuBD,MAAM,CAACE,MAA9B,EAAsC;AACrCC,MAAAA,UAAU,EAAE,UADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIA,GALD;;AAOA,SAAOpB,YAAP;AACA,CAnCD",
      "sourceRoot": "D:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst reparaciones = sequelize.define('reparaciones', {\r\n\t\treparacion_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n      reparacion_qh: {\r\n         type: DataTypes.STRING\r\n      },\r\n      reparacion_qu: {\r\n         type: DataTypes.STRING\r\n      },\r\n      reparacion_fecha: {\r\n         type: DataTypes.DATE\r\n      },\r\n      reparacion_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\treparaciones.associate = (models) => {\r\n\t\treparaciones.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn reparaciones;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1555449714648
  },
  "{\"sourceRoot\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\dassis\\\\sis\",\"filename\":\"D:\\\\dassis\\\\sis\\\\src\\\\routes\\\\reparaciones.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\dassis\\sis",
      "filename": "D:\\dassis\\sis\\src\\routes\\reparaciones.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\dassis\\sis\\src\\routes\\reparaciones.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\dassis\\sis\\src\\routes\\reparaciones.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\dassis\\sis\\src\\routes",
        "sourceFileName": "reparaciones.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Reparacion = app.db.models.reparaciones;\n  app.get('/reparaciones', function (req, res) {\n    Reparacion.findAll({\n      where: {\n        reparacion_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add reparacion\n\n  app.post('/proveedores', function (req, res) {\n    // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\n    if (!req.body.proveedor_nombre) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Proveedor.create(req.body).then(function () {\n        res.send('Proveedor Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update proveedor\n\n  app.put('/proveedores/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.ruc + \"\\n\")\n    if (!req.body.ruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Proveedor.update({\n        proveedor_nombre: req.body.nombre,\n        proveedor_ruc: req.body.ruc,\n        proveedor_tipo: req.body.tipo,\n        proveedor_direccion: req.body.direccion,\n        proveedor_telefono: req.body.telefono,\n        proveedor_fecing: req.body.fecing,\n        proveedor_email: req.body.email\n      }, {\n        where: {\n          proveedor_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Proveedor Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcGFyYWNpb25lcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiUmVwYXJhY2lvbiIsImRiIiwibW9kZWxzIiwicmVwYXJhY2lvbmVzIiwiZ2V0IiwicmVxIiwicmVzIiwiZmluZEFsbCIsIndoZXJlIiwicmVwYXJhY2lvbl9lc3RhZG8iLCJ0aGVuIiwicmVzdWx0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJtc2ciLCJtZXNzYWdlIiwicG9zdCIsImJvZHkiLCJwcm92ZWVkb3Jfbm9tYnJlIiwiY29uc29sZSIsImxvZyIsIlByb3ZlZWRvciIsImNyZWF0ZSIsInNlbmQiLCJlcnIiLCJwdXQiLCJydWMiLCJ1cGRhdGUiLCJub21icmUiLCJwcm92ZWVkb3JfcnVjIiwicHJvdmVlZG9yX3RpcG8iLCJ0aXBvIiwicHJvdmVlZG9yX2RpcmVjY2lvbiIsImRpcmVjY2lvbiIsInByb3ZlZWRvcl90ZWxlZm9ubyIsInRlbGVmb25vIiwicHJvdmVlZG9yX2ZlY2luZyIsImZlY2luZyIsInByb3ZlZWRvcl9lbWFpbCIsImVtYWlsIiwicHJvdmVlZG9yX2lkIiwicGFyYW1zIiwiaWQiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUc7QUFDdEIsTUFBTUMsVUFBVSxHQUFHRCxHQUFHLENBQUNFLEVBQUosQ0FBT0MsTUFBUCxDQUFjQyxZQUFqQztBQUVBSixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSxlQUFSLEVBQXlCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQ3JDTixJQUFBQSxVQUFVLENBQUNPLE9BQVgsQ0FBbUI7QUFBQ0MsTUFBQUEsS0FBSyxFQUFFO0FBQUNDLFFBQUFBLGlCQUFpQixFQUFFO0FBQXBCO0FBQVIsS0FBbkIsRUFDQ0MsSUFERCxDQUNNLFVBQUFDLE1BQU07QUFBQSxhQUFJTCxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVCxDQUFKO0FBQUEsS0FEWixFQUVDRSxLQUZELENBRU8sVUFBQUMsS0FBSyxFQUFJO0FBQ2ZSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCO0FBQUNJLFFBQUFBLEdBQUcsRUFBRUYsS0FBSyxDQUFDRztBQUFaLE9BQXJCO0FBQ0EsS0FKRDtBQUtBLEdBTkQsRUFIc0IsQ0FXdEI7O0FBQ0FsQixFQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsY0FBVCxFQUF5QixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQztBQUNKLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNDLGdCQUFiLEVBQ0E7QUFDQ2QsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWDtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FoQixNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDYyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NJLE1BQUFBLFNBQVMsQ0FBQ0MsTUFBVixDQUFpQm5CLEdBQUcsQ0FBQ2MsSUFBckIsRUFDQ1QsSUFERCxDQUNPLFlBQU07QUFDWkosUUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLG9CQUFUO0FBQ0EsT0FIRCxFQUlDWixLQUpELENBSU8sVUFBQWEsR0FBRyxFQUFJO0FBQ2JwQixRQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQU5EO0FBT0E7QUFDRCxHQWxCRCxFQVpzQixDQWdDdEI7O0FBQ0EzQixFQUFBQSxHQUFHLENBQUM0QixHQUFKLENBQVEsa0JBQVIsRUFBNEIsVUFBQ3RCLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3ZDO0FBQ0EsUUFBRyxDQUFDRCxHQUFHLENBQUNjLElBQUosQ0FBU1MsR0FBYixFQUNBO0FBQ0N0QixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ0ksTUFBQUEsU0FBUyxDQUFDTSxNQUFWLENBQ0M7QUFBRVQsUUFBQUEsZ0JBQWdCLEVBQUVmLEdBQUcsQ0FBQ2MsSUFBSixDQUFTVyxNQUE3QjtBQUFxQ0MsUUFBQUEsYUFBYSxFQUFFMUIsR0FBRyxDQUFDYyxJQUFKLENBQVNTLEdBQTdEO0FBQWtFSSxRQUFBQSxjQUFjLEVBQUUzQixHQUFHLENBQUNjLElBQUosQ0FBU2MsSUFBM0Y7QUFBaUdDLFFBQUFBLG1CQUFtQixFQUFFN0IsR0FBRyxDQUFDYyxJQUFKLENBQVNnQixTQUEvSDtBQUEwSUMsUUFBQUEsa0JBQWtCLEVBQUUvQixHQUFHLENBQUNjLElBQUosQ0FBU2tCLFFBQXZLO0FBQWlMQyxRQUFBQSxnQkFBZ0IsRUFBRWpDLEdBQUcsQ0FBQ2MsSUFBSixDQUFTb0IsTUFBNU07QUFBb05DLFFBQUFBLGVBQWUsRUFBRW5DLEdBQUcsQ0FBQ2MsSUFBSixDQUFTc0I7QUFBOU8sT0FERCxFQUN3UDtBQUFFakMsUUFBQUEsS0FBSyxFQUFFO0FBQUNrQyxVQUFBQSxZQUFZLEVBQUVyQyxHQUFHLENBQUNzQyxNQUFKLENBQVdDO0FBQTFCO0FBQVQsT0FEeFAsRUFHQ2xDLElBSEQsQ0FHTSxZQUFJO0FBQ1RKLFFBQUFBLEdBQUcsQ0FBQ21CLElBQUosQ0FBUyxzQkFBVDtBQUNBLE9BTEQsRUFNQ1gsS0FORCxDQU1PLFVBQUFZLEdBQUcsRUFBSTtBQUNicEIsUUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FSRDtBQVNBO0FBQ0QsR0FwQkQ7QUFxQkEsQ0F0REQiLCJzb3VyY2VSb290IjoiRDpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IFJlcGFyYWNpb24gPSBhcHAuZGIubW9kZWxzLnJlcGFyYWNpb25lcztcclxuXHJcblx0YXBwLmdldCgnL3JlcGFyYWNpb25lcycsIChyZXEscmVzKSA9PiB7XHJcblx0XHRSZXBhcmFjaW9uLmZpbmRBbGwoe3doZXJlOiB7cmVwYXJhY2lvbl9lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIHJlcGFyYWNpb25cclxuXHRhcHAucG9zdCgnL3Byb3ZlZWRvcmVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5wcm92ZWVkb3Jfbm9tYnJlICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5wcm92ZWVkb3Jfbm9tYnJlKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQT1NUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRQcm92ZWVkb3IuY3JlYXRlKHJlcS5ib2R5KVxyXG5cdFx0XHQudGhlbiggKCkgPT4geyBcclxuXHRcdFx0XHRyZXMuc2VuZCgnUHJvdmVlZG9yIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gdXBkYXRlIHByb3ZlZWRvclxyXG5cdGFwcC5wdXQoJy9wcm92ZWVkb3Jlcy86aWQnLCAocmVxLCByZXMpPT57XHJcblx0XHQvLyBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkucnVjICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5ydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBVVFwiKVxyXG5cdFx0XHRyZXMuanNvbihyZXEuYm9keSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0UHJvdmVlZG9yLnVwZGF0ZShcclxuXHRcdFx0XHR7IHByb3ZlZWRvcl9ub21icmU6IHJlcS5ib2R5Lm5vbWJyZSwgcHJvdmVlZG9yX3J1YzogcmVxLmJvZHkucnVjLCBwcm92ZWVkb3JfdGlwbzogcmVxLmJvZHkudGlwbywgcHJvdmVlZG9yX2RpcmVjY2lvbjogcmVxLmJvZHkuZGlyZWNjaW9uLCBwcm92ZWVkb3JfdGVsZWZvbm86IHJlcS5ib2R5LnRlbGVmb25vLCBwcm92ZWVkb3JfZmVjaW5nOiByZXEuYm9keS5mZWNpbmcsIHByb3ZlZWRvcl9lbWFpbDogcmVxLmJvZHkuZW1haWwgfSwgeyB3aGVyZToge3Byb3ZlZWRvcl9pZDogcmVxLnBhcmFtcy5pZH0gfVxyXG5cdFx0XHQpXHJcblx0XHRcdC50aGVuKCgpPT57XHJcblx0XHRcdFx0cmVzLnNlbmQoJ1Byb3ZlZWRvciBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "reparaciones.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Reparacion",
        "db",
        "models",
        "reparaciones",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "reparacion_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "proveedor_nombre",
        "console",
        "log",
        "Proveedor",
        "create",
        "send",
        "err",
        "put",
        "ruc",
        "update",
        "nombre",
        "proveedor_ruc",
        "proveedor_tipo",
        "tipo",
        "proveedor_direccion",
        "direccion",
        "proveedor_telefono",
        "telefono",
        "proveedor_fecing",
        "fecing",
        "proveedor_email",
        "email",
        "proveedor_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,UAAU,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,YAAjC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrCN,IAAAA,UAAU,CAACO,OAAX,CAAmB;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,iBAAiB,EAAE;AAApB;AAAR,KAAnB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAHsB,CAWtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,cAAT,EAAyB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAClC;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,gBAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCI,MAAAA,SAAS,CAACC,MAAV,CAAiBnB,GAAG,CAACc,IAArB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACmB,IAAJ,CAAS,oBAAT;AACA,OAHD,EAICZ,KAJD,CAIO,UAAAa,GAAG,EAAI;AACbpB,QAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAZsB,CAgCtB;;AACA3B,EAAAA,GAAG,CAAC4B,GAAJ,CAAQ,kBAAR,EAA4B,UAACtB,GAAD,EAAMC,GAAN,EAAY;AACvC;AACA,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASS,GAAb,EACA;AACCtB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCI,MAAAA,SAAS,CAACM,MAAV,CACC;AAAET,QAAAA,gBAAgB,EAAEf,GAAG,CAACc,IAAJ,CAASW,MAA7B;AAAqCC,QAAAA,aAAa,EAAE1B,GAAG,CAACc,IAAJ,CAASS,GAA7D;AAAkEI,QAAAA,cAAc,EAAE3B,GAAG,CAACc,IAAJ,CAASc,IAA3F;AAAiGC,QAAAA,mBAAmB,EAAE7B,GAAG,CAACc,IAAJ,CAASgB,SAA/H;AAA0IC,QAAAA,kBAAkB,EAAE/B,GAAG,CAACc,IAAJ,CAASkB,QAAvK;AAAiLC,QAAAA,gBAAgB,EAAEjC,GAAG,CAACc,IAAJ,CAASoB,MAA5M;AAAoNC,QAAAA,eAAe,EAAEnC,GAAG,CAACc,IAAJ,CAASsB;AAA9O,OADD,EACwP;AAAEjC,QAAAA,KAAK,EAAE;AAACkC,UAAAA,YAAY,EAAErC,GAAG,CAACsC,MAAJ,CAAWC;AAA1B;AAAT,OADxP,EAGClC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACmB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCX,KAND,CAMO,UAAAY,GAAG,EAAI;AACbpB,QAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAtDD",
      "sourceRoot": "D:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Reparacion = app.db.models.reparaciones;\r\n\r\n\tapp.get('/reparaciones', (req,res) => {\r\n\t\tReparacion.findAll({where: {reparacion_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add reparacion\r\n\tapp.post('/proveedores', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\r\n\t\tif(!req.body.proveedor_nombre)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Proveedor Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update proveedor\r\n\tapp.put('/proveedores/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.ruc + \"\\n\")\r\n\t\tif(!req.body.ruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.update(\r\n\t\t\t\t{ proveedor_nombre: req.body.nombre, proveedor_ruc: req.body.ruc, proveedor_tipo: req.body.tipo, proveedor_direccion: req.body.direccion, proveedor_telefono: req.body.telefono, proveedor_fecing: req.body.fecing, proveedor_email: req.body.email }, { where: {proveedor_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Proveedor Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1555451175982
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _consign = _interopRequireDefault(require(\"consign\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express.default)();\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n(0, _consign.default)({\n  cwd: __dirname\n}).include('libs/config.js').then('db.js').then('libs/middlewares.js').then('routes').then('libs/boot.js').into(app);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImJvZHlQYXJzZXIiLCJyZXF1aXJlIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImN3ZCIsIl9fZGlybmFtZSIsImluY2x1ZGUiLCJ0aGVuIiwiaW50byJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRyx1QkFBWjs7QUFFQSxJQUFJQyxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUNBRixHQUFHLENBQUNHLEdBQUosQ0FBUUYsVUFBVSxDQUFDRyxJQUFYLEVBQVI7QUFDQUosR0FBRyxDQUFDRyxHQUFKLENBQVFGLFVBQVUsQ0FBQ0ksVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBRUEsc0JBQVE7QUFDUEMsRUFBQUEsR0FBRyxFQUFFQztBQURFLENBQVIsRUFHQ0MsT0FIRCxDQUdTLGdCQUhULEVBSUNDLElBSkQsQ0FJTSxPQUpOLEVBS0NBLElBTEQsQ0FLTSxxQkFMTixFQU1DQSxJQU5ELENBTU0sUUFOTixFQU9DQSxJQVBELENBT00sY0FQTixFQVFDQyxJQVJELENBUU1YLEdBUk4iLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGNvbnNpZ24gZnJvbSAnY29uc2lnbic7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7IFxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTsgXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5cclxuY29uc2lnbih7XHJcblx0Y3dkOiBfX2Rpcm5hbWVcclxufSlcclxuLmluY2x1ZGUoJ2xpYnMvY29uZmlnLmpzJylcclxuLnRoZW4oJ2RiLmpzJylcclxuLnRoZW4oJ2xpYnMvbWlkZGxld2FyZXMuanMnKVxyXG4udGhlbigncm91dGVzJylcclxuLnRoZW4oJ2xpYnMvYm9vdC5qcycpIFxyXG4uaW50byhhcHApXHJcbiAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "bodyParser",
        "require",
        "use",
        "json",
        "urlencoded",
        "extended",
        "cwd",
        "__dirname",
        "include",
        "then",
        "into"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACAF,GAAG,CAACG,GAAJ,CAAQF,UAAU,CAACG,IAAX,EAAR;AACAJ,GAAG,CAACG,GAAJ,CAAQF,UAAU,CAACI,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEA,sBAAQ;AACPC,EAAAA,GAAG,EAAEC;AADE,CAAR,EAGCC,OAHD,CAGS,gBAHT,EAICC,IAJD,CAIM,OAJN,EAKCA,IALD,CAKM,qBALN,EAMCA,IAND,CAMM,QANN,EAOCA,IAPD,CAOM,cAPN,EAQCC,IARD,CAQMX,GARN",
      "sourceRoot": "E:\\dassis\\sis\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport consign from 'consign';\r\n\r\nconst app = express();\r\n\r\nvar bodyParser = require('body-parser'); \r\napp.use(bodyParser.json()); \r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\nconsign({\r\n\tcwd: __dirname\r\n})\r\n.include('libs/config.js')\r\n.then('db.js')\r\n.then('libs/middlewares.js')\r\n.then('routes')\r\n.then('libs/boot.js') \r\n.into(app)\r\n "
      ]
    },
    "sourceType": "script",
    "mtime": 1546980582687
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\libs\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\libs\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\libs\\config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\libs\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\libs",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  database: 'dbdas',\n  username: 'root',\n  password: '',\n  params: {\n    host: 'localhost',\n    dialect: 'mysql'\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGF0YWJhc2UiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwicGFyYW1zIiwiaG9zdCIsImRpYWxlY3QiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNoQkMsRUFBQUEsUUFBUSxFQUFFLE9BRE07QUFFaEJDLEVBQUFBLFFBQVEsRUFBRSxNQUZNO0FBR2hCQyxFQUFBQSxRQUFRLEVBQUUsRUFITTtBQUloQkMsRUFBQUEsTUFBTSxFQUFFO0FBQ1BDLElBQUFBLElBQUksRUFBRSxXQURDO0FBRVBDLElBQUFBLE9BQU8sRUFBRTtBQUZGO0FBSlEsQ0FBakIiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXGxpYnMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuXHRkYXRhYmFzZTogJ2RiZGFzJyxcclxuXHR1c2VybmFtZTogJ3Jvb3QnLFxyXG5cdHBhc3N3b3JkOiAnJyxcclxuXHRwYXJhbXM6IHtcclxuXHRcdGhvc3Q6ICdsb2NhbGhvc3QnLFxyXG5cdFx0ZGlhbGVjdDogJ215c3FsJ1xyXG5cdH1cclxufSAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "module",
        "exports",
        "database",
        "username",
        "password",
        "params",
        "host",
        "dialect"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,QAAQ,EAAE,OADM;AAEhBC,EAAAA,QAAQ,EAAE,MAFM;AAGhBC,EAAAA,QAAQ,EAAE,EAHM;AAIhBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IAAI,EAAE,WADC;AAEPC,IAAAA,OAAO,EAAE;AAFF;AAJQ,CAAjB",
      "sourceRoot": "E:\\dassis\\sis\\src\\libs",
      "sourcesContent": [
        "module.exports = {\r\n\tdatabase: 'dbdas',\r\n\tusername: 'root',\r\n\tpassword: '',\r\n\tparams: {\r\n\t\thost: 'localhost',\r\n\t\tdialect: 'mysql'\r\n\t}\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1550073655418
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar db = null;\n\nmodule.exports = function (app) {\n  var config = app.libs.config;\n\n  if (!db) {\n    var sequelize = new _sequelize.default(config.database, config.username, config.password, config.params);\n    db = {\n      sequelize: sequelize,\n      Sequelize: _sequelize.default,\n      models: {}\n    };\n\n    var dir = _path.default.join(__dirname, 'models');\n\n    _fs.default.readdirSync(dir).forEach(function (filename) {\n      var modelDir = _path.default.join(dir, filename);\n\n      var model = sequelize.import(modelDir);\n      db.models[model.name] = model;\n    });\n\n    Object.keys(db.models).forEach(function (key) {\n      db.models[key].associate(db.models);\n    });\n  }\n\n  return db;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImRiIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImNvbmZpZyIsImxpYnMiLCJzZXF1ZWxpemUiLCJTZXF1ZWxpemUiLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJwYXJhbXMiLCJtb2RlbHMiLCJkaXIiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImZzIiwicmVhZGRpclN5bmMiLCJmb3JFYWNoIiwiZmlsZW5hbWUiLCJtb2RlbERpciIsIm1vZGVsIiwiaW1wb3J0IiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJrZXkiLCJhc3NvY2lhdGUiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxFQUFFLEdBQUcsSUFBVDs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUN2QixNQUFNQyxNQUFNLEdBQUdELEdBQUcsQ0FBQ0UsSUFBSixDQUFTRCxNQUF4Qjs7QUFDQSxNQUFHLENBQUNKLEVBQUosRUFBUTtBQUNQLFFBQU1NLFNBQVMsR0FBRyxJQUFJQyxrQkFBSixDQUNqQkgsTUFBTSxDQUFDSSxRQURVLEVBRWpCSixNQUFNLENBQUNLLFFBRlUsRUFHakJMLE1BQU0sQ0FBQ00sUUFIVSxFQUlqQk4sTUFBTSxDQUFDTyxNQUpVLENBQWxCO0FBT0FYLElBQUFBLEVBQUUsR0FBRztBQUNKTSxNQUFBQSxTQUFTLEVBQVRBLFNBREk7QUFFSkMsTUFBQUEsU0FBUyxFQUFUQSxrQkFGSTtBQUdKSyxNQUFBQSxNQUFNLEVBQUU7QUFISixLQUFMOztBQU1BLFFBQU1DLEdBQUcsR0FBR0MsY0FBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQVo7O0FBQ0FDLGdCQUFHQyxXQUFILENBQWVMLEdBQWYsRUFBb0JNLE9BQXBCLENBQTRCLFVBQUFDLFFBQVEsRUFBSTtBQUN2QyxVQUFNQyxRQUFRLEdBQUdQLGNBQUtDLElBQUwsQ0FBVUYsR0FBVixFQUFlTyxRQUFmLENBQWpCOztBQUNBLFVBQU1FLEtBQUssR0FBR2hCLFNBQVMsQ0FBQ2lCLE1BQVYsQ0FBaUJGLFFBQWpCLENBQWQ7QUFDQXJCLE1BQUFBLEVBQUUsQ0FBQ1ksTUFBSCxDQUFVVSxLQUFLLENBQUNFLElBQWhCLElBQXdCRixLQUF4QjtBQUNBLEtBSkQ7O0FBTUFHLElBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZMUIsRUFBRSxDQUFDWSxNQUFmLEVBQXVCTyxPQUF2QixDQUErQixVQUFBUSxHQUFHLEVBQUk7QUFDckMzQixNQUFBQSxFQUFFLENBQUNZLE1BQUgsQ0FBVWUsR0FBVixFQUFlQyxTQUFmLENBQXlCNUIsRUFBRSxDQUFDWSxNQUE1QjtBQUNBLEtBRkQ7QUFHQTs7QUFFRCxTQUFPWixFQUFQO0FBQ0EsQ0E3QkQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5cclxubGV0IGRiID0gbnVsbDtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuXHRjb25zdCBjb25maWcgPSBhcHAubGlicy5jb25maWc7XHJcblx0aWYoIWRiKSB7XHJcblx0XHRjb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKFxyXG5cdFx0XHRjb25maWcuZGF0YWJhc2UsXHJcblx0XHRcdGNvbmZpZy51c2VybmFtZSxcclxuXHRcdFx0Y29uZmlnLnBhc3N3b3JkLFxyXG5cdFx0XHRjb25maWcucGFyYW1zXHJcblx0XHQpO1xyXG5cdFxyXG5cdFx0ZGIgPSB7XHJcblx0XHRcdHNlcXVlbGl6ZSxcclxuXHRcdFx0U2VxdWVsaXplLFxyXG5cdFx0XHRtb2RlbHM6IHt9XHJcblx0XHR9O1xyXG5cclxuXHRcdGNvbnN0IGRpciA9IHBhdGguam9pbihfX2Rpcm5hbWUsICdtb2RlbHMnKTtcclxuXHRcdGZzLnJlYWRkaXJTeW5jKGRpcikuZm9yRWFjaChmaWxlbmFtZSA9PiB7XHJcblx0XHRcdGNvbnN0IG1vZGVsRGlyID0gcGF0aC5qb2luKGRpciwgZmlsZW5hbWUpO1xyXG5cdFx0XHRjb25zdCBtb2RlbCA9IHNlcXVlbGl6ZS5pbXBvcnQobW9kZWxEaXIpO1xyXG5cdFx0XHRkYi5tb2RlbHNbbW9kZWwubmFtZV0gPSBtb2RlbDtcclxuXHRcdH0pO1xyXG5cclxuXHRcdE9iamVjdC5rZXlzKGRiLm1vZGVscykuZm9yRWFjaChrZXkgPT4ge1xyXG5cdFx0XHRkYi5tb2RlbHNba2V5XS5hc3NvY2lhdGUoZGIubW9kZWxzKTsgXHJcblx0XHR9KTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIGRiO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "db",
        "module",
        "exports",
        "app",
        "config",
        "libs",
        "sequelize",
        "Sequelize",
        "database",
        "username",
        "password",
        "params",
        "models",
        "dir",
        "path",
        "join",
        "__dirname",
        "fs",
        "readdirSync",
        "forEach",
        "filename",
        "modelDir",
        "model",
        "import",
        "name",
        "Object",
        "keys",
        "key",
        "associate"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,EAAE,GAAG,IAAT;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvB,MAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASD,MAAxB;;AACA,MAAG,CAACJ,EAAJ,EAAQ;AACP,QAAMM,SAAS,GAAG,IAAIC,kBAAJ,CACjBH,MAAM,CAACI,QADU,EAEjBJ,MAAM,CAACK,QAFU,EAGjBL,MAAM,CAACM,QAHU,EAIjBN,MAAM,CAACO,MAJU,CAAlB;AAOAX,IAAAA,EAAE,GAAG;AACJM,MAAAA,SAAS,EAATA,SADI;AAEJC,MAAAA,SAAS,EAATA,kBAFI;AAGJK,MAAAA,MAAM,EAAE;AAHJ,KAAL;;AAMA,QAAMC,GAAG,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAZ;;AACAC,gBAAGC,WAAH,CAAeL,GAAf,EAAoBM,OAApB,CAA4B,UAAAC,QAAQ,EAAI;AACvC,UAAMC,QAAQ,GAAGP,cAAKC,IAAL,CAAUF,GAAV,EAAeO,QAAf,CAAjB;;AACA,UAAME,KAAK,GAAGhB,SAAS,CAACiB,MAAV,CAAiBF,QAAjB,CAAd;AACArB,MAAAA,EAAE,CAACY,MAAH,CAAUU,KAAK,CAACE,IAAhB,IAAwBF,KAAxB;AACA,KAJD;;AAMAG,IAAAA,MAAM,CAACC,IAAP,CAAY1B,EAAE,CAACY,MAAf,EAAuBO,OAAvB,CAA+B,UAAAQ,GAAG,EAAI;AACrC3B,MAAAA,EAAE,CAACY,MAAH,CAAUe,GAAV,EAAeC,SAAf,CAAyB5B,EAAE,CAACY,MAA5B;AACA,KAFD;AAGA;;AAED,SAAOZ,EAAP;AACA,CA7BD",
      "sourceRoot": "E:\\dassis\\sis\\src",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nlet db = null;\r\n\r\nmodule.exports = app => {\r\n\tconst config = app.libs.config;\r\n\tif(!db) {\r\n\t\tconst sequelize = new Sequelize(\r\n\t\t\tconfig.database,\r\n\t\t\tconfig.username,\r\n\t\t\tconfig.password,\r\n\t\t\tconfig.params\r\n\t\t);\r\n\t\r\n\t\tdb = {\r\n\t\t\tsequelize,\r\n\t\t\tSequelize,\r\n\t\t\tmodels: {}\r\n\t\t};\r\n\r\n\t\tconst dir = path.join(__dirname, 'models');\r\n\t\tfs.readdirSync(dir).forEach(filename => {\r\n\t\t\tconst modelDir = path.join(dir, filename);\r\n\t\t\tconst model = sequelize.import(modelDir);\r\n\t\t\tdb.models[model.name] = model;\r\n\t\t});\r\n\r\n\t\tObject.keys(db.models).forEach(key => {\r\n\t\t\tdb.models[key].associate(db.models); \r\n\t\t});\r\n\t}\r\n\t\r\n\treturn db;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1546288144000
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Carro.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Carro.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Carro.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Carro.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Carro.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var carros = sequelize.define('carros', {\n    carro_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_constancia: {\n      type: DataTypes.STRING\n    },\n    carro_seriechasis: {\n      type: DataTypes.STRING\n    },\n    carro_modelo: {\n      type: DataTypes.STRING\n    },\n    carro_categoria: {\n      type: DataTypes.STRING\n    },\n    carro_placa: {\n      type: DataTypes.STRING\n    },\n    carro_marca: {\n      type: DataTypes.STRING\n    },\n    carro_ejes: {\n      type: DataTypes.STRING\n    },\n    carro_aniofab: {\n      type: DataTypes.STRING\n    },\n    carro_carga: {\n      type: DataTypes.STRING\n    },\n    carro_motor: {\n      type: DataTypes.STRING\n    },\n    carro_soatfec: {\n      type: DataTypes.STRING\n    },\n    carro_extinfec: {\n      type: DataTypes.STRING\n    },\n    carro_revtecfec: {\n      type: DataTypes.STRING\n    },\n    carro_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  carros.associate = function (models) {\n    // carros.hasMany(models.facturas);\n    carros.hasMany(models.viajes);\n    carros.hasMany(models.gastos);\n    carros.hasMany(models.efectivoviajes);\n    carros.hasMany(models.repuestos);\n    carros.hasMany(models.reparaciones);\n  };\n\n  return carros;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhcnJvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJjYXJyb3MiLCJkZWZpbmUiLCJjYXJyb19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjYXJyb19jb25zdGFuY2lhIiwiU1RSSU5HIiwiY2Fycm9fc2VyaWVjaGFzaXMiLCJjYXJyb19tb2RlbG8iLCJjYXJyb19jYXRlZ29yaWEiLCJjYXJyb19wbGFjYSIsImNhcnJvX21hcmNhIiwiY2Fycm9fZWplcyIsImNhcnJvX2FuaW9mYWIiLCJjYXJyb19jYXJnYSIsImNhcnJvX21vdG9yIiwiY2Fycm9fc29hdGZlYyIsImNhcnJvX2V4dGluZmVjIiwiY2Fycm9fcmV2dGVjZmVjIiwiY2Fycm9fZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJ2aWFqZXMiLCJnYXN0b3MiLCJlZmVjdGl2b3ZpYWplcyIsInJlcHVlc3RvcyIsInJlcGFyYWNpb25lcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxNQUFNLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixRQUFqQixFQUEyQjtBQUN6Q0MsSUFBQUEsUUFBUSxFQUFFO0FBQ1RDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURQO0FBRVRDLE1BQUFBLFVBQVUsRUFBRSxJQUZIO0FBR1RDLE1BQUFBLGFBQWEsRUFBRTtBQUhOLEtBRCtCO0FBTXpDQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNqQkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREMsS0FOdUI7QUFTekNDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQVRzQjtBQVl6Q0UsSUFBQUEsWUFBWSxFQUFFO0FBQ2JQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURILEtBWjJCO0FBZXpDRyxJQUFBQSxlQUFlLEVBQUU7QUFDaEJSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURBLEtBZndCO0FBa0J6Q0ksSUFBQUEsV0FBVyxFQUFFO0FBQ1pULE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURKLEtBbEI0QjtBQXFCekNLLElBQUFBLFdBQVcsRUFBRTtBQUNaVixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFESixLQXJCNEI7QUF3QnpDTSxJQUFBQSxVQUFVLEVBQUU7QUFDWFgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREwsS0F4QjZCO0FBMkJ6Q08sSUFBQUEsYUFBYSxFQUFFO0FBQ2RaLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURGLEtBM0IwQjtBQThCekNRLElBQUFBLFdBQVcsRUFBRTtBQUNaYixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFESixLQTlCNEI7QUFpQ3pDUyxJQUFBQSxXQUFXLEVBQUU7QUFDWmQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREosS0FqQzRCO0FBb0N6Q1UsSUFBQUEsYUFBYSxFQUFFO0FBQ2RmLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURGLEtBcEMwQjtBQXVDekNXLElBQUFBLGNBQWMsRUFBRTtBQUNmaEIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0F2Q3lCO0FBMEN6Q1ksSUFBQUEsZUFBZSxFQUFFO0FBQ2hCakIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0ExQ3dCO0FBNkN6Q2EsSUFBQUEsWUFBWSxFQUFFO0FBQ2JsQixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFESDtBQTdDMkIsR0FBM0IsRUFpRGY7QUFDQ2tCLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBakRlLENBQWY7O0FBcURBdEIsRUFBQUEsTUFBTSxDQUFDdUIsU0FBUCxHQUFtQixVQUFDQyxNQUFELEVBQVk7QUFDOUI7QUFDQXhCLElBQUFBLE1BQU0sQ0FBQ3lCLE9BQVAsQ0FBZUQsTUFBTSxDQUFDRSxNQUF0QjtBQUNBMUIsSUFBQUEsTUFBTSxDQUFDeUIsT0FBUCxDQUFlRCxNQUFNLENBQUNHLE1BQXRCO0FBQ0EzQixJQUFBQSxNQUFNLENBQUN5QixPQUFQLENBQWVELE1BQU0sQ0FBQ0ksY0FBdEI7QUFDQTVCLElBQUFBLE1BQU0sQ0FBQ3lCLE9BQVAsQ0FBZUQsTUFBTSxDQUFDSyxTQUF0QjtBQUNBN0IsSUFBQUEsTUFBTSxDQUFDeUIsT0FBUCxDQUFlRCxNQUFNLENBQUNNLFlBQXRCO0FBQ0EsR0FQRDs7QUFTQSxTQUFPOUIsTUFBUDtBQUNBLENBaEVEIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IGNhcnJvcyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2NhcnJvcycsIHtcclxuXHRcdGNhcnJvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fY29uc3RhbmNpYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fc2VyaWVjaGFzaXM6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX21vZGVsbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fY2F0ZWdvcmlhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjYXJyb19wbGFjYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fbWFyY2E6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX2VqZXM6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX2FuaW9mYWI6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX2NhcmdhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjYXJyb19tb3Rvcjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fc29hdGZlYzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fZXh0aW5mZWM6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGNhcnJvX3JldnRlY2ZlYzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9fZXN0YWRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0Y2Fycm9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdC8vIGNhcnJvcy5oYXNNYW55KG1vZGVscy5mYWN0dXJhcyk7XHJcblx0XHRjYXJyb3MuaGFzTWFueShtb2RlbHMudmlhamVzKTtcclxuXHRcdGNhcnJvcy5oYXNNYW55KG1vZGVscy5nYXN0b3MpO1xyXG5cdFx0Y2Fycm9zLmhhc01hbnkobW9kZWxzLmVmZWN0aXZvdmlhamVzKTtcclxuXHRcdGNhcnJvcy5oYXNNYW55KG1vZGVscy5yZXB1ZXN0b3MpO1xyXG5cdFx0Y2Fycm9zLmhhc01hbnkobW9kZWxzLnJlcGFyYWNpb25lcyk7XHJcblx0fVxyXG5cdFxyXG5cdHJldHVybiBjYXJyb3M7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Carro.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "carros",
        "define",
        "carro_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_constancia",
        "STRING",
        "carro_seriechasis",
        "carro_modelo",
        "carro_categoria",
        "carro_placa",
        "carro_marca",
        "carro_ejes",
        "carro_aniofab",
        "carro_carga",
        "carro_motor",
        "carro_soatfec",
        "carro_extinfec",
        "carro_revtecfec",
        "carro_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "viajes",
        "gastos",
        "efectivoviajes",
        "repuestos",
        "reparaciones"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACzCC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAD+B;AAMzCC,IAAAA,gBAAgB,EAAE;AACjBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADC,KANuB;AASzCC,IAAAA,iBAAiB,EAAE;AAClBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KATsB;AAYzCE,IAAAA,YAAY,EAAE;AACbP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADH,KAZ2B;AAezCG,IAAAA,eAAe,EAAE;AAChBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAfwB;AAkBzCI,IAAAA,WAAW,EAAE;AACZT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KAlB4B;AAqBzCK,IAAAA,WAAW,EAAE;AACZV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KArB4B;AAwBzCM,IAAAA,UAAU,EAAE;AACXX,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADL,KAxB6B;AA2BzCO,IAAAA,aAAa,EAAE;AACdZ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KA3B0B;AA8BzCQ,IAAAA,WAAW,EAAE;AACZb,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KA9B4B;AAiCzCS,IAAAA,WAAW,EAAE;AACZd,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KAjC4B;AAoCzCU,IAAAA,aAAa,EAAE;AACdf,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KApC0B;AAuCzCW,IAAAA,cAAc,EAAE;AACfhB,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAvCyB;AA0CzCY,IAAAA,eAAe,EAAE;AAChBjB,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KA1CwB;AA6CzCa,IAAAA,YAAY,EAAE;AACblB,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AA7C2B,GAA3B,EAiDf;AACCkB,IAAAA,UAAU,EAAE;AADb,GAjDe,CAAf;;AAqDAtB,EAAAA,MAAM,CAACuB,SAAP,GAAmB,UAACC,MAAD,EAAY;AAC9B;AACAxB,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACE,MAAtB;AACA1B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACG,MAAtB;AACA3B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACI,cAAtB;AACA5B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACK,SAAtB;AACA7B,IAAAA,MAAM,CAACyB,OAAP,CAAeD,MAAM,CAACM,YAAtB;AACA,GAPD;;AASA,SAAO9B,MAAP;AACA,CAhED",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst carros = sequelize.define('carros', {\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_constancia: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_seriechasis: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_modelo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_categoria: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_placa: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_marca: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_ejes: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_aniofab: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_carga: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_motor: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_soatfec: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_extinfec: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_revtecfec: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tcarros.associate = (models) => {\r\n\t\t// carros.hasMany(models.facturas);\r\n\t\tcarros.hasMany(models.viajes);\r\n\t\tcarros.hasMany(models.gastos);\r\n\t\tcarros.hasMany(models.efectivoviajes);\r\n\t\tcarros.hasMany(models.repuestos);\r\n\t\tcarros.hasMany(models.reparaciones);\r\n\t}\r\n\t\r\n\treturn carros;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1555449536960
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Cliente.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Cliente.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Cliente.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Cliente.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Cliente.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var clientes = sequelize.define('clientes', {\n    cliente_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    cliente_nombre: {\n      type: DataTypes.STRING\n    },\n    cliente_apepat: {\n      type: DataTypes.STRING\n    },\n    cliente_apemat: {\n      type: DataTypes.STRING\n    },\n    cliente_dniruc: {\n      type: DataTypes.STRING\n    },\n    cliente_fecing: {\n      type: DataTypes.STRING\n    },\n    cliente_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  clientes.associate = function (models) {\n    clientes.hasMany(models.documentos);\n    clientes.hasMany(models.viajes);\n    clientes.hasMany(models.facturas);\n  };\n\n  return clientes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImNsaWVudGVzIiwiZGVmaW5lIiwiY2xpZW50ZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjbGllbnRlX25vbWJyZSIsIlNUUklORyIsImNsaWVudGVfYXBlcGF0IiwiY2xpZW50ZV9hcGVtYXQiLCJjbGllbnRlX2RuaXJ1YyIsImNsaWVudGVfZmVjaW5nIiwiY2xpZW50ZV9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsImRvY3VtZW50b3MiLCJ2aWFqZXMiLCJmYWN0dXJhcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM3Q0MsSUFBQUEsVUFBVSxFQUFFO0FBQ1hDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURMO0FBRVhDLE1BQUFBLFVBQVUsRUFBRSxJQUZEO0FBR1hDLE1BQUFBLGFBQWEsRUFBRTtBQUhKLEtBRGlDO0FBTTdDQyxJQUFBQSxjQUFjLEVBQUU7QUFDZkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FONkI7QUFTN0NDLElBQUFBLGNBQWMsRUFBRTtBQUNmTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERCxLQVQ2QjtBQVk3Q0UsSUFBQUEsY0FBYyxFQUFFO0FBQ2ZQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURELEtBWjZCO0FBZTdDRyxJQUFBQSxjQUFjLEVBQUU7QUFDZlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FmNkI7QUFrQjdDSSxJQUFBQSxjQUFjLEVBQUU7QUFDZlQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FsQjZCO0FBcUI3Q0ssSUFBQUEsY0FBYyxFQUFFO0FBQ2ZWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQUREO0FBckI2QixHQUE3QixFQXlCakI7QUFDQ1UsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0F6QmlCLENBQWpCOztBQTZCQWQsRUFBQUEsUUFBUSxDQUFDZSxTQUFULEdBQXFCLFVBQUNDLE1BQUQsRUFBWTtBQUNoQ2hCLElBQUFBLFFBQVEsQ0FBQ2lCLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0UsVUFBeEI7QUFDQWxCLElBQUFBLFFBQVEsQ0FBQ2lCLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0csTUFBeEI7QUFDQW5CLElBQUFBLFFBQVEsQ0FBQ2lCLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0ksUUFBeEI7QUFDQSxHQUpEOztBQU1BLFNBQU9wQixRQUFQO0FBQ0EsQ0FyQ0QiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgY2xpZW50ZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdjbGllbnRlcycsIHtcclxuXHRcdGNsaWVudGVfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX25vbWJyZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LCBcclxuXHRcdGNsaWVudGVfYXBlcGF0OiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2FwZW1hdDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2xpZW50ZV9kbmlydWM6IHsgXHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2ZlY2luZzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Y2xpZW50ZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgIH0pO1xyXG5cclxuXHRjbGllbnRlcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcblx0XHRjbGllbnRlcy5oYXNNYW55KG1vZGVscy5kb2N1bWVudG9zKTtcclxuXHRcdGNsaWVudGVzLmhhc01hbnkobW9kZWxzLnZpYWplcyk7XHJcblx0XHRjbGllbnRlcy5oYXNNYW55KG1vZGVscy5mYWN0dXJhcyk7XHJcblx0fVxyXG5cdCBcclxuXHRyZXR1cm4gY2xpZW50ZXM7IFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Cliente.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "clientes",
        "define",
        "cliente_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "cliente_nombre",
        "STRING",
        "cliente_apepat",
        "cliente_apemat",
        "cliente_dniruc",
        "cliente_fecing",
        "cliente_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "documentos",
        "viajes",
        "facturas"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC7CC,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADL;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KADiC;AAM7CC,IAAAA,cAAc,EAAE;AACfJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAN6B;AAS7CC,IAAAA,cAAc,EAAE;AACfN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAT6B;AAY7CE,IAAAA,cAAc,EAAE;AACfP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAZ6B;AAe7CG,IAAAA,cAAc,EAAE;AACfR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAf6B;AAkB7CI,IAAAA,cAAc,EAAE;AACfT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAlB6B;AAqB7CK,IAAAA,cAAc,EAAE;AACfV,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AArB6B,GAA7B,EAyBjB;AACCU,IAAAA,UAAU,EAAE;AADb,GAzBiB,CAAjB;;AA6BAd,EAAAA,QAAQ,CAACe,SAAT,GAAqB,UAACC,MAAD,EAAY;AAChChB,IAAAA,QAAQ,CAACiB,OAAT,CAAiBD,MAAM,CAACE,UAAxB;AACAlB,IAAAA,QAAQ,CAACiB,OAAT,CAAiBD,MAAM,CAACG,MAAxB;AACAnB,IAAAA,QAAQ,CAACiB,OAAT,CAAiBD,MAAM,CAACI,QAAxB;AACA,GAJD;;AAMA,SAAOpB,QAAP;AACA,CArCD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst clientes = sequelize.define('clientes', {\r\n\t\tcliente_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcliente_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t}, \r\n\t\tcliente_apepat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_apemat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_dniruc: { \r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_fecing: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcliente_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tclientes.associate = (models) => {\r\n\t\tclientes.hasMany(models.documentos);\r\n\t\tclientes.hasMany(models.viajes);\r\n\t\tclientes.hasMany(models.facturas);\r\n\t}\r\n\t \r\n\treturn clientes; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550939606406
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Documento.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Documento.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Documento.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Documento.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Documento.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var documentos = sequelize.define('documentos', {\n    documento_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    documento_tipoclipro: {\n      type: DataTypes.STRING\n    },\n    documento_nro: {\n      type: DataTypes.STRING\n    },\n    documento_feccrea: {\n      type: DataTypes.STRING\n    },\n    documento_contenido: {\n      type: DataTypes.STRING\n    },\n    documento_pago: {\n      type: DataTypes.DECIMAL\n    },\n    documento_pagoTotal: {\n      type: DataTypes.DECIMAL\n    },\n    documento_feccan: {\n      type: DataTypes.STRING\n    },\n    documento_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  documentos.associate = function (models) {\n    documentos.hasMany(models.tramites);\n    documentos.belongsTo(models.clientes, {\n      foreignKey: 'cliente_id',\n      targetKey: 'cliente_id'\n    });\n    documentos.belongsTo(models.proveedores, {\n      foreignKey: 'proveedor_id',\n      targetKey: 'proveedor_id'\n    });\n    documentos.belongsTo(models.tipodocumentos, {\n      foreignKey: 'tipodocumento_id',\n      targetKey: 'tipodocumento_id'\n    });\n  };\n\n  return documentos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRvY3VtZW50by5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiZG9jdW1lbnRvcyIsImRlZmluZSIsImRvY3VtZW50b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJkb2N1bWVudG9fdGlwb2NsaXBybyIsIlNUUklORyIsImRvY3VtZW50b19ucm8iLCJkb2N1bWVudG9fZmVjY3JlYSIsImRvY3VtZW50b19jb250ZW5pZG8iLCJkb2N1bWVudG9fcGFnbyIsIkRFQ0lNQUwiLCJkb2N1bWVudG9fcGFnb1RvdGFsIiwiZG9jdW1lbnRvX2ZlY2NhbiIsImRvY3VtZW50b19lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsInRyYW1pdGVzIiwiYmVsb25nc1RvIiwiY2xpZW50ZXMiLCJmb3JlaWduS2V5IiwidGFyZ2V0S2V5IiwicHJvdmVlZG9yZXMiLCJ0aXBvZG9jdW1lbnRvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxVQUFVLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixZQUFqQixFQUErQjtBQUNqREMsSUFBQUEsWUFBWSxFQUFFO0FBQ2JDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURIO0FBRWJDLE1BQUFBLFVBQVUsRUFBRSxJQUZDO0FBR2JDLE1BQUFBLGFBQWEsRUFBRTtBQUhGLEtBRG1DO0FBTTdDQyxJQUFBQSxvQkFBb0IsRUFBRTtBQUNuQkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREcsS0FOdUI7QUFTN0NDLElBQUFBLGFBQWEsRUFBRTtBQUNaTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFESixLQVQ4QjtBQVk3Q0UsSUFBQUEsaUJBQWlCLEVBQUU7QUFDaEJQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURBLEtBWjBCO0FBZWpERyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREksS0FmNEI7QUFrQjdDSSxJQUFBQSxjQUFjLEVBQUU7QUFDYlQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNjO0FBREgsS0FsQjZCO0FBcUI3Q0MsSUFBQUEsbUJBQW1CLEVBQUU7QUFDbEJYLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDYztBQURFLEtBckJ3QjtBQXdCN0NFLElBQUFBLGdCQUFnQixFQUFFO0FBQ2ZaLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURELEtBeEIyQjtBQTJCN0NRLElBQUFBLGdCQUFnQixFQUFFO0FBQ2ZiLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQUREO0FBM0IyQixHQUEvQixFQStCbkI7QUFDQ2EsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0EvQm1CLENBQW5COztBQW1DQWpCLEVBQUFBLFVBQVUsQ0FBQ2tCLFNBQVgsR0FBdUIsVUFBQ0MsTUFBRCxFQUFZO0FBQ2xDbkIsSUFBQUEsVUFBVSxDQUFDb0IsT0FBWCxDQUFtQkQsTUFBTSxDQUFDRSxRQUExQjtBQUNBckIsSUFBQUEsVUFBVSxDQUFDc0IsU0FBWCxDQUFxQkgsTUFBTSxDQUFDSSxRQUE1QixFQUFzQztBQUNyQ0MsTUFBQUEsVUFBVSxFQUFFLFlBRHlCO0FBRXJDQyxNQUFBQSxTQUFTLEVBQUU7QUFGMEIsS0FBdEM7QUFJQXpCLElBQUFBLFVBQVUsQ0FBQ3NCLFNBQVgsQ0FBcUJILE1BQU0sQ0FBQ08sV0FBNUIsRUFBeUM7QUFDeENGLE1BQUFBLFVBQVUsRUFBRSxjQUQ0QjtBQUV4Q0MsTUFBQUEsU0FBUyxFQUFFO0FBRjZCLEtBQXpDO0FBSUF6QixJQUFBQSxVQUFVLENBQUNzQixTQUFYLENBQXFCSCxNQUFNLENBQUNRLGNBQTVCLEVBQTRDO0FBQzNDSCxNQUFBQSxVQUFVLEVBQUUsa0JBRCtCO0FBRTNDQyxNQUFBQSxTQUFTLEVBQUU7QUFGZ0MsS0FBNUM7QUFJQSxHQWREOztBQWdCQSxTQUFPekIsVUFBUDtBQUNBLENBckREIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IGRvY3VtZW50b3MgPSBzZXF1ZWxpemUuZGVmaW5lKCdkb2N1bWVudG9zJywge1xyXG5cdFx0ZG9jdW1lbnRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG4gICAgICBkb2N1bWVudG9fdGlwb2NsaXBybzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcbiAgICAgIH0sXHJcbiAgICAgIGRvY3VtZW50b19ucm86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBkb2N1bWVudG9fZmVjY3JlYToge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZG9jdW1lbnRvX2NvbnRlbmlkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG4gICAgICBkb2N1bWVudG9fcGFnbzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG4gICAgICB9LFxyXG4gICAgICBkb2N1bWVudG9fcGFnb1RvdGFsOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5ERUNJTUFMXHJcbiAgICAgIH0sXHJcbiAgICAgIGRvY3VtZW50b19mZWNjYW46IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBkb2N1bWVudG9fZXN0YWRvOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcbiAgICAgIH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgIH0pO1xyXG5cclxuXHRkb2N1bWVudG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdGRvY3VtZW50b3MuaGFzTWFueShtb2RlbHMudHJhbWl0ZXMpO1xyXG5cdFx0ZG9jdW1lbnRvcy5iZWxvbmdzVG8obW9kZWxzLmNsaWVudGVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdjbGllbnRlX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnY2xpZW50ZV9pZCdcclxuXHRcdH0pO1xyXG5cdFx0ZG9jdW1lbnRvcy5iZWxvbmdzVG8obW9kZWxzLnByb3ZlZWRvcmVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdwcm92ZWVkb3JfaWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdwcm92ZWVkb3JfaWQnXHJcblx0XHR9KTtcclxuXHRcdGRvY3VtZW50b3MuYmVsb25nc1RvKG1vZGVscy50aXBvZG9jdW1lbnRvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAndGlwb2RvY3VtZW50b19pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ3RpcG9kb2N1bWVudG9faWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIGRvY3VtZW50b3M7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Documento.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "documentos",
        "define",
        "documento_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "documento_tipoclipro",
        "STRING",
        "documento_nro",
        "documento_feccrea",
        "documento_contenido",
        "documento_pago",
        "DECIMAL",
        "documento_pagoTotal",
        "documento_feccan",
        "documento_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "tramites",
        "belongsTo",
        "clientes",
        "foreignKey",
        "targetKey",
        "proveedores",
        "tipodocumentos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,UAAU,GAAGF,SAAS,CAACG,MAAV,CAAiB,YAAjB,EAA+B;AACjDC,IAAAA,YAAY,EAAE;AACbC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADH;AAEbC,MAAAA,UAAU,EAAE,IAFC;AAGbC,MAAAA,aAAa,EAAE;AAHF,KADmC;AAM7CC,IAAAA,oBAAoB,EAAE;AACnBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KANuB;AAS7CC,IAAAA,aAAa,EAAE;AACZN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KAT8B;AAY7CE,IAAAA,iBAAiB,EAAE;AAChBP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAZ0B;AAejDG,IAAAA,mBAAmB,EAAE;AACpBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADI,KAf4B;AAkB7CI,IAAAA,cAAc,EAAE;AACbT,MAAAA,IAAI,EAAEJ,SAAS,CAACc;AADH,KAlB6B;AAqB7CC,IAAAA,mBAAmB,EAAE;AAClBX,MAAAA,IAAI,EAAEJ,SAAS,CAACc;AADE,KArBwB;AAwB7CE,IAAAA,gBAAgB,EAAE;AACfZ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAxB2B;AA2B7CQ,IAAAA,gBAAgB,EAAE;AACfb,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AA3B2B,GAA/B,EA+BnB;AACCa,IAAAA,UAAU,EAAE;AADb,GA/BmB,CAAnB;;AAmCAjB,EAAAA,UAAU,CAACkB,SAAX,GAAuB,UAACC,MAAD,EAAY;AAClCnB,IAAAA,UAAU,CAACoB,OAAX,CAAmBD,MAAM,CAACE,QAA1B;AACArB,IAAAA,UAAU,CAACsB,SAAX,CAAqBH,MAAM,CAACI,QAA5B,EAAsC;AACrCC,MAAAA,UAAU,EAAE,YADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIAzB,IAAAA,UAAU,CAACsB,SAAX,CAAqBH,MAAM,CAACO,WAA5B,EAAyC;AACxCF,MAAAA,UAAU,EAAE,cAD4B;AAExCC,MAAAA,SAAS,EAAE;AAF6B,KAAzC;AAIAzB,IAAAA,UAAU,CAACsB,SAAX,CAAqBH,MAAM,CAACQ,cAA5B,EAA4C;AAC3CH,MAAAA,UAAU,EAAE,kBAD+B;AAE3CC,MAAAA,SAAS,EAAE;AAFgC,KAA5C;AAIA,GAdD;;AAgBA,SAAOzB,UAAP;AACA,CArDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst documentos = sequelize.define('documentos', {\r\n\t\tdocumento_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n      documento_tipoclipro: {\r\n         type: DataTypes.STRING\r\n      },\r\n      documento_nro: {\r\n         type: DataTypes.STRING\r\n      },\r\n      documento_feccrea: {\r\n         type: DataTypes.STRING\r\n\t\t},\r\n\t\tdocumento_contenido: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n      documento_pago: {\r\n         type: DataTypes.DECIMAL\r\n      },\r\n      documento_pagoTotal: {\r\n         type: DataTypes.DECIMAL\r\n      },\r\n      documento_feccan: {\r\n         type: DataTypes.STRING\r\n      },\r\n      documento_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tdocumentos.associate = (models) => {\r\n\t\tdocumentos.hasMany(models.tramites);\r\n\t\tdocumentos.belongsTo(models.clientes, {\r\n\t\t\tforeignKey: 'cliente_id',\r\n\t\t\ttargetKey: 'cliente_id'\r\n\t\t});\r\n\t\tdocumentos.belongsTo(models.proveedores, {\r\n\t\t\tforeignKey: 'proveedor_id',\r\n\t\t\ttargetKey: 'proveedor_id'\r\n\t\t});\r\n\t\tdocumentos.belongsTo(models.tipodocumentos, {\r\n\t\t\tforeignKey: 'tipodocumento_id',\r\n\t\t\ttargetKey: 'tipodocumento_id'\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn documentos;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550416522616
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Efectivoviaje.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Efectivoviaje.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Efectivoviaje.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Efectivoviaje.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Efectivoviaje.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var efectivoviajes = sequelize.define('efectivoviajes', {\n    efectivoviaje_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    efectivoviaje_fecha: {\n      type: DataTypes.STRING\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    empleado_id: {\n      type: DataTypes.INTEGER\n    },\n    efectivoviaje_monto: {\n      type: DataTypes.DECIMAL\n    },\n    efectivoviaje_tipo: {\n      type: DataTypes.STRING\n    },\n    efectivoviaje_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  efectivoviajes.associate = function (models) {\n    efectivoviajes.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n    efectivoviajes.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n  };\n\n  return efectivoviajes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVmZWN0aXZvdmlhamUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImVmZWN0aXZvdmlhamVzIiwiZGVmaW5lIiwiZWZlY3Rpdm92aWFqZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJlZmVjdGl2b3ZpYWplX2ZlY2hhIiwiU1RSSU5HIiwiY2Fycm9faWQiLCJlbXBsZWFkb19pZCIsImVmZWN0aXZvdmlhamVfbW9udG8iLCJERUNJTUFMIiwiZWZlY3Rpdm92aWFqZV90aXBvIiwiZWZlY3Rpdm92aWFqZV9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiY2Fycm9zIiwiZm9yZWlnbktleSIsInRhcmdldEtleSIsImVtcGxlYWRvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxjQUFjLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixnQkFBakIsRUFBbUM7QUFDekRDLElBQUFBLGdCQUFnQixFQUFFO0FBQ2pCQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FEQztBQUVqQkMsTUFBQUEsVUFBVSxFQUFFLElBRks7QUFHakJDLE1BQUFBLGFBQWEsRUFBRTtBQUhFLEtBRHVDO0FBTXpEQyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREksS0FOb0M7QUFTekRDLElBQUFBLFFBQVEsRUFBRTtBQUNUTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEUCxLQVQrQztBQVl6RE0sSUFBQUEsV0FBVyxFQUFFO0FBQ1pQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURKLEtBWjRDO0FBZXpETyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNhO0FBREksS0Fmb0M7QUFrQnpEQyxJQUFBQSxrQkFBa0IsRUFBRTtBQUNuQlYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREcsS0FsQnFDO0FBcUJ6RE0sSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJYLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURLO0FBckJtQyxHQUFuQyxFQXlCdkI7QUFDQ1csSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0F6QnVCLENBQXZCOztBQTZCQWYsRUFBQUEsY0FBYyxDQUFDZ0IsU0FBZixHQUEyQixVQUFDQyxNQUFELEVBQVk7QUFDdENqQixJQUFBQSxjQUFjLENBQUNrQixTQUFmLENBQXlCRCxNQUFNLENBQUNFLE1BQWhDLEVBQXdDO0FBQ3ZDQyxNQUFBQSxVQUFVLEVBQUUsVUFEMkI7QUFFdkNDLE1BQUFBLFNBQVMsRUFBRTtBQUY0QixLQUF4QztBQUlBckIsSUFBQUEsY0FBYyxDQUFDa0IsU0FBZixDQUF5QkQsTUFBTSxDQUFDSyxTQUFoQyxFQUEyQztBQUMxQ0YsTUFBQUEsVUFBVSxFQUFFLGFBRDhCO0FBRTFDQyxNQUFBQSxTQUFTLEVBQUU7QUFGK0IsS0FBM0M7QUFJQSxHQVREOztBQVdBLFNBQU9yQixjQUFQO0FBQ0EsQ0ExQ0QiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgZWZlY3Rpdm92aWFqZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdlZmVjdGl2b3ZpYWplcycsIHtcclxuXHRcdGVmZWN0aXZvdmlhamVfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRlZmVjdGl2b3ZpYWplX2ZlY2hhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRjYXJyb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0ZWZlY3Rpdm92aWFqZV9tb250bzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG5cdFx0fSxcclxuXHRcdGVmZWN0aXZvdmlhamVfdGlwbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZWZlY3Rpdm92aWFqZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcbiAgIH0pO1xyXG5cclxuXHRlZmVjdGl2b3ZpYWplcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcblx0XHRlZmVjdGl2b3ZpYWplcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdFx0ZWZlY3Rpdm92aWFqZXMuYmVsb25nc1RvKG1vZGVscy5lbXBsZWFkb3MsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ2VtcGxlYWRvX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnZW1wbGVhZG9faWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0IFxyXG5cdHJldHVybiBlZmVjdGl2b3ZpYWplczsgXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Efectivoviaje.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "efectivoviajes",
        "define",
        "efectivoviaje_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "efectivoviaje_fecha",
        "STRING",
        "carro_id",
        "empleado_id",
        "efectivoviaje_monto",
        "DECIMAL",
        "efectivoviaje_tipo",
        "efectivoviaje_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey",
        "empleados"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,cAAc,GAAGF,SAAS,CAACG,MAAV,CAAiB,gBAAjB,EAAmC;AACzDC,IAAAA,gBAAgB,EAAE;AACjBC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADC;AAEjBC,MAAAA,UAAU,EAAE,IAFK;AAGjBC,MAAAA,aAAa,EAAE;AAHE,KADuC;AAMzDC,IAAAA,mBAAmB,EAAE;AACpBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADI,KANoC;AASzDC,IAAAA,QAAQ,EAAE;AACTN,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAT+C;AAYzDM,IAAAA,WAAW,EAAE;AACZP,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADJ,KAZ4C;AAezDO,IAAAA,mBAAmB,EAAE;AACpBR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADI,KAfoC;AAkBzDC,IAAAA,kBAAkB,EAAE;AACnBV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KAlBqC;AAqBzDM,IAAAA,oBAAoB,EAAE;AACrBX,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADK;AArBmC,GAAnC,EAyBvB;AACCW,IAAAA,UAAU,EAAE;AADb,GAzBuB,CAAvB;;AA6BAf,EAAAA,cAAc,CAACgB,SAAf,GAA2B,UAACC,MAAD,EAAY;AACtCjB,IAAAA,cAAc,CAACkB,SAAf,CAAyBD,MAAM,CAACE,MAAhC,EAAwC;AACvCC,MAAAA,UAAU,EAAE,UAD2B;AAEvCC,MAAAA,SAAS,EAAE;AAF4B,KAAxC;AAIArB,IAAAA,cAAc,CAACkB,SAAf,CAAyBD,MAAM,CAACK,SAAhC,EAA2C;AAC1CF,MAAAA,UAAU,EAAE,aAD8B;AAE1CC,MAAAA,SAAS,EAAE;AAF+B,KAA3C;AAIA,GATD;;AAWA,SAAOrB,cAAP;AACA,CA1CD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst efectivoviajes = sequelize.define('efectivoviajes', {\r\n\t\tefectivoviaje_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tefectivoviaje_fecha: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tefectivoviaje_monto: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\tefectivoviaje_tipo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tefectivoviaje_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tefectivoviajes.associate = (models) => {\r\n\t\tefectivoviajes.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t\tefectivoviajes.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn efectivoviajes; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550858342286
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Empleado.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Empleado.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Empleado.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Empleado.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Empleado.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var empleados = sequelize.define('empleados', {\n    empleado_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    empleado_nombre: {\n      type: DataTypes.STRING\n    },\n    empleado_apepat: {\n      type: DataTypes.STRING\n    },\n    empleado_apemat: {\n      type: DataTypes.STRING\n    },\n    empleado_dniruc: {\n      type: DataTypes.STRING\n    },\n    empleado_fecing: {\n      type: DataTypes.STRING\n    },\n    empleado_feclicencia: {\n      type: DataTypes.STRING\n    },\n    empleado_paga: {\n      type: DataTypes.STRING\n    },\n    empleado_cargo: {\n      type: DataTypes.STRING\n    },\n    empleado_direccion: {\n      type: DataTypes.STRING\n    },\n    empleado_telefono: {\n      type: DataTypes.STRING\n    },\n    empleado_email: {\n      type: DataTypes.STRING\n    },\n    empleado_nacion: {\n      type: DataTypes.STRING\n    },\n    empleado_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  empleados.associate = function (models) {\n    empleados.hasMany(models.tramites);\n    empleados.hasMany(models.viajes);\n    empleados.hasMany(models.efectivoviajes);\n    empleados.hasMany(models.repuestos);\n  };\n\n  return empleados;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVtcGxlYWRvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJlbXBsZWFkb3MiLCJkZWZpbmUiLCJlbXBsZWFkb19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJlbXBsZWFkb19ub21icmUiLCJTVFJJTkciLCJlbXBsZWFkb19hcGVwYXQiLCJlbXBsZWFkb19hcGVtYXQiLCJlbXBsZWFkb19kbmlydWMiLCJlbXBsZWFkb19mZWNpbmciLCJlbXBsZWFkb19mZWNsaWNlbmNpYSIsImVtcGxlYWRvX3BhZ2EiLCJlbXBsZWFkb19jYXJnbyIsImVtcGxlYWRvX2RpcmVjY2lvbiIsImVtcGxlYWRvX3RlbGVmb25vIiwiZW1wbGVhZG9fZW1haWwiLCJlbXBsZWFkb19uYWNpb24iLCJlbXBsZWFkb19lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsInRyYW1pdGVzIiwidmlhamVzIiwiZWZlY3Rpdm92aWFqZXMiLCJyZXB1ZXN0b3MiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDMUMsTUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDL0NDLElBQUFBLFdBQVcsRUFBRTtBQUNaQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FESjtBQUVaQyxNQUFBQSxVQUFVLEVBQUUsSUFGQTtBQUdaQyxNQUFBQSxhQUFhLEVBQUU7QUFISCxLQURrQztBQU0vQ0MsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQU44QjtBQVMvQ0MsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQVQ4QjtBQVkvQ0UsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCUCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQVo4QjtBQWUvQ0csSUFBQUEsZUFBZSxFQUFFO0FBQ2hCUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQSxLQWY4QjtBQWtCL0NJLElBQUFBLGVBQWUsRUFBRTtBQUNoQlQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0FsQjhCO0FBcUIvQ0ssSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURLLEtBckJ5QjtBQXdCL0NNLElBQUFBLGFBQWEsRUFBRTtBQUNkWCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERixLQXhCZ0M7QUEyQi9DTyxJQUFBQSxjQUFjLEVBQUU7QUFDZlosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0EzQitCO0FBOEIvQ1EsSUFBQUEsa0JBQWtCLEVBQUU7QUFDbkJiLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURHLEtBOUIyQjtBQWlDL0NTLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCZCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQWpDNEI7QUFvQy9DVSxJQUFBQSxjQUFjLEVBQUU7QUFDZmYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FwQytCO0FBdUMvQ1csSUFBQUEsZUFBZSxFQUFFO0FBQ2hCaEIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0F2QzhCO0FBMEMvQ1ksSUFBQUEsZUFBZSxFQUFFO0FBQ2hCakIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREE7QUExQzhCLEdBQTlCLEVBOENsQjtBQUNDaUIsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0E5Q2tCLENBQWxCOztBQWtEQXJCLEVBQUFBLFNBQVMsQ0FBQ3NCLFNBQVYsR0FBc0IsVUFBQ0MsTUFBRCxFQUFZO0FBQ2pDdkIsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDRSxRQUF6QjtBQUNBekIsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDRyxNQUF6QjtBQUNBMUIsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDSSxjQUF6QjtBQUNBM0IsSUFBQUEsU0FBUyxDQUFDd0IsT0FBVixDQUFrQkQsTUFBTSxDQUFDSyxTQUF6QjtBQUNBLEdBTEQ7O0FBT0EsU0FBTzVCLFNBQVA7QUFDQSxDQTNERCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuXHRjb25zdCBlbXBsZWFkb3MgPSBzZXF1ZWxpemUuZGVmaW5lKCdlbXBsZWFkb3MnLCB7XHJcblx0XHRlbXBsZWFkb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuXHRcdFx0cHJpbWFyeUtleTogdHJ1ZSxcclxuXHRcdFx0YXV0b0luY3JlbWVudDogdHJ1ZVxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX25vbWJyZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LCBcclxuXHRcdGVtcGxlYWRvX2FwZXBhdDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fYXBlbWF0OiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19kbmlydWM6IHsgXHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19mZWNpbmc6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2ZlY2xpY2VuY2lhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19wYWdhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb19jYXJnbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fZGlyZWNjaW9uOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRlbXBsZWFkb190ZWxlZm9ubzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fZW1haWw6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX25hY2lvbjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZW1wbGVhZG9fZXN0YWRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0ZW1wbGVhZG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdGVtcGxlYWRvcy5oYXNNYW55KG1vZGVscy50cmFtaXRlcyk7XHJcblx0XHRlbXBsZWFkb3MuaGFzTWFueShtb2RlbHMudmlhamVzKTtcclxuXHRcdGVtcGxlYWRvcy5oYXNNYW55KG1vZGVscy5lZmVjdGl2b3ZpYWplcyk7XHJcblx0XHRlbXBsZWFkb3MuaGFzTWFueShtb2RlbHMucmVwdWVzdG9zKTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIGVtcGxlYWRvcztcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Empleado.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "empleados",
        "define",
        "empleado_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "empleado_nombre",
        "STRING",
        "empleado_apepat",
        "empleado_apemat",
        "empleado_dniruc",
        "empleado_fecing",
        "empleado_feclicencia",
        "empleado_paga",
        "empleado_cargo",
        "empleado_direccion",
        "empleado_telefono",
        "empleado_email",
        "empleado_nacion",
        "empleado_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "tramites",
        "viajes",
        "efectivoviajes",
        "repuestos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC/CC,IAAAA,WAAW,EAAE;AACZC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADJ;AAEZC,MAAAA,UAAU,EAAE,IAFA;AAGZC,MAAAA,aAAa,EAAE;AAHH,KADkC;AAM/CC,IAAAA,eAAe,EAAE;AAChBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAN8B;AAS/CC,IAAAA,eAAe,EAAE;AAChBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAT8B;AAY/CE,IAAAA,eAAe,EAAE;AAChBP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAZ8B;AAe/CG,IAAAA,eAAe,EAAE;AAChBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAf8B;AAkB/CI,IAAAA,eAAe,EAAE;AAChBT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAlB8B;AAqB/CK,IAAAA,oBAAoB,EAAE;AACrBV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADK,KArByB;AAwB/CM,IAAAA,aAAa,EAAE;AACdX,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KAxBgC;AA2B/CO,IAAAA,cAAc,EAAE;AACfZ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KA3B+B;AA8B/CQ,IAAAA,kBAAkB,EAAE;AACnBb,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KA9B2B;AAiC/CS,IAAAA,iBAAiB,EAAE;AAClBd,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KAjC4B;AAoC/CU,IAAAA,cAAc,EAAE;AACff,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KApC+B;AAuC/CW,IAAAA,eAAe,EAAE;AAChBhB,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAvC8B;AA0C/CY,IAAAA,eAAe,EAAE;AAChBjB,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADA;AA1C8B,GAA9B,EA8ClB;AACCiB,IAAAA,UAAU,EAAE;AADb,GA9CkB,CAAlB;;AAkDArB,EAAAA,SAAS,CAACsB,SAAV,GAAsB,UAACC,MAAD,EAAY;AACjCvB,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACE,QAAzB;AACAzB,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACG,MAAzB;AACA1B,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACI,cAAzB;AACA3B,IAAAA,SAAS,CAACwB,OAAV,CAAkBD,MAAM,CAACK,SAAzB;AACA,GALD;;AAOA,SAAO5B,SAAP;AACA,CA3DD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst empleados = sequelize.define('empleados', {\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\templeado_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t}, \r\n\t\templeado_apepat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_apemat: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_dniruc: { \r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_fecing: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_feclicencia: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_paga: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_cargo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_direccion: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_telefono: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_email: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_nacion: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\templeado_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\templeados.associate = (models) => {\r\n\t\templeados.hasMany(models.tramites);\r\n\t\templeados.hasMany(models.viajes);\r\n\t\templeados.hasMany(models.efectivoviajes);\r\n\t\templeados.hasMany(models.repuestos);\r\n\t}\r\n\t\r\n\treturn empleados;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554134820294
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Factura.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Factura.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Factura.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Factura.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Factura.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var facturas = sequelize.define('facturas', {\n    factura_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    cliente_id: {\n      type: DataTypes.INTEGER\n    },\n    factura_nro: {\n      type: DataTypes.STRING\n    },\n    factura_fecha: {\n      type: DataTypes.STRING\n    },\n    factura_fecha2: {\n      type: DataTypes.DATE\n    },\n    factura_total: {\n      type: DataTypes.DECIMAL\n    },\n    factura_guias: {\n      type: DataTypes.STRING\n    },\n    factura_feccancela: {\n      type: DataTypes.STRING\n    },\n    factura_feccancela2: {\n      type: DataTypes.DATE\n    },\n    factura_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  facturas.associate = function (models) {\n    facturas.belongsTo(models.clientes, {\n      foreignKey: 'cliente_id',\n      targetKey: 'cliente_id'\n    });\n  };\n\n  return facturas;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZhY3R1cmEuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImZhY3R1cmFzIiwiZGVmaW5lIiwiZmFjdHVyYV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjbGllbnRlX2lkIiwiZmFjdHVyYV9ucm8iLCJTVFJJTkciLCJmYWN0dXJhX2ZlY2hhIiwiZmFjdHVyYV9mZWNoYTIiLCJEQVRFIiwiZmFjdHVyYV90b3RhbCIsIkRFQ0lNQUwiLCJmYWN0dXJhX2d1aWFzIiwiZmFjdHVyYV9mZWNjYW5jZWxhIiwiZmFjdHVyYV9mZWNjYW5jZWxhMiIsImZhY3R1cmFfZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsImNsaWVudGVzIiwiZm9yZWlnbktleSIsInRhcmdldEtleSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM3Q0MsSUFBQUEsVUFBVSxFQUFFO0FBQ1hDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURMO0FBRVhDLE1BQUFBLFVBQVUsRUFBRSxJQUZEO0FBR1hDLE1BQUFBLGFBQWEsRUFBRTtBQUhKLEtBRGlDO0FBTTdDQyxJQUFBQSxVQUFVLEVBQUU7QUFDWEosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREwsS0FOaUM7QUFTN0NJLElBQUFBLFdBQVcsRUFBRTtBQUNaTCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1U7QUFESixLQVRnQztBQVk3Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVTtBQURGLEtBWjhCO0FBZTdDRSxJQUFBQSxjQUFjLEVBQUU7QUFDZlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNhO0FBREQsS0FmNkI7QUFrQjdDQyxJQUFBQSxhQUFhLEVBQUU7QUFDZFYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNlO0FBREYsS0FsQjhCO0FBcUI3Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RaLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVTtBQURGLEtBckI4QjtBQXdCN0NPLElBQUFBLGtCQUFrQixFQUFFO0FBQ25CYixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1U7QUFERyxLQXhCeUI7QUEyQjdDUSxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQmQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNhO0FBREksS0EzQndCO0FBOEI3Q00sSUFBQUEsY0FBYyxFQUFFO0FBQ2ZmLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQUREO0FBOUI2QixHQUE3QixFQWtDakI7QUFDQ2UsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0FsQ2lCLENBQWpCOztBQXNDQW5CLEVBQUFBLFFBQVEsQ0FBQ29CLFNBQVQsR0FBcUIsVUFBQ0MsTUFBRCxFQUFZO0FBQ2hDckIsSUFBQUEsUUFBUSxDQUFDc0IsU0FBVCxDQUFtQkQsTUFBTSxDQUFDRSxRQUExQixFQUFvQztBQUNuQ0MsTUFBQUEsVUFBVSxFQUFFLFlBRHVCO0FBRW5DQyxNQUFBQSxTQUFTLEVBQUU7QUFGd0IsS0FBcEM7QUFJQSxHQUxEOztBQU9BLFNBQU96QixRQUFQO0FBQ0EsQ0EvQ0QiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgZmFjdHVyYXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdmYWN0dXJhcycsIHtcclxuXHRcdGZhY3R1cmFfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0ZmFjdHVyYV9ucm86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZmVjaGE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZmVjaGEyOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5EQVRFXHJcblx0XHR9LFxyXG5cdFx0ZmFjdHVyYV90b3RhbDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZ3VpYXM6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZmVjY2FuY2VsYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0ZmFjdHVyYV9mZWNjYW5jZWxhMjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURVxyXG5cdFx0fSxcclxuXHRcdGZhY3R1cmFfZXN0YWRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0ZmFjdHVyYXMuYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xyXG5cdFx0ZmFjdHVyYXMuYmVsb25nc1RvKG1vZGVscy5jbGllbnRlcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2xpZW50ZV9pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2NsaWVudGVfaWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0IFxyXG5cdHJldHVybiBmYWN0dXJhczsgXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Factura.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "facturas",
        "define",
        "factura_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "cliente_id",
        "factura_nro",
        "STRING",
        "factura_fecha",
        "factura_fecha2",
        "DATE",
        "factura_total",
        "DECIMAL",
        "factura_guias",
        "factura_feccancela",
        "factura_feccancela2",
        "factura_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "clientes",
        "foreignKey",
        "targetKey"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC7CC,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADL;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KADiC;AAM7CC,IAAAA,UAAU,EAAE;AACXJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADL,KANiC;AAS7CI,IAAAA,WAAW,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADJ,KATgC;AAY7CC,IAAAA,aAAa,EAAE;AACdP,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADF,KAZ8B;AAe7CE,IAAAA,cAAc,EAAE;AACfR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADD,KAf6B;AAkB7CC,IAAAA,aAAa,EAAE;AACdV,MAAAA,IAAI,EAAEJ,SAAS,CAACe;AADF,KAlB8B;AAqB7CC,IAAAA,aAAa,EAAE;AACdZ,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADF,KArB8B;AAwB7CO,IAAAA,kBAAkB,EAAE;AACnBb,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADG,KAxByB;AA2B7CQ,IAAAA,mBAAmB,EAAE;AACpBd,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADI,KA3BwB;AA8B7CM,IAAAA,cAAc,EAAE;AACff,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AA9B6B,GAA7B,EAkCjB;AACCe,IAAAA,UAAU,EAAE;AADb,GAlCiB,CAAjB;;AAsCAnB,EAAAA,QAAQ,CAACoB,SAAT,GAAqB,UAACC,MAAD,EAAY;AAChCrB,IAAAA,QAAQ,CAACsB,SAAT,CAAmBD,MAAM,CAACE,QAA1B,EAAoC;AACnCC,MAAAA,UAAU,EAAE,YADuB;AAEnCC,MAAAA,SAAS,EAAE;AAFwB,KAApC;AAIA,GALD;;AAOA,SAAOzB,QAAP;AACA,CA/CD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst facturas = sequelize.define('facturas', {\r\n\t\tfactura_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcliente_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tfactura_nro: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_fecha: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_fecha2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t},\r\n\t\tfactura_total: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\tfactura_guias: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_feccancela: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tfactura_feccancela2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t},\r\n\t\tfactura_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tfacturas.associate = (models) => {\r\n\t\tfacturas.belongsTo(models.clientes, {\r\n\t\t\tforeignKey: 'cliente_id',\r\n\t\t\ttargetKey: 'cliente_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn facturas; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556555518079
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Gasto.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Gasto.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Gasto.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Gasto.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Gasto.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var gastos = sequelize.define('gastos', {\n    gasto_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    proveedor_id: {\n      type: DataTypes.INTEGER\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    gasto_detalle: {\n      type: DataTypes.STRING\n    },\n    gasto_importe: {\n      type: DataTypes.DECIMAL\n    },\n    gasto_factura: {\n      type: DataTypes.STRING\n    },\n    gasto_fecha: {\n      type: DataTypes.STRING\n    },\n    gasto_fecha2: {\n      type: DataTypes.STRING\n    },\n    gasto_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  gastos.associate = function (models) {\n    gastos.belongsTo(models.proveedores, {\n      foreignKey: 'proveedor_id',\n      targetKey: 'proveedor_id'\n    });\n    gastos.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n  };\n\n  return gastos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdhc3RvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJnYXN0b3MiLCJkZWZpbmUiLCJnYXN0b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJwcm92ZWVkb3JfaWQiLCJjYXJyb19pZCIsImdhc3RvX2RldGFsbGUiLCJTVFJJTkciLCJnYXN0b19pbXBvcnRlIiwiREVDSU1BTCIsImdhc3RvX2ZhY3R1cmEiLCJnYXN0b19mZWNoYSIsImdhc3RvX2ZlY2hhMiIsImdhc3RvX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJwcm92ZWVkb3JlcyIsImZvcmVpZ25LZXkiLCJ0YXJnZXRLZXkiLCJjYXJyb3MiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDMUMsTUFBTUMsTUFBTSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsUUFBakIsRUFBMkI7QUFDekNDLElBQUFBLFFBQVEsRUFBRTtBQUNUQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FEUDtBQUVUQyxNQUFBQSxVQUFVLEVBQUUsSUFGSDtBQUdUQyxNQUFBQSxhQUFhLEVBQUU7QUFITixLQUQrQjtBQU16Q0MsSUFBQUEsWUFBWSxFQUFFO0FBQ2JKLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURILEtBTjJCO0FBU3pDSSxJQUFBQSxRQUFRLEVBQUU7QUFDVEwsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBRFAsS0FUK0I7QUFZekNLLElBQUFBLGFBQWEsRUFBRTtBQUNkTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFERixLQVowQjtBQWV6Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDYTtBQURGLEtBZjBCO0FBa0J6Q0MsSUFBQUEsYUFBYSxFQUFFO0FBQ2RWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVztBQURGLEtBbEIwQjtBQXFCekNJLElBQUFBLFdBQVcsRUFBRTtBQUNaWCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFESixLQXJCNEI7QUF3QnpDSyxJQUFBQSxZQUFZLEVBQUU7QUFDYlosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREgsS0F4QjJCO0FBMkJ6Q00sSUFBQUEsWUFBWSxFQUFFO0FBQ2JiLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURIO0FBM0IyQixHQUEzQixFQStCZjtBQUNDYSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQS9CZSxDQUFmOztBQW1DQWpCLEVBQUFBLE1BQU0sQ0FBQ2tCLFNBQVAsR0FBbUIsVUFBQ0MsTUFBRCxFQUFZO0FBQzFCbkIsSUFBQUEsTUFBTSxDQUFDb0IsU0FBUCxDQUFpQkQsTUFBTSxDQUFDRSxXQUF4QixFQUFxQztBQUN4Q0MsTUFBQUEsVUFBVSxFQUFFLGNBRDRCO0FBRXhDQyxNQUFBQSxTQUFTLEVBQUU7QUFGNkIsS0FBckM7QUFJSnZCLElBQUFBLE1BQU0sQ0FBQ29CLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ0ssTUFBeEIsRUFBZ0M7QUFDL0JGLE1BQUFBLFVBQVUsRUFBRSxVQURtQjtBQUUvQkMsTUFBQUEsU0FBUyxFQUFFO0FBRm9CLEtBQWhDO0FBSUEsR0FURDs7QUFXQSxTQUFPdkIsTUFBUDtBQUNBLENBaEREIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IGdhc3RvcyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2dhc3RvcycsIHtcclxuXHRcdGdhc3RvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0cHJvdmVlZG9yX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH0sIFxyXG5cdFx0Z2FzdG9fZGV0YWxsZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0Z2FzdG9faW1wb3J0ZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREVDSU1BTFxyXG5cdFx0fSxcclxuXHRcdGdhc3RvX2ZhY3R1cmE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGdhc3RvX2ZlY2hhOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRnYXN0b19mZWNoYTI6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGdhc3RvX2VzdGFkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdGdhc3Rvcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcbiAgICAgIGdhc3Rvcy5iZWxvbmdzVG8obW9kZWxzLnByb3ZlZWRvcmVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdwcm92ZWVkb3JfaWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdwcm92ZWVkb3JfaWQnXHJcblx0XHR9KTtcclxuXHRcdGdhc3Rvcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdH1cclxuXHQgXHJcblx0cmV0dXJuIGdhc3RvczsgXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Gasto.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "gastos",
        "define",
        "gasto_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "proveedor_id",
        "carro_id",
        "gasto_detalle",
        "STRING",
        "gasto_importe",
        "DECIMAL",
        "gasto_factura",
        "gasto_fecha",
        "gasto_fecha2",
        "gasto_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "proveedores",
        "foreignKey",
        "targetKey",
        "carros"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACzCC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAD+B;AAMzCC,IAAAA,YAAY,EAAE;AACbJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH,KAN2B;AASzCI,IAAAA,QAAQ,EAAE;AACTL,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAT+B;AAYzCK,IAAAA,aAAa,EAAE;AACdN,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAZ0B;AAezCC,IAAAA,aAAa,EAAE;AACdR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADF,KAf0B;AAkBzCC,IAAAA,aAAa,EAAE;AACdV,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAlB0B;AAqBzCI,IAAAA,WAAW,EAAE;AACZX,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADJ,KArB4B;AAwBzCK,IAAAA,YAAY,EAAE;AACbZ,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADH,KAxB2B;AA2BzCM,IAAAA,YAAY,EAAE;AACbb,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AA3B2B,GAA3B,EA+Bf;AACCa,IAAAA,UAAU,EAAE;AADb,GA/Be,CAAf;;AAmCAjB,EAAAA,MAAM,CAACkB,SAAP,GAAmB,UAACC,MAAD,EAAY;AAC1BnB,IAAAA,MAAM,CAACoB,SAAP,CAAiBD,MAAM,CAACE,WAAxB,EAAqC;AACxCC,MAAAA,UAAU,EAAE,cAD4B;AAExCC,MAAAA,SAAS,EAAE;AAF6B,KAArC;AAIJvB,IAAAA,MAAM,CAACoB,SAAP,CAAiBD,MAAM,CAACK,MAAxB,EAAgC;AAC/BF,MAAAA,UAAU,EAAE,UADmB;AAE/BC,MAAAA,SAAS,EAAE;AAFoB,KAAhC;AAIA,GATD;;AAWA,SAAOvB,MAAP;AACA,CAhDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst gastos = sequelize.define('gastos', {\r\n\t\tgasto_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tproveedor_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}, \r\n\t\tgasto_detalle: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_importe: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\tgasto_factura: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_fecha: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_fecha2: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tgasto_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tgastos.associate = (models) => {\r\n      gastos.belongsTo(models.proveedores, {\r\n\t\t\tforeignKey: 'proveedor_id',\r\n\t\t\ttargetKey: 'proveedor_id'\r\n\t\t});\r\n\t\tgastos.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn gastos; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556663128051
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Lugar.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Lugar.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Lugar.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Lugar.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Lugar.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var lugares = sequelize.define('lugares', {\n    lugar_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    lugar_distrito: {\n      type: DataTypes.STRING\n    },\n    lugar_provincia: {\n      type: DataTypes.STRING\n    },\n    lugar_departamento: {\n      type: DataTypes.STRING\n    },\n    lugar_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  lugares.associate = function (models) {\n    lugares.hasMany(models.viajes);\n  };\n\n  return lugares;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkx1Z2FyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJsdWdhcmVzIiwiZGVmaW5lIiwibHVnYXJfaWQiLCJ0eXBlIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwibHVnYXJfZGlzdHJpdG8iLCJTVFJJTkciLCJsdWdhcl9wcm92aW5jaWEiLCJsdWdhcl9kZXBhcnRhbWVudG8iLCJsdWdhcl9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsInZpYWplcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxPQUFPLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUMzQ0MsSUFBQUEsUUFBUSxFQUFFO0FBQ1RDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURQO0FBRVRDLE1BQUFBLFVBQVUsRUFBRSxJQUZIO0FBR1RDLE1BQUFBLGFBQWEsRUFBRTtBQUhOLEtBRGlDO0FBTTNDQyxJQUFBQSxjQUFjLEVBQUU7QUFDZkosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0FOMkI7QUFTM0NDLElBQUFBLGVBQWUsRUFBRTtBQUNoQk4sTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREEsS0FUMEI7QUFZM0NFLElBQUFBLGtCQUFrQixFQUFFO0FBQ25CUCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERyxLQVp1QjtBQWUzQ0csSUFBQUEsWUFBWSxFQUFFO0FBQ2JSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURIO0FBZjZCLEdBQTVCLEVBbUJoQjtBQUNDUSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQW5CZ0IsQ0FBaEI7O0FBdUJBWixFQUFBQSxPQUFPLENBQUNhLFNBQVIsR0FBb0IsVUFBQ0MsTUFBRCxFQUFZO0FBQy9CZCxJQUFBQSxPQUFPLENBQUNlLE9BQVIsQ0FBZ0JELE1BQU0sQ0FBQ0UsTUFBdkI7QUFDQSxHQUZEOztBQUlBLFNBQU9oQixPQUFQO0FBQ0EsQ0E3QkQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgbHVnYXJlcyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2x1Z2FyZXMnLCB7XHJcblx0XHRsdWdhcl9pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuXHRcdFx0cHJpbWFyeUtleTogdHJ1ZSxcclxuXHRcdFx0YXV0b0luY3JlbWVudDogdHJ1ZVxyXG5cdFx0fSxcclxuXHRcdGx1Z2FyX2Rpc3RyaXRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRsdWdhcl9wcm92aW5jaWE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGx1Z2FyX2RlcGFydGFtZW50bzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LCBcclxuXHRcdGx1Z2FyX2VzdGFkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdGx1Z2FyZXMuYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xyXG5cdFx0bHVnYXJlcy5oYXNNYW55KG1vZGVscy52aWFqZXMpO1xyXG5cdH1cclxuXHQgXHJcblx0cmV0dXJuIGx1Z2FyZXM7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Lugar.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "lugares",
        "define",
        "lugar_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "lugar_distrito",
        "STRING",
        "lugar_provincia",
        "lugar_departamento",
        "lugar_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "viajes"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC3CC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KADiC;AAM3CC,IAAAA,cAAc,EAAE;AACfJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAN2B;AAS3CC,IAAAA,eAAe,EAAE;AAChBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADA,KAT0B;AAY3CE,IAAAA,kBAAkB,EAAE;AACnBP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KAZuB;AAe3CG,IAAAA,YAAY,EAAE;AACbR,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AAf6B,GAA5B,EAmBhB;AACCQ,IAAAA,UAAU,EAAE;AADb,GAnBgB,CAAhB;;AAuBAZ,EAAAA,OAAO,CAACa,SAAR,GAAoB,UAACC,MAAD,EAAY;AAC/Bd,IAAAA,OAAO,CAACe,OAAR,CAAgBD,MAAM,CAACE,MAAvB;AACA,GAFD;;AAIA,SAAOhB,OAAP;AACA,CA7BD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst lugares = sequelize.define('lugares', {\r\n\t\tlugar_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tlugar_distrito: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tlugar_provincia: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tlugar_departamento: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t}, \r\n\t\tlugar_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tlugares.associate = (models) => {\r\n\t\tlugares.hasMany(models.viajes);\r\n\t}\r\n\t \r\n\treturn lugares;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550637129100
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Proveedor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Proveedor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Proveedor.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Proveedor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Proveedor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var proveedores = sequelize.define('proveedores', {\n    proveedor_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    proveedor_nombre: {\n      type: DataTypes.STRING\n    },\n    proveedor_ruc: {\n      type: DataTypes.STRING\n    },\n    proveedor_tipo: {\n      type: DataTypes.STRING\n    },\n    proveedor_direccion: {\n      type: DataTypes.STRING\n    },\n    proveedor_telefono: {\n      type: DataTypes.STRING\n    },\n    proveedor_email: {\n      type: DataTypes.STRING\n    },\n    proveedor_fecing: {\n      type: DataTypes.STRING\n    },\n    proveedor_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  proveedores.associate = function (models) {\n    proveedores.hasMany(models.documentos);\n    proveedores.hasMany(models.gastos);\n  };\n\n  return proveedores;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByb3ZlZWRvci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwicHJvdmVlZG9yZXMiLCJkZWZpbmUiLCJwcm92ZWVkb3JfaWQiLCJ0eXBlIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwicHJvdmVlZG9yX25vbWJyZSIsIlNUUklORyIsInByb3ZlZWRvcl9ydWMiLCJwcm92ZWVkb3JfdGlwbyIsInByb3ZlZWRvcl9kaXJlY2Npb24iLCJwcm92ZWVkb3JfdGVsZWZvbm8iLCJwcm92ZWVkb3JfZW1haWwiLCJwcm92ZWVkb3JfZmVjaW5nIiwicHJvdmVlZG9yX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiZG9jdW1lbnRvcyIsImdhc3RvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxXQUFXLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixhQUFqQixFQUFnQztBQUNuREMsSUFBQUEsWUFBWSxFQUFFO0FBQ2JDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURIO0FBRWJDLE1BQUFBLFVBQVUsRUFBRSxJQUZDO0FBR2JDLE1BQUFBLGFBQWEsRUFBRTtBQUhGLEtBRHFDO0FBTS9DQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNmSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERCxLQU42QjtBQVMvQ0MsSUFBQUEsYUFBYSxFQUFFO0FBQ1pOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURKLEtBVGdDO0FBWS9DRSxJQUFBQSxjQUFjLEVBQUU7QUFDYlAsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREgsS0FaK0I7QUFlL0NHLElBQUFBLG1CQUFtQixFQUFFO0FBQ2xCUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQWYwQjtBQWtCL0NJLElBQUFBLGtCQUFrQixFQUFFO0FBQ2pCVCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFEQyxLQWxCMkI7QUFxQi9DSyxJQUFBQSxlQUFlLEVBQUU7QUFDZFYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREYsS0FyQjhCO0FBd0IvQ00sSUFBQUEsZ0JBQWdCLEVBQUU7QUFDZlgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNTO0FBREQsS0F4QjZCO0FBMkIvQ08sSUFBQUEsZ0JBQWdCLEVBQUU7QUFDZlosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREQ7QUEzQjZCLEdBQWhDLEVBK0JwQjtBQUNDWSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQS9Cb0IsQ0FBcEI7O0FBbUNBaEIsRUFBQUEsV0FBVyxDQUFDaUIsU0FBWixHQUF3QixVQUFDQyxNQUFELEVBQVk7QUFDbkNsQixJQUFBQSxXQUFXLENBQUNtQixPQUFaLENBQW9CRCxNQUFNLENBQUNFLFVBQTNCO0FBQ0FwQixJQUFBQSxXQUFXLENBQUNtQixPQUFaLENBQW9CRCxNQUFNLENBQUNHLE1BQTNCO0FBQ0EsR0FIRDs7QUFLQSxTQUFPckIsV0FBUDtBQUNBLENBMUNEIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IHByb3ZlZWRvcmVzID0gc2VxdWVsaXplLmRlZmluZSgncHJvdmVlZG9yZXMnLCB7XHJcblx0XHRwcm92ZWVkb3JfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcbiAgICAgIHByb3ZlZWRvcl9ub21icmU6IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBwcm92ZWVkb3JfcnVjOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX3RpcG86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICBwcm92ZWVkb3JfZGlyZWNjaW9uOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX3RlbGVmb25vOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX2VtYWlsOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcHJvdmVlZG9yX2ZlY2luZzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcbiAgICAgIH0sXHJcbiAgICAgIHByb3ZlZWRvcl9lc3RhZG86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuICAgICAgfVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdHByb3ZlZWRvcmVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHByb3ZlZWRvcmVzLmhhc01hbnkobW9kZWxzLmRvY3VtZW50b3MpO1xyXG5cdFx0cHJvdmVlZG9yZXMuaGFzTWFueShtb2RlbHMuZ2FzdG9zKTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIHByb3ZlZWRvcmVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Proveedor.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "proveedores",
        "define",
        "proveedor_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "proveedor_nombre",
        "STRING",
        "proveedor_ruc",
        "proveedor_tipo",
        "proveedor_direccion",
        "proveedor_telefono",
        "proveedor_email",
        "proveedor_fecing",
        "proveedor_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "documentos",
        "gastos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,WAAW,GAAGF,SAAS,CAACG,MAAV,CAAiB,aAAjB,EAAgC;AACnDC,IAAAA,YAAY,EAAE;AACbC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADH;AAEbC,MAAAA,UAAU,EAAE,IAFC;AAGbC,MAAAA,aAAa,EAAE;AAHF,KADqC;AAM/CC,IAAAA,gBAAgB,EAAE;AACfJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAN6B;AAS/CC,IAAAA,aAAa,EAAE;AACZN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADJ,KATgC;AAY/CE,IAAAA,cAAc,EAAE;AACbP,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADH,KAZ+B;AAe/CG,IAAAA,mBAAmB,EAAE;AAClBR,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KAf0B;AAkB/CI,IAAAA,kBAAkB,EAAE;AACjBT,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADC,KAlB2B;AAqB/CK,IAAAA,eAAe,EAAE;AACdV,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADF,KArB8B;AAwB/CM,IAAAA,gBAAgB,EAAE;AACfX,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADD,KAxB6B;AA2B/CO,IAAAA,gBAAgB,EAAE;AACfZ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AA3B6B,GAAhC,EA+BpB;AACCY,IAAAA,UAAU,EAAE;AADb,GA/BoB,CAApB;;AAmCAhB,EAAAA,WAAW,CAACiB,SAAZ,GAAwB,UAACC,MAAD,EAAY;AACnClB,IAAAA,WAAW,CAACmB,OAAZ,CAAoBD,MAAM,CAACE,UAA3B;AACApB,IAAAA,WAAW,CAACmB,OAAZ,CAAoBD,MAAM,CAACG,MAA3B;AACA,GAHD;;AAKA,SAAOrB,WAAP;AACA,CA1CD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst proveedores = sequelize.define('proveedores', {\r\n\t\tproveedor_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n      proveedor_nombre: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_ruc: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_tipo: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_direccion: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_telefono: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_email: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_fecing: {\r\n         type: DataTypes.STRING\r\n      },\r\n      proveedor_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tproveedores.associate = (models) => {\r\n\t\tproveedores.hasMany(models.documentos);\r\n\t\tproveedores.hasMany(models.gastos);\r\n\t}\r\n\t\r\n\treturn proveedores;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550200673812
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Reparacion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Reparacion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Reparacion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Reparacion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Reparacion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var reparaciones = sequelize.define('reparaciones', {\n    reparacion_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    reparacion_qh: {\n      type: DataTypes.STRING\n    },\n    reparacion_qu: {\n      type: DataTypes.STRING\n    },\n    reparacion_fecha: {\n      type: DataTypes.DATE\n    },\n    reparacion_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  reparaciones.associate = function (models) {\n    reparaciones.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n  };\n\n  return reparaciones;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcGFyYWNpb24uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInJlcGFyYWNpb25lcyIsImRlZmluZSIsInJlcGFyYWNpb25faWQiLCJ0eXBlIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJhdXRvSW5jcmVtZW50IiwiY2Fycm9faWQiLCJyZXBhcmFjaW9uX3FoIiwiU1RSSU5HIiwicmVwYXJhY2lvbl9xdSIsInJlcGFyYWNpb25fZmVjaGEiLCJEQVRFIiwicmVwYXJhY2lvbl9lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiY2Fycm9zIiwiZm9yZWlnbktleSIsInRhcmdldEtleSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxZQUFZLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixjQUFqQixFQUFpQztBQUNyREMsSUFBQUEsYUFBYSxFQUFFO0FBQ2RDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURGO0FBRWRDLE1BQUFBLFVBQVUsRUFBRSxJQUZFO0FBR2RDLE1BQUFBLGFBQWEsRUFBRTtBQUhELEtBRHNDO0FBTXJEQyxJQUFBQSxRQUFRLEVBQUU7QUFDVEosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBRFAsS0FOMkM7QUFTakRJLElBQUFBLGFBQWEsRUFBRTtBQUNaTCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1U7QUFESixLQVRrQztBQVlqREMsSUFBQUEsYUFBYSxFQUFFO0FBQ1pQLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVTtBQURKLEtBWmtDO0FBZWpERSxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNmUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ2E7QUFERCxLQWYrQjtBQWtCakRDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2hCVixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEQTtBQWxCOEIsR0FBakMsRUFzQnJCO0FBQ0NVLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBdEJxQixDQUFyQjs7QUEwQkFkLEVBQUFBLFlBQVksQ0FBQ2UsU0FBYixHQUF5QixVQUFDQyxNQUFELEVBQVk7QUFDcENoQixJQUFBQSxZQUFZLENBQUNpQixTQUFiLENBQXVCRCxNQUFNLENBQUNFLE1BQTlCLEVBQXNDO0FBQ3JDQyxNQUFBQSxVQUFVLEVBQUUsVUFEeUI7QUFFckNDLE1BQUFBLFNBQVMsRUFBRTtBQUYwQixLQUF0QztBQUlBLEdBTEQ7O0FBT0EsU0FBT3BCLFlBQVA7QUFDQSxDQW5DRCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuXHRjb25zdCByZXBhcmFjaW9uZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCdyZXBhcmFjaW9uZXMnLCB7XHJcblx0XHRyZXBhcmFjaW9uX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0Y2Fycm9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH0sXHJcbiAgICAgIHJlcGFyYWNpb25fcWg6IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG4gICAgICB9LFxyXG4gICAgICByZXBhcmFjaW9uX3F1OiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgcmVwYXJhY2lvbl9mZWNoYToge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURVxyXG4gICAgICB9LFxyXG4gICAgICByZXBhcmFjaW9uX2VzdGFkbzoge1xyXG4gICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG4gICAgICB9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0cmVwYXJhY2lvbmVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHJlcGFyYWNpb25lcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdH1cclxuXHRcclxuXHRyZXR1cm4gcmVwYXJhY2lvbmVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Reparacion.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "reparaciones",
        "define",
        "reparacion_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_id",
        "reparacion_qh",
        "STRING",
        "reparacion_qu",
        "reparacion_fecha",
        "DATE",
        "reparacion_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAiB,cAAjB,EAAiC;AACrDC,IAAAA,aAAa,EAAE;AACdC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADF;AAEdC,MAAAA,UAAU,EAAE,IAFE;AAGdC,MAAAA,aAAa,EAAE;AAHD,KADsC;AAMrDC,IAAAA,QAAQ,EAAE;AACTJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAN2C;AASjDI,IAAAA,aAAa,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADJ,KATkC;AAYjDC,IAAAA,aAAa,EAAE;AACZP,MAAAA,IAAI,EAAEJ,SAAS,CAACU;AADJ,KAZkC;AAejDE,IAAAA,gBAAgB,EAAE;AACfR,MAAAA,IAAI,EAAEJ,SAAS,CAACa;AADD,KAf+B;AAkBjDC,IAAAA,iBAAiB,EAAE;AAChBV,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADA;AAlB8B,GAAjC,EAsBrB;AACCU,IAAAA,UAAU,EAAE;AADb,GAtBqB,CAArB;;AA0BAd,EAAAA,YAAY,CAACe,SAAb,GAAyB,UAACC,MAAD,EAAY;AACpChB,IAAAA,YAAY,CAACiB,SAAb,CAAuBD,MAAM,CAACE,MAA9B,EAAsC;AACrCC,MAAAA,UAAU,EAAE,UADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIA,GALD;;AAOA,SAAOpB,YAAP;AACA,CAnCD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst reparaciones = sequelize.define('reparaciones', {\r\n\t\treparacion_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n      reparacion_qh: {\r\n         type: DataTypes.STRING\r\n      },\r\n      reparacion_qu: {\r\n         type: DataTypes.STRING\r\n      },\r\n      reparacion_fecha: {\r\n         type: DataTypes.DATE\r\n      },\r\n      reparacion_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\treparaciones.associate = (models) => {\r\n\t\treparaciones.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn reparaciones;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1555449714648
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Repuesto.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Repuesto.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Repuesto.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Repuesto.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Repuesto.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var repuestos = sequelize.define('repuestos', {\n    repuesto_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    empleado_id: {\n      type: DataTypes.INTEGER\n    },\n    repuesto_codigo: {\n      type: DataTypes.STRING\n    },\n    repuesto_descripcion: {\n      type: DataTypes.STRING\n    },\n    repuesto_imagen: {\n      type: DataTypes.STRING\n    },\n    repuesto_fecingreso: {\n      type: DataTypes.STRING\n    },\n    repuesto_fecingreso2: {\n      type: DataTypes.DATE\n    },\n    repuesto_importe: {\n      type: DataTypes.DECIMAL\n    },\n    repuesto_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  repuestos.associate = function (models) {\n    repuestos.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n    repuestos.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n  };\n\n  return repuestos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcHVlc3RvLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJyZXB1ZXN0b3MiLCJkZWZpbmUiLCJyZXB1ZXN0b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjYXJyb19pZCIsImVtcGxlYWRvX2lkIiwicmVwdWVzdG9fY29kaWdvIiwiU1RSSU5HIiwicmVwdWVzdG9fZGVzY3JpcGNpb24iLCJyZXB1ZXN0b19pbWFnZW4iLCJyZXB1ZXN0b19mZWNpbmdyZXNvIiwicmVwdWVzdG9fZmVjaW5ncmVzbzIiLCJEQVRFIiwicmVwdWVzdG9faW1wb3J0ZSIsIkRFQ0lNQUwiLCJyZXB1ZXN0b19lc3RhZG8iLCJ0aW1lc3RhbXBzIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiY2Fycm9zIiwiZm9yZWlnbktleSIsInRhcmdldEtleSIsImVtcGxlYWRvcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUMxQyxNQUFNQyxTQUFTLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixXQUFqQixFQUE4QjtBQUMvQ0MsSUFBQUEsV0FBVyxFQUFFO0FBQ1pDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURKO0FBRVpDLE1BQUFBLFVBQVUsRUFBRSxJQUZBO0FBR1pDLE1BQUFBLGFBQWEsRUFBRTtBQUhILEtBRGtDO0FBTS9DQyxJQUFBQSxRQUFRLEVBQUU7QUFDVEosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBRFAsS0FOcUM7QUFTL0NJLElBQUFBLFdBQVcsRUFBRTtBQUNaTCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFESixLQVRrQztBQVkvQ0ssSUFBQUEsZUFBZSxFQUFFO0FBQ2hCTixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFEQSxLQVo4QjtBQWUvQ0MsSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJSLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVztBQURLLEtBZnlCO0FBa0IvQ0UsSUFBQUEsZUFBZSxFQUFFO0FBQ2hCVCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFEQSxLQWxCOEI7QUFxQi9DRyxJQUFBQSxtQkFBbUIsRUFBRTtBQUNwQlYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREksS0FyQjBCO0FBd0IvQ0ksSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJYLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDZ0I7QUFESyxLQXhCeUI7QUEyQi9DQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNqQmIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNrQjtBQURDLEtBM0I2QjtBQThCL0NDLElBQUFBLGVBQWUsRUFBRTtBQUNoQmYsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREE7QUE5QjhCLEdBQTlCLEVBa0NsQjtBQUNDZSxJQUFBQSxVQUFVLEVBQUU7QUFEYixHQWxDa0IsQ0FBbEI7O0FBc0NBbkIsRUFBQUEsU0FBUyxDQUFDb0IsU0FBVixHQUFzQixVQUFDQyxNQUFELEVBQVk7QUFDakNyQixJQUFBQSxTQUFTLENBQUNzQixTQUFWLENBQW9CRCxNQUFNLENBQUNFLE1BQTNCLEVBQW1DO0FBQ2xDQyxNQUFBQSxVQUFVLEVBQUUsVUFEc0I7QUFFbENDLE1BQUFBLFNBQVMsRUFBRTtBQUZ1QixLQUFuQztBQUlBekIsSUFBQUEsU0FBUyxDQUFDc0IsU0FBVixDQUFvQkQsTUFBTSxDQUFDSyxTQUEzQixFQUFzQztBQUNyQ0YsTUFBQUEsVUFBVSxFQUFFLGFBRHlCO0FBRXJDQyxNQUFBQSxTQUFTLEVBQUU7QUFGMEIsS0FBdEM7QUFJQSxHQVREOztBQVdBLFNBQU96QixTQUFQO0FBQ0EsQ0FuREQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgcmVwdWVzdG9zID0gc2VxdWVsaXplLmRlZmluZSgncmVwdWVzdG9zJywge1xyXG5cdFx0cmVwdWVzdG9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjYXJyb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0cmVwdWVzdG9fY29kaWdvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19kZXNjcmlwY2lvbjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0cmVwdWVzdG9faW1hZ2VuOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19mZWNpbmdyZXNvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19mZWNpbmdyZXNvMjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURVxyXG5cdFx0fSxcclxuXHRcdHJlcHVlc3RvX2ltcG9ydGU6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLkRFQ0lNQUxcclxuXHRcdH0sXHJcblx0XHRyZXB1ZXN0b19lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcblx0fSk7XHJcblx0XHJcblx0cmVwdWVzdG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHJlcHVlc3Rvcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdFx0cmVwdWVzdG9zLmJlbG9uZ3NUbyhtb2RlbHMuZW1wbGVhZG9zLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdlbXBsZWFkb19pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2VtcGxlYWRvX2lkJ1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gcmVwdWVzdG9zOyBcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Repuesto.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "repuestos",
        "define",
        "repuesto_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_id",
        "empleado_id",
        "repuesto_codigo",
        "STRING",
        "repuesto_descripcion",
        "repuesto_imagen",
        "repuesto_fecingreso",
        "repuesto_fecingreso2",
        "DATE",
        "repuesto_importe",
        "DECIMAL",
        "repuesto_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey",
        "empleados"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC/CC,IAAAA,WAAW,EAAE;AACZC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADJ;AAEZC,MAAAA,UAAU,EAAE,IAFA;AAGZC,MAAAA,aAAa,EAAE;AAHH,KADkC;AAM/CC,IAAAA,QAAQ,EAAE;AACTJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KANqC;AAS/CI,IAAAA,WAAW,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADJ,KATkC;AAY/CK,IAAAA,eAAe,EAAE;AAChBN,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KAZ8B;AAe/CC,IAAAA,oBAAoB,EAAE;AACrBR,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADK,KAfyB;AAkB/CE,IAAAA,eAAe,EAAE;AAChBT,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KAlB8B;AAqB/CG,IAAAA,mBAAmB,EAAE;AACpBV,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADI,KArB0B;AAwB/CI,IAAAA,oBAAoB,EAAE;AACrBX,MAAAA,IAAI,EAAEJ,SAAS,CAACgB;AADK,KAxByB;AA2B/CC,IAAAA,gBAAgB,EAAE;AACjBb,MAAAA,IAAI,EAAEJ,SAAS,CAACkB;AADC,KA3B6B;AA8B/CC,IAAAA,eAAe,EAAE;AAChBf,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADA;AA9B8B,GAA9B,EAkClB;AACCe,IAAAA,UAAU,EAAE;AADb,GAlCkB,CAAlB;;AAsCAnB,EAAAA,SAAS,CAACoB,SAAV,GAAsB,UAACC,MAAD,EAAY;AACjCrB,IAAAA,SAAS,CAACsB,SAAV,CAAoBD,MAAM,CAACE,MAA3B,EAAmC;AAClCC,MAAAA,UAAU,EAAE,UADsB;AAElCC,MAAAA,SAAS,EAAE;AAFuB,KAAnC;AAIAzB,IAAAA,SAAS,CAACsB,SAAV,CAAoBD,MAAM,CAACK,SAA3B,EAAsC;AACrCF,MAAAA,UAAU,EAAE,aADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIA,GATD;;AAWA,SAAOzB,SAAP;AACA,CAnDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst repuestos = sequelize.define('repuestos', {\r\n\t\trepuesto_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\trepuesto_codigo: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_descripcion: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_imagen: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_fecingreso: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\trepuesto_fecingreso2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t},\r\n\t\trepuesto_importe: {\r\n\t\t\ttype: DataTypes.DECIMAL\r\n\t\t},\r\n\t\trepuesto_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n\t});\r\n\t\r\n\trepuestos.associate = (models) => {\r\n\t\trepuestos.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t\trepuestos.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t}\r\n\r\n\treturn repuestos; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556661439731
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Tipodocumento.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Tipodocumento.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Tipodocumento.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Tipodocumento.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Tipodocumento.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var tipodocumentos = sequelize.define('tipodocumentos', {\n    tipodocumento_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    tipodocumento_nombre: {\n      type: DataTypes.STRING\n    },\n    tipodocumento_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  tipodocumentos.associate = function (models) {\n    tipodocumentos.hasMany(models.documentos);\n  };\n\n  return tipodocumentos;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpcG9kb2N1bWVudG8uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInRpcG9kb2N1bWVudG9zIiwiZGVmaW5lIiwidGlwb2RvY3VtZW50b19pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJ0aXBvZG9jdW1lbnRvX25vbWJyZSIsIlNUUklORyIsInRpcG9kb2N1bWVudG9fZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJkb2N1bWVudG9zIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQzFDLE1BQU1DLGNBQWMsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLGdCQUFqQixFQUFtQztBQUN6REMsSUFBQUEsZ0JBQWdCLEVBQUU7QUFDakJDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxPQURDO0FBRWpCQyxNQUFBQSxVQUFVLEVBQUUsSUFGSztBQUdqQkMsTUFBQUEsYUFBYSxFQUFFO0FBSEUsS0FEdUM7QUFNckRDLElBQUFBLG9CQUFvQixFQUFFO0FBQ25CSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERyxLQU4rQjtBQVNyREMsSUFBQUEsb0JBQW9CLEVBQUU7QUFDbkJOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURHO0FBVCtCLEdBQW5DLEVBYXZCO0FBQ0NNLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBYnVCLENBQXZCOztBQWlCQVYsRUFBQUEsY0FBYyxDQUFDVyxTQUFmLEdBQTJCLFVBQUNDLE1BQUQsRUFBWTtBQUN0Q1osSUFBQUEsY0FBYyxDQUFDYSxPQUFmLENBQXVCRCxNQUFNLENBQUNFLFVBQTlCO0FBQ0EsR0FGRDs7QUFJQSxTQUFPZCxjQUFQO0FBQ0EsQ0F2QkQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgdGlwb2RvY3VtZW50b3MgPSBzZXF1ZWxpemUuZGVmaW5lKCd0aXBvZG9jdW1lbnRvcycsIHtcclxuXHRcdHRpcG9kb2N1bWVudG9faWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcbiAgICAgIHRpcG9kb2N1bWVudG9fbm9tYnJlOiB7XHJcbiAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuICAgICAgfSxcclxuICAgICAgdGlwb2RvY3VtZW50b19lc3RhZG86IHtcclxuICAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuICAgICAgfVxyXG5cdH0sXHJcblx0e1xyXG5cdFx0dGltZXN0YW1wczogZmFsc2VcclxuICAgfSk7XHJcblxyXG5cdHRpcG9kb2N1bWVudG9zLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHRpcG9kb2N1bWVudG9zLmhhc01hbnkobW9kZWxzLmRvY3VtZW50b3MpO1xyXG5cdH1cclxuXHRcclxuXHRyZXR1cm4gdGlwb2RvY3VtZW50b3M7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Tipodocumento.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "tipodocumentos",
        "define",
        "tipodocumento_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "tipodocumento_nombre",
        "STRING",
        "tipodocumento_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "documentos"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,cAAc,GAAGF,SAAS,CAACG,MAAV,CAAiB,gBAAjB,EAAmC;AACzDC,IAAAA,gBAAgB,EAAE;AACjBC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADC;AAEjBC,MAAAA,UAAU,EAAE,IAFK;AAGjBC,MAAAA,aAAa,EAAE;AAHE,KADuC;AAMrDC,IAAAA,oBAAoB,EAAE;AACnBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KAN+B;AASrDC,IAAAA,oBAAoB,EAAE;AACnBN,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADG;AAT+B,GAAnC,EAavB;AACCM,IAAAA,UAAU,EAAE;AADb,GAbuB,CAAvB;;AAiBAV,EAAAA,cAAc,CAACW,SAAf,GAA2B,UAACC,MAAD,EAAY;AACtCZ,IAAAA,cAAc,CAACa,OAAf,CAAuBD,MAAM,CAACE,UAA9B;AACA,GAFD;;AAIA,SAAOd,cAAP;AACA,CAvBD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst tipodocumentos = sequelize.define('tipodocumentos', {\r\n\t\ttipodocumento_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n      tipodocumento_nombre: {\r\n         type: DataTypes.STRING\r\n      },\r\n      tipodocumento_estado: {\r\n         type: DataTypes.INTEGER\r\n      }\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\ttipodocumentos.associate = (models) => {\r\n\t\ttipodocumentos.hasMany(models.documentos);\r\n\t}\r\n\t\r\n\treturn tipodocumentos;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547778314619
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Tipotramite.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Tipotramite.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Tipotramite.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Tipotramite.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Tipotramite.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var tipotramites = sequelize.define('tipotramites', {\n    tipotramite_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    tipotramite_describe: {\n      type: DataTypes.STRING\n    },\n    tipotramite_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  tipotramites.associate = function (models) {\n    tipotramites.hasMany(models.tramites);\n  };\n\n  return tipotramites;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpcG90cmFtaXRlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJ0aXBvdHJhbWl0ZXMiLCJkZWZpbmUiLCJ0aXBvdHJhbWl0ZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJ0aXBvdHJhbWl0ZV9kZXNjcmliZSIsIlNUUklORyIsInRpcG90cmFtaXRlX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwidHJhbWl0ZXMiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDMUMsTUFBTUMsWUFBWSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsY0FBakIsRUFBaUM7QUFDckRDLElBQUFBLGNBQWMsRUFBRTtBQUNmQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssT0FERDtBQUVmQyxNQUFBQSxVQUFVLEVBQUUsSUFGRztBQUdmQyxNQUFBQSxhQUFhLEVBQUU7QUFIQSxLQURxQztBQU1yREMsSUFBQUEsb0JBQW9CLEVBQUU7QUFDckJKLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURLLEtBTitCO0FBU3JEQyxJQUFBQSxrQkFBa0IsRUFBRTtBQUNuQk4sTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREc7QUFUaUMsR0FBakMsRUFhckI7QUFDQ00sSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0FicUIsQ0FBckI7O0FBaUJBVixFQUFBQSxZQUFZLENBQUNXLFNBQWIsR0FBeUIsVUFBQ0MsTUFBRCxFQUFZO0FBQ3BDWixJQUFBQSxZQUFZLENBQUNhLE9BQWIsQ0FBcUJELE1BQU0sQ0FBQ0UsUUFBNUI7QUFDQSxHQUZEOztBQUlBLFNBQU9kLFlBQVA7QUFDQSxDQXZCRCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuXHRjb25zdCB0aXBvdHJhbWl0ZXMgPSBzZXF1ZWxpemUuZGVmaW5lKCd0aXBvdHJhbWl0ZXMnLCB7XHJcblx0XHR0aXBvdHJhbWl0ZV9pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuXHRcdFx0cHJpbWFyeUtleTogdHJ1ZSxcclxuXHRcdFx0YXV0b0luY3JlbWVudDogdHJ1ZVxyXG5cdFx0fSxcclxuXHRcdHRpcG90cmFtaXRlX2Rlc2NyaWJlOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHR0aXBvdHJhbWl0ZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcblx0fSk7XHJcblxyXG5cdHRpcG90cmFtaXRlcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XHJcblx0XHR0aXBvdHJhbWl0ZXMuaGFzTWFueShtb2RlbHMudHJhbWl0ZXMpO1xyXG5cdH1cclxuXHRcclxuXHRyZXR1cm4gdGlwb3RyYW1pdGVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Tipotramite.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "tipotramites",
        "define",
        "tipotramite_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "tipotramite_describe",
        "STRING",
        "tipotramite_estado",
        "timestamps",
        "associate",
        "models",
        "hasMany",
        "tramites"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAiB,cAAjB,EAAiC;AACrDC,IAAAA,cAAc,EAAE;AACfC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADD;AAEfC,MAAAA,UAAU,EAAE,IAFG;AAGfC,MAAAA,aAAa,EAAE;AAHA,KADqC;AAMrDC,IAAAA,oBAAoB,EAAE;AACrBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADK,KAN+B;AASrDC,IAAAA,kBAAkB,EAAE;AACnBN,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADG;AATiC,GAAjC,EAarB;AACCM,IAAAA,UAAU,EAAE;AADb,GAbqB,CAArB;;AAiBAV,EAAAA,YAAY,CAACW,SAAb,GAAyB,UAACC,MAAD,EAAY;AACpCZ,IAAAA,YAAY,CAACa,OAAb,CAAqBD,MAAM,CAACE,QAA5B;AACA,GAFD;;AAIA,SAAOd,YAAP;AACA,CAvBD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst tipotramites = sequelize.define('tipotramites', {\r\n\t\ttipotramite_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\ttipotramite_describe: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\ttipotramite_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n\t});\r\n\r\n\ttipotramites.associate = (models) => {\r\n\t\ttipotramites.hasMany(models.tramites);\r\n\t}\r\n\t\r\n\treturn tipotramites;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547773151104
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Tramite.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Tramite.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Tramite.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Tramite.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Tramite.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var tramites = sequelize.define('tramites', {\n    tramite_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    tramite_fecsalida: {\n      type: DataTypes.STRING\n    },\n    tramite_fecregreso: {\n      type: DataTypes.STRING\n    },\n    tramite_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  tramites.associate = function (models) {\n    tramites.belongsTo(models.documentos, {\n      foreignKey: 'documento_id',\n      targetKey: 'documento_id'\n    });\n    tramites.belongsTo(models.tipotramites, {\n      foreignKey: 'tipotramite_id',\n      targetKey: 'tipotramite_id'\n    });\n    tramites.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n  };\n\n  return tramites;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRyYW1pdGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInRyYW1pdGVzIiwiZGVmaW5lIiwidHJhbWl0ZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJ0cmFtaXRlX2ZlY3NhbGlkYSIsIlNUUklORyIsInRyYW1pdGVfZmVjcmVncmVzbyIsInRyYW1pdGVfZXN0YWRvIiwidGltZXN0YW1wcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsImRvY3VtZW50b3MiLCJmb3JlaWduS2V5IiwidGFyZ2V0S2V5IiwidGlwb3RyYW1pdGVzIiwiZW1wbGVhZG9zIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQzFDLE1BQU1DLFFBQVEsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFVBQWpCLEVBQTZCO0FBQzdDQyxJQUFBQSxVQUFVLEVBQUU7QUFDWEMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE9BREw7QUFFWEMsTUFBQUEsVUFBVSxFQUFFLElBRkQ7QUFHWEMsTUFBQUEsYUFBYSxFQUFFO0FBSEosS0FEaUM7QUFNN0NDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1M7QUFERSxLQU4wQjtBQVM3Q0MsSUFBQUEsa0JBQWtCLEVBQUU7QUFDbkJOLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDUztBQURHLEtBVHlCO0FBWTdDRSxJQUFBQSxjQUFjLEVBQUU7QUFDZlAsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLO0FBREQ7QUFaNkIsR0FBN0IsRUFnQmpCO0FBQ0NPLElBQUFBLFVBQVUsRUFBRTtBQURiLEdBaEJpQixDQUFqQjs7QUFvQkFYLEVBQUFBLFFBQVEsQ0FBQ1ksU0FBVCxHQUFxQixVQUFDQyxNQUFELEVBQVk7QUFDaENiLElBQUFBLFFBQVEsQ0FBQ2MsU0FBVCxDQUFtQkQsTUFBTSxDQUFDRSxVQUExQixFQUFzQztBQUNyQ0MsTUFBQUEsVUFBVSxFQUFFLGNBRHlCO0FBRXJDQyxNQUFBQSxTQUFTLEVBQUU7QUFGMEIsS0FBdEM7QUFJQWpCLElBQUFBLFFBQVEsQ0FBQ2MsU0FBVCxDQUFtQkQsTUFBTSxDQUFDSyxZQUExQixFQUF3QztBQUN2Q0YsTUFBQUEsVUFBVSxFQUFFLGdCQUQyQjtBQUV2Q0MsTUFBQUEsU0FBUyxFQUFFO0FBRjRCLEtBQXhDO0FBSUFqQixJQUFBQSxRQUFRLENBQUNjLFNBQVQsQ0FBbUJELE1BQU0sQ0FBQ00sU0FBMUIsRUFBcUM7QUFDcENILE1BQUFBLFVBQVUsRUFBRSxhQUR3QjtBQUVwQ0MsTUFBQUEsU0FBUyxFQUFFO0FBRnlCLEtBQXJDO0FBSUEsR0FiRDs7QUFlQSxTQUFPakIsUUFBUDtBQUNBLENBckNEIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xyXG5cdGNvbnN0IHRyYW1pdGVzID0gc2VxdWVsaXplLmRlZmluZSgndHJhbWl0ZXMnLCB7XHJcblx0XHR0cmFtaXRlX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRwcmltYXJ5S2V5OiB0cnVlLFxyXG5cdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0dHJhbWl0ZV9mZWNzYWxpZGE6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdHRyYW1pdGVfZmVjcmVncmVzbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dHJhbWl0ZV9lc3RhZG86IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH1cclxuXHR9LFxyXG5cdHtcclxuXHRcdHRpbWVzdGFtcHM6IGZhbHNlXHJcblx0fSk7XHJcblxyXG5cdHRyYW1pdGVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHRyYW1pdGVzLmJlbG9uZ3NUbyhtb2RlbHMuZG9jdW1lbnRvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnZG9jdW1lbnRvX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnZG9jdW1lbnRvX2lkJ1xyXG5cdFx0fSk7XHJcblx0XHR0cmFtaXRlcy5iZWxvbmdzVG8obW9kZWxzLnRpcG90cmFtaXRlcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAndGlwb3RyYW1pdGVfaWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICd0aXBvdHJhbWl0ZV9pZCdcclxuXHRcdH0pO1xyXG5cdFx0dHJhbWl0ZXMuYmVsb25nc1RvKG1vZGVscy5lbXBsZWFkb3MsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ2VtcGxlYWRvX2lkJyxcclxuXHRcdFx0dGFyZ2V0S2V5OiAnZW1wbGVhZG9faWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0XHJcblx0cmV0dXJuIHRyYW1pdGVzO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Tramite.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "tramites",
        "define",
        "tramite_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "tramite_fecsalida",
        "STRING",
        "tramite_fecregreso",
        "tramite_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "documentos",
        "foreignKey",
        "targetKey",
        "tipotramites",
        "empleados"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC7CC,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADL;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KADiC;AAM7CC,IAAAA,iBAAiB,EAAE;AAClBJ,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADE,KAN0B;AAS7CC,IAAAA,kBAAkB,EAAE;AACnBN,MAAAA,IAAI,EAAEJ,SAAS,CAACS;AADG,KATyB;AAY7CE,IAAAA,cAAc,EAAE;AACfP,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADD;AAZ6B,GAA7B,EAgBjB;AACCO,IAAAA,UAAU,EAAE;AADb,GAhBiB,CAAjB;;AAoBAX,EAAAA,QAAQ,CAACY,SAAT,GAAqB,UAACC,MAAD,EAAY;AAChCb,IAAAA,QAAQ,CAACc,SAAT,CAAmBD,MAAM,CAACE,UAA1B,EAAsC;AACrCC,MAAAA,UAAU,EAAE,cADyB;AAErCC,MAAAA,SAAS,EAAE;AAF0B,KAAtC;AAIAjB,IAAAA,QAAQ,CAACc,SAAT,CAAmBD,MAAM,CAACK,YAA1B,EAAwC;AACvCF,MAAAA,UAAU,EAAE,gBAD2B;AAEvCC,MAAAA,SAAS,EAAE;AAF4B,KAAxC;AAIAjB,IAAAA,QAAQ,CAACc,SAAT,CAAmBD,MAAM,CAACM,SAA1B,EAAqC;AACpCH,MAAAA,UAAU,EAAE,aADwB;AAEpCC,MAAAA,SAAS,EAAE;AAFyB,KAArC;AAIA,GAbD;;AAeA,SAAOjB,QAAP;AACA,CArCD",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst tramites = sequelize.define('tramites', {\r\n\t\ttramite_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\ttramite_fecsalida: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\ttramite_fecregreso: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\ttramite_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n\t});\r\n\r\n\ttramites.associate = (models) => {\r\n\t\ttramites.belongsTo(models.documentos, {\r\n\t\t\tforeignKey: 'documento_id',\r\n\t\t\ttargetKey: 'documento_id'\r\n\t\t});\r\n\t\ttramites.belongsTo(models.tipotramites, {\r\n\t\t\tforeignKey: 'tipotramite_id',\r\n\t\t\ttargetKey: 'tipotramite_id'\r\n\t\t});\r\n\t\ttramites.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn tramites;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547848110815
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\models\\\\Viaje.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\models\\Viaje.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\models\\Viaje.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\models\\Viaje.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\models",
        "sourceFileName": "Viaje.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var viajes = sequelize.define('viajes', {\n    viaje_id: {\n      type: DataTypes.INTEGER,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    carro_id: {\n      type: DataTypes.INTEGER\n    },\n    empleado_id: {\n      type: DataTypes.INTEGER\n    },\n    lugarp_nombre: {\n      type: DataTypes.STRING\n    },\n    lugar_id: {\n      type: DataTypes.INTEGER\n    },\n    cliente_id: {\n      type: DataTypes.INTEGER\n    },\n    cliented_nombre: {\n      type: DataTypes.STRING\n    },\n    viaje_grt: {\n      type: DataTypes.STRING\n    },\n    viaje_detalle: {\n      type: DataTypes.STRING\n    },\n    viaje_fecsalida: {\n      type: DataTypes.STRING\n    },\n    viaje_fecsalida2: {\n      type: DataTypes.DATE\n    },\n    viaje_fecrecibido: {\n      type: DataTypes.STRING\n    },\n    viaje_factura: {\n      type: DataTypes.STRING\n    },\n    viaje_estado: {\n      type: DataTypes.INTEGER\n    }\n  }, {\n    timestamps: false\n  });\n\n  viajes.associate = function (models) {\n    viajes.belongsTo(models.carros, {\n      foreignKey: 'carro_id',\n      targetKey: 'carro_id'\n    });\n    viajes.belongsTo(models.empleados, {\n      foreignKey: 'empleado_id',\n      targetKey: 'empleado_id'\n    });\n    viajes.belongsTo(models.lugares, {\n      foreignKey: 'lugar_id',\n      targetKey: 'lugar_id'\n    });\n    viajes.belongsTo(models.clientes, {\n      foreignKey: 'cliente_id',\n      targetKey: 'cliente_id'\n    });\n  };\n\n  return viajes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpYWplLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJ2aWFqZXMiLCJkZWZpbmUiLCJ2aWFqZV9pZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJjYXJyb19pZCIsImVtcGxlYWRvX2lkIiwibHVnYXJwX25vbWJyZSIsIlNUUklORyIsImx1Z2FyX2lkIiwiY2xpZW50ZV9pZCIsImNsaWVudGVkX25vbWJyZSIsInZpYWplX2dydCIsInZpYWplX2RldGFsbGUiLCJ2aWFqZV9mZWNzYWxpZGEiLCJ2aWFqZV9mZWNzYWxpZGEyIiwiREFURSIsInZpYWplX2ZlY3JlY2liaWRvIiwidmlhamVfZmFjdHVyYSIsInZpYWplX2VzdGFkbyIsInRpbWVzdGFtcHMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJjYXJyb3MiLCJmb3JlaWduS2V5IiwidGFyZ2V0S2V5IiwiZW1wbGVhZG9zIiwibHVnYXJlcyIsImNsaWVudGVzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQzFDLE1BQU1DLE1BQU0sR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFFBQWpCLEVBQTJCO0FBQ3pDQyxJQUFBQSxRQUFRLEVBQUU7QUFDVEMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE9BRFA7QUFFVEMsTUFBQUEsVUFBVSxFQUFFLElBRkg7QUFHVEMsTUFBQUEsYUFBYSxFQUFFO0FBSE4sS0FEK0I7QUFNekNDLElBQUFBLFFBQVEsRUFBRTtBQUNUSixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEUCxLQU4rQjtBQVN6Q0ksSUFBQUEsV0FBVyxFQUFFO0FBQ1pMLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURKLEtBVDRCO0FBWXpDSyxJQUFBQSxhQUFhLEVBQUU7QUFDZE4sTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREYsS0FaMEI7QUFlekNDLElBQUFBLFFBQVEsRUFBRTtBQUNUUixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFEUCxLQWYrQjtBQWtCekNRLElBQUFBLFVBQVUsRUFBRTtBQUNYVCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0s7QUFETCxLQWxCNkI7QUFxQnpDUyxJQUFBQSxlQUFlLEVBQUU7QUFDaEJWLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDVztBQURBLEtBckJ3QjtBQXdCekNJLElBQUFBLFNBQVMsRUFBRTtBQUNWWCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFETixLQXhCOEI7QUEyQnpDSyxJQUFBQSxhQUFhLEVBQUU7QUFDZFosTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREYsS0EzQjBCO0FBOEJ6Q00sSUFBQUEsZUFBZSxFQUFFO0FBQ2hCYixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFEQSxLQTlCd0I7QUFpQ3pDTyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUNqQmQsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNtQjtBQURDLEtBakN1QjtBQW9DekNDLElBQUFBLGlCQUFpQixFQUFFO0FBQ2xCaEIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNXO0FBREUsS0FwQ3NCO0FBdUN6Q1UsSUFBQUEsYUFBYSxFQUFFO0FBQ2RqQixNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1c7QUFERixLQXZDMEI7QUEwQ3pDVyxJQUFBQSxZQUFZLEVBQUU7QUFDYmxCLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSztBQURIO0FBMUMyQixHQUEzQixFQThDZjtBQUNDa0IsSUFBQUEsVUFBVSxFQUFFO0FBRGIsR0E5Q2UsQ0FBZjs7QUFrREF0QixFQUFBQSxNQUFNLENBQUN1QixTQUFQLEdBQW1CLFVBQUNDLE1BQUQsRUFBWTtBQUM5QnhCLElBQUFBLE1BQU0sQ0FBQ3lCLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ0UsTUFBeEIsRUFBZ0M7QUFDL0JDLE1BQUFBLFVBQVUsRUFBRSxVQURtQjtBQUUvQkMsTUFBQUEsU0FBUyxFQUFFO0FBRm9CLEtBQWhDO0FBSUE1QixJQUFBQSxNQUFNLENBQUN5QixTQUFQLENBQWlCRCxNQUFNLENBQUNLLFNBQXhCLEVBQW1DO0FBQ2xDRixNQUFBQSxVQUFVLEVBQUUsYUFEc0I7QUFFbENDLE1BQUFBLFNBQVMsRUFBRTtBQUZ1QixLQUFuQztBQUlBNUIsSUFBQUEsTUFBTSxDQUFDeUIsU0FBUCxDQUFpQkQsTUFBTSxDQUFDTSxPQUF4QixFQUFpQztBQUNoQ0gsTUFBQUEsVUFBVSxFQUFFLFVBRG9CO0FBRWhDQyxNQUFBQSxTQUFTLEVBQUU7QUFGcUIsS0FBakM7QUFJQTVCLElBQUFBLE1BQU0sQ0FBQ3lCLFNBQVAsQ0FBaUJELE1BQU0sQ0FBQ08sUUFBeEIsRUFBa0M7QUFDakNKLE1BQUFBLFVBQVUsRUFBRSxZQURxQjtBQUVqQ0MsTUFBQUEsU0FBUyxFQUFFO0FBRnNCLEtBQWxDO0FBSUEsR0FqQkQ7O0FBbUJBLFNBQU81QixNQUFQO0FBQ0EsQ0F2RUQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcblx0Y29uc3QgdmlhamVzID0gc2VxdWVsaXplLmRlZmluZSgndmlhamVzJywge1xyXG5cdFx0dmlhamVfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXHJcblx0XHRcdHByaW1hcnlLZXk6IHRydWUsXHJcblx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWVcclxuXHRcdH0sXHJcblx0XHRjYXJyb19pZDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUlxyXG5cdFx0fSxcclxuXHRcdGVtcGxlYWRvX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0bHVnYXJwX25vbWJyZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0bHVnYXJfaWQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVJcclxuXHRcdH0sXHJcblx0XHRjbGllbnRlX2lkOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9LFxyXG5cdFx0Y2xpZW50ZWRfbm9tYnJlOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkdcclxuXHRcdH0sXHJcblx0XHR2aWFqZV9ncnQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdHZpYWplX2RldGFsbGU6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdHZpYWplX2ZlY3NhbGlkYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dmlhamVfZmVjc2FsaWRhMjoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURVxyXG5cdFx0fSwgXHJcblx0XHR2aWFqZV9mZWNyZWNpYmlkbzoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dmlhamVfZmFjdHVyYToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HXHJcblx0XHR9LFxyXG5cdFx0dmlhamVfZXN0YWRvOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSXHJcblx0XHR9XHJcblx0fSxcclxuXHR7XHJcblx0XHR0aW1lc3RhbXBzOiBmYWxzZVxyXG4gICB9KTtcclxuXHJcblx0dmlhamVzLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcclxuXHRcdHZpYWplcy5iZWxvbmdzVG8obW9kZWxzLmNhcnJvcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2Fycm9faWQnLFxyXG5cdFx0XHR0YXJnZXRLZXk6ICdjYXJyb19pZCdcclxuXHRcdH0pO1xyXG5cdFx0dmlhamVzLmJlbG9uZ3NUbyhtb2RlbHMuZW1wbGVhZG9zLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdlbXBsZWFkb19pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2VtcGxlYWRvX2lkJ1xyXG5cdFx0fSk7XHJcblx0XHR2aWFqZXMuYmVsb25nc1RvKG1vZGVscy5sdWdhcmVzLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdsdWdhcl9pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2x1Z2FyX2lkJ1xyXG5cdFx0fSk7XHJcblx0XHR2aWFqZXMuYmVsb25nc1RvKG1vZGVscy5jbGllbnRlcywge1xyXG5cdFx0XHRmb3JlaWduS2V5OiAnY2xpZW50ZV9pZCcsXHJcblx0XHRcdHRhcmdldEtleTogJ2NsaWVudGVfaWQnXHJcblx0XHR9KTtcclxuXHR9XHJcblx0IFxyXG5cdHJldHVybiB2aWFqZXM7IFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "Viaje.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "viajes",
        "define",
        "viaje_id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "carro_id",
        "empleado_id",
        "lugarp_nombre",
        "STRING",
        "lugar_id",
        "cliente_id",
        "cliented_nombre",
        "viaje_grt",
        "viaje_detalle",
        "viaje_fecsalida",
        "viaje_fecsalida2",
        "DATE",
        "viaje_fecrecibido",
        "viaje_factura",
        "viaje_estado",
        "timestamps",
        "associate",
        "models",
        "belongsTo",
        "carros",
        "foreignKey",
        "targetKey",
        "empleados",
        "lugares",
        "clientes"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACzCC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,OADP;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAD+B;AAMzCC,IAAAA,QAAQ,EAAE;AACTJ,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAN+B;AASzCI,IAAAA,WAAW,EAAE;AACZL,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADJ,KAT4B;AAYzCK,IAAAA,aAAa,EAAE;AACdN,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAZ0B;AAezCC,IAAAA,QAAQ,EAAE;AACTR,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADP,KAf+B;AAkBzCQ,IAAAA,UAAU,EAAE;AACXT,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADL,KAlB6B;AAqBzCS,IAAAA,eAAe,EAAE;AAChBV,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KArBwB;AAwBzCI,IAAAA,SAAS,EAAE;AACVX,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADN,KAxB8B;AA2BzCK,IAAAA,aAAa,EAAE;AACdZ,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KA3B0B;AA8BzCM,IAAAA,eAAe,EAAE;AAChBb,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADA,KA9BwB;AAiCzCO,IAAAA,gBAAgB,EAAE;AACjBd,MAAAA,IAAI,EAAEJ,SAAS,CAACmB;AADC,KAjCuB;AAoCzCC,IAAAA,iBAAiB,EAAE;AAClBhB,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADE,KApCsB;AAuCzCU,IAAAA,aAAa,EAAE;AACdjB,MAAAA,IAAI,EAAEJ,SAAS,CAACW;AADF,KAvC0B;AA0CzCW,IAAAA,YAAY,EAAE;AACblB,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADH;AA1C2B,GAA3B,EA8Cf;AACCkB,IAAAA,UAAU,EAAE;AADb,GA9Ce,CAAf;;AAkDAtB,EAAAA,MAAM,CAACuB,SAAP,GAAmB,UAACC,MAAD,EAAY;AAC9BxB,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACE,MAAxB,EAAgC;AAC/BC,MAAAA,UAAU,EAAE,UADmB;AAE/BC,MAAAA,SAAS,EAAE;AAFoB,KAAhC;AAIA5B,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACK,SAAxB,EAAmC;AAClCF,MAAAA,UAAU,EAAE,aADsB;AAElCC,MAAAA,SAAS,EAAE;AAFuB,KAAnC;AAIA5B,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACM,OAAxB,EAAiC;AAChCH,MAAAA,UAAU,EAAE,UADoB;AAEhCC,MAAAA,SAAS,EAAE;AAFqB,KAAjC;AAIA5B,IAAAA,MAAM,CAACyB,SAAP,CAAiBD,MAAM,CAACO,QAAxB,EAAkC;AACjCJ,MAAAA,UAAU,EAAE,YADqB;AAEjCC,MAAAA,SAAS,EAAE;AAFsB,KAAlC;AAIA,GAjBD;;AAmBA,SAAO5B,MAAP;AACA,CAvED",
      "sourceRoot": "E:\\dassis\\sis\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\r\n\tconst viajes = sequelize.define('viajes', {\r\n\t\tviaje_id: {\r\n\t\t\ttype: DataTypes.INTEGER,\r\n\t\t\tprimaryKey: true,\r\n\t\t\tautoIncrement: true\r\n\t\t},\r\n\t\tcarro_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\templeado_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tlugarp_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tlugar_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tcliente_id: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t},\r\n\t\tcliented_nombre: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_grt: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_detalle: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_fecsalida: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_fecsalida2: {\r\n\t\t\ttype: DataTypes.DATE\r\n\t\t}, \r\n\t\tviaje_fecrecibido: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_factura: {\r\n\t\t\ttype: DataTypes.STRING\r\n\t\t},\r\n\t\tviaje_estado: {\r\n\t\t\ttype: DataTypes.INTEGER\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: false\r\n   });\r\n\r\n\tviajes.associate = (models) => {\r\n\t\tviajes.belongsTo(models.carros, {\r\n\t\t\tforeignKey: 'carro_id',\r\n\t\t\ttargetKey: 'carro_id'\r\n\t\t});\r\n\t\tviajes.belongsTo(models.empleados, {\r\n\t\t\tforeignKey: 'empleado_id',\r\n\t\t\ttargetKey: 'empleado_id'\r\n\t\t});\r\n\t\tviajes.belongsTo(models.lugares, {\r\n\t\t\tforeignKey: 'lugar_id',\r\n\t\t\ttargetKey: 'lugar_id'\r\n\t\t});\r\n\t\tviajes.belongsTo(models.clientes, {\r\n\t\t\tforeignKey: 'cliente_id',\r\n\t\t\ttargetKey: 'cliente_id'\r\n\t\t});\r\n\t}\r\n\t \r\n\treturn viajes; \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554823422963
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\libs\\\\middlewares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\libs\\middlewares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\libs\\middlewares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\libs\\middlewares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\libs",
        "sourceFileName": "middlewares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.set('port', process.env.port || 3000);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwicG9ydCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUN2QkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBcEM7QUFDQSxDQUZEIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxsaWJzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cdGFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5wb3J0IHx8IDMwMDApOyBcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "middlewares.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "set",
        "process",
        "env",
        "port"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACA,CAFD",
      "sourceRoot": "E:\\dassis\\sis\\src\\libs",
      "sourcesContent": [
        "module.exports = app => {\r\n\tapp.set('port', process.env.port || 3000); \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550073620039
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\carros.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\carros.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\carros.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\carros.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "carros.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Carro = app.db.models.carros; // add carros\n\n  app.get('/carros', function (req, res) {\n    Carro.findAll({\n      where: {\n        carro_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // update carros\n\n  app.put('/carros/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.placa + \"\\n\")\n    if (!req.body.placa) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Carro.update({\n        carro_constancia: req.body.constancia,\n        carro_seriechasis: req.body.seriechasis,\n        carro_categoria: req.body.categoria,\n        carro_modelo: req.body.modelo,\n        carro_placa: req.body.placa,\n        carro_marca: req.body.marca,\n        carro_ejes: req.body.ejes,\n        carro_aniofab: req.body.aniofab,\n        carro_carga: req.body.carga,\n        carro_soatfec: req.body.soatfec,\n        carro_revtecfec: req.body.revtecfec,\n        carro_extinfec: req.body.extinfec\n      }, {\n        where: {\n          carro_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Carro Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcnJvcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiQ2Fycm8iLCJkYiIsIm1vZGVscyIsImNhcnJvcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ3aGVyZSIsImNhcnJvX2VzdGFkbyIsInRoZW4iLCJyZXN1bHQiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsImJvZHkiLCJwdXQiLCJwbGFjYSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJjYXJyb19jb25zdGFuY2lhIiwiY29uc3RhbmNpYSIsImNhcnJvX3NlcmllY2hhc2lzIiwic2VyaWVjaGFzaXMiLCJjYXJyb19jYXRlZ29yaWEiLCJjYXRlZ29yaWEiLCJjYXJyb19tb2RlbG8iLCJtb2RlbG8iLCJjYXJyb19wbGFjYSIsImNhcnJvX21hcmNhIiwibWFyY2EiLCJjYXJyb19lamVzIiwiZWplcyIsImNhcnJvX2FuaW9mYWIiLCJhbmlvZmFiIiwiY2Fycm9fY2FyZ2EiLCJjYXJnYSIsImNhcnJvX3NvYXRmZWMiLCJzb2F0ZmVjIiwiY2Fycm9fcmV2dGVjZmVjIiwicmV2dGVjZmVjIiwiY2Fycm9fZXh0aW5mZWMiLCJleHRpbmZlYyIsImNhcnJvX2lkIiwicGFyYW1zIiwiaWQiLCJzZW5kIiwiZXJyIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLEtBQUssR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsTUFBNUIsQ0FEc0IsQ0FHdEI7O0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFNBQVIsRUFBbUIsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDL0JOLElBQUFBLEtBQUssQ0FBQ08sT0FBTixDQUFjO0FBQUNDLE1BQUFBLEtBQUssRUFBRTtBQUFDQyxRQUFBQSxZQUFZLEVBQUU7QUFBZjtBQUFSLEtBQWQsRUFDQ0MsSUFERCxDQUNNLFVBQUFDLE1BQU07QUFBQSxhQUFJTCxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVCxDQUFKO0FBQUEsS0FEWixFQUVDRSxLQUZELENBRU8sVUFBQUMsS0FBSyxFQUFJO0FBQUVSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCUCxHQUFHLENBQUNXLElBQXpCO0FBQWdDLEtBRmxEO0FBR0EsR0FKRCxFQUpzQixDQVV0Qjs7QUFDQWpCLEVBQUFBLEdBQUcsQ0FBQ2tCLEdBQUosQ0FBUSxhQUFSLEVBQXVCLFVBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2xDO0FBQ0EsUUFBRyxDQUFDRCxHQUFHLENBQUNXLElBQUosQ0FBU0UsS0FBYixFQUNBO0FBQ0NaLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVg7QUFDQUksTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUNBZCxNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDVyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NoQixNQUFBQSxLQUFLLENBQUNxQixNQUFOLENBQ0M7QUFBRUMsUUFBQUEsZ0JBQWdCLEVBQUVqQixHQUFHLENBQUNXLElBQUosQ0FBU08sVUFBN0I7QUFBeUNDLFFBQUFBLGlCQUFpQixFQUFFbkIsR0FBRyxDQUFDVyxJQUFKLENBQVNTLFdBQXJFO0FBQWtGQyxRQUFBQSxlQUFlLEVBQUVyQixHQUFHLENBQUNXLElBQUosQ0FBU1csU0FBNUc7QUFBdUhDLFFBQUFBLFlBQVksRUFBRXZCLEdBQUcsQ0FBQ1csSUFBSixDQUFTYSxNQUE5STtBQUFzSkMsUUFBQUEsV0FBVyxFQUFFekIsR0FBRyxDQUFDVyxJQUFKLENBQVNFLEtBQTVLO0FBQW1MYSxRQUFBQSxXQUFXLEVBQUUxQixHQUFHLENBQUNXLElBQUosQ0FBU2dCLEtBQXpNO0FBQWdOQyxRQUFBQSxVQUFVLEVBQUU1QixHQUFHLENBQUNXLElBQUosQ0FBU2tCLElBQXJPO0FBQTJPQyxRQUFBQSxhQUFhLEVBQUU5QixHQUFHLENBQUNXLElBQUosQ0FBU29CLE9BQW5RO0FBQTRRQyxRQUFBQSxXQUFXLEVBQUVoQyxHQUFHLENBQUNXLElBQUosQ0FBU3NCLEtBQWxTO0FBQXlTQyxRQUFBQSxhQUFhLEVBQUVsQyxHQUFHLENBQUNXLElBQUosQ0FBU3dCLE9BQWpVO0FBQTBVQyxRQUFBQSxlQUFlLEVBQUVwQyxHQUFHLENBQUNXLElBQUosQ0FBUzBCLFNBQXBXO0FBQStXQyxRQUFBQSxjQUFjLEVBQUV0QyxHQUFHLENBQUNXLElBQUosQ0FBUzRCO0FBQXhZLE9BREQsRUFDcVo7QUFBRXBDLFFBQUFBLEtBQUssRUFBRTtBQUFDcUMsVUFBQUEsUUFBUSxFQUFFeEMsR0FBRyxDQUFDeUMsTUFBSixDQUFXQztBQUF0QjtBQUFULE9BRHJaLEVBR0NyQyxJQUhELENBR00sWUFBSTtBQUNUSixRQUFBQSxHQUFHLENBQUMwQyxJQUFKLENBQVMsa0JBQVQ7QUFDQSxPQUxELEVBTUNsQyxLQU5ELENBTU8sVUFBQW1DLEdBQUcsRUFBSTtBQUNiM0MsUUFBQUEsR0FBRyxDQUFDMEMsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FSRDtBQVNBO0FBQ0QsR0FwQkQ7QUFxQkEsQ0FoQ0QiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IENhcnJvID0gYXBwLmRiLm1vZGVscy5jYXJyb3M7XHJcblxyXG5cdC8vIGFkZCBjYXJyb3NcclxuXHRhcHAuZ2V0KCcvY2Fycm9zJywgKHJlcSxyZXMpID0+IHtcclxuXHRcdENhcnJvLmZpbmRBbGwoe3doZXJlOiB7Y2Fycm9fZXN0YWRvOiAxfX0pXHJcblx0XHQudGhlbihyZXN1bHQgPT4gcmVzLmpzb24ocmVzdWx0KSlcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7IHJlcy5zdGF0dXMoNDEyKS5qc29uKHJlcS5ib2R5KSB9KSBcclxuXHR9KTtcclxuXHJcblx0Ly8gdXBkYXRlIGNhcnJvc1xyXG5cdGFwcC5wdXQoJy9jYXJyb3MvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0Ly8gY29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LnBsYWNhICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5wbGFjYSlcclxuXHRcdHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0XHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUFVUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRDYXJyby51cGRhdGUoXHJcblx0XHRcdFx0eyBjYXJyb19jb25zdGFuY2lhOiByZXEuYm9keS5jb25zdGFuY2lhLCBjYXJyb19zZXJpZWNoYXNpczogcmVxLmJvZHkuc2VyaWVjaGFzaXMsIGNhcnJvX2NhdGVnb3JpYTogcmVxLmJvZHkuY2F0ZWdvcmlhLCBjYXJyb19tb2RlbG86IHJlcS5ib2R5Lm1vZGVsbywgY2Fycm9fcGxhY2E6IHJlcS5ib2R5LnBsYWNhLCBjYXJyb19tYXJjYTogcmVxLmJvZHkubWFyY2EsIGNhcnJvX2VqZXM6IHJlcS5ib2R5LmVqZXMsIGNhcnJvX2FuaW9mYWI6IHJlcS5ib2R5LmFuaW9mYWIsIGNhcnJvX2NhcmdhOiByZXEuYm9keS5jYXJnYSwgY2Fycm9fc29hdGZlYzogcmVxLmJvZHkuc29hdGZlYywgY2Fycm9fcmV2dGVjZmVjOiByZXEuYm9keS5yZXZ0ZWNmZWMsIGNhcnJvX2V4dGluZmVjOiByZXEuYm9keS5leHRpbmZlYyB9LCB7IHdoZXJlOiB7Y2Fycm9faWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHRcdFx0KVxyXG5cdFx0XHQudGhlbigoKT0+e1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdDYXJybyBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "carros.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Carro",
        "db",
        "models",
        "carros",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "carro_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "put",
        "placa",
        "console",
        "log",
        "update",
        "carro_constancia",
        "constancia",
        "carro_seriechasis",
        "seriechasis",
        "carro_categoria",
        "categoria",
        "carro_modelo",
        "modelo",
        "carro_placa",
        "carro_marca",
        "marca",
        "carro_ejes",
        "ejes",
        "carro_aniofab",
        "aniofab",
        "carro_carga",
        "carga",
        "carro_soatfec",
        "soatfec",
        "carro_revtecfec",
        "revtecfec",
        "carro_extinfec",
        "extinfec",
        "carro_id",
        "params",
        "id",
        "send",
        "err"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B,CADsB,CAGtB;;AACAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC/BN,IAAAA,KAAK,CAACO,OAAN,CAAc;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAAR,KAAd,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AAAER,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBP,GAAG,CAACW,IAAzB;AAAgC,KAFlD;AAGA,GAJD,EAJsB,CAUtB;;AACAjB,EAAAA,GAAG,CAACkB,GAAJ,CAAQ,aAAR,EAAuB,UAACZ,GAAD,EAAMC,GAAN,EAAY;AAClC;AACA,QAAG,CAACD,GAAG,CAACW,IAAJ,CAASE,KAAb,EACA;AACCZ,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAd,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACW,IAAb;AACA,KALD,MAOA;AACChB,MAAAA,KAAK,CAACqB,MAAN,CACC;AAAEC,QAAAA,gBAAgB,EAAEjB,GAAG,CAACW,IAAJ,CAASO,UAA7B;AAAyCC,QAAAA,iBAAiB,EAAEnB,GAAG,CAACW,IAAJ,CAASS,WAArE;AAAkFC,QAAAA,eAAe,EAAErB,GAAG,CAACW,IAAJ,CAASW,SAA5G;AAAuHC,QAAAA,YAAY,EAAEvB,GAAG,CAACW,IAAJ,CAASa,MAA9I;AAAsJC,QAAAA,WAAW,EAAEzB,GAAG,CAACW,IAAJ,CAASE,KAA5K;AAAmLa,QAAAA,WAAW,EAAE1B,GAAG,CAACW,IAAJ,CAASgB,KAAzM;AAAgNC,QAAAA,UAAU,EAAE5B,GAAG,CAACW,IAAJ,CAASkB,IAArO;AAA2OC,QAAAA,aAAa,EAAE9B,GAAG,CAACW,IAAJ,CAASoB,OAAnQ;AAA4QC,QAAAA,WAAW,EAAEhC,GAAG,CAACW,IAAJ,CAASsB,KAAlS;AAAySC,QAAAA,aAAa,EAAElC,GAAG,CAACW,IAAJ,CAASwB,OAAjU;AAA0UC,QAAAA,eAAe,EAAEpC,GAAG,CAACW,IAAJ,CAAS0B,SAApW;AAA+WC,QAAAA,cAAc,EAAEtC,GAAG,CAACW,IAAJ,CAAS4B;AAAxY,OADD,EACqZ;AAAEpC,QAAAA,KAAK,EAAE;AAACqC,UAAAA,QAAQ,EAAExC,GAAG,CAACyC,MAAJ,CAAWC;AAAtB;AAAT,OADrZ,EAGCrC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAAC0C,IAAJ,CAAS,kBAAT;AACA,OALD,EAMClC,KAND,CAMO,UAAAmC,GAAG,EAAI;AACb3C,QAAAA,GAAG,CAAC0C,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAhCD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Carro = app.db.models.carros;\r\n\r\n\t// add carros\r\n\tapp.get('/carros', (req,res) => {\r\n\t\tCarro.findAll({where: {carro_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// update carros\r\n\tapp.put('/carros/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.placa + \"\\n\")\r\n\t\tif(!req.body.placa)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCarro.update(\r\n\t\t\t\t{ carro_constancia: req.body.constancia, carro_seriechasis: req.body.seriechasis, carro_categoria: req.body.categoria, carro_modelo: req.body.modelo, carro_placa: req.body.placa, carro_marca: req.body.marca, carro_ejes: req.body.ejes, carro_aniofab: req.body.aniofab, carro_carga: req.body.carga, carro_soatfec: req.body.soatfec, carro_revtecfec: req.body.revtecfec, carro_extinfec: req.body.extinfec }, { where: {carro_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Carro Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557182266264
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\clientes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\clientes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\clientes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\clientes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "clientes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Cliente = app.db.models.clientes; // get cliente\n\n  app.get('/clientes', function (req, res) {\n    Cliente.findAll({\n      where: {\n        cliente_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add cliente\n\n  app.post('/clientes', function (req, res) {\n    // console.log(\"======>> \" + req.body.cliente_dniruc + \"\\n\");\n    if (!req.body.cliente_dniruc) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Cliente.create(req.body).then(function () {\n        res.send('Cliente Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // actualiza empleado \n\n  app.put('/clientes/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.dniruc + \"\\n\");\n\n    if (!req.body.dniruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Cliente.update({\n        cliente_nombre: req.body.nombre,\n        cliente_apepat: req.body.apepat,\n        cliente_apemat: req.body.apemat,\n        cliente_dniruc: req.body.dniruc,\n        cliente_fecing: req.body.fecing,\n        cliente_direccion: req.body.direccion,\n        cliente_telefono: req.body.telefono,\n        cliente_email: req.body.email,\n        cliente_nacion: req.body.nacion\n      }, {\n        where: {\n          cliente_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Cliente Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudGVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJDbGllbnRlIiwiZGIiLCJtb2RlbHMiLCJjbGllbnRlcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ3aGVyZSIsImNsaWVudGVfZXN0YWRvIiwidGhlbiIsInJlc3VsdCIsImpzb24iLCJjYXRjaCIsImVycm9yIiwic3RhdHVzIiwibXNnIiwibWVzc2FnZSIsInBvc3QiLCJib2R5IiwiY2xpZW50ZV9kbmlydWMiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsImRuaXJ1YyIsInVwZGF0ZSIsImNsaWVudGVfbm9tYnJlIiwibm9tYnJlIiwiY2xpZW50ZV9hcGVwYXQiLCJhcGVwYXQiLCJjbGllbnRlX2FwZW1hdCIsImFwZW1hdCIsImNsaWVudGVfZmVjaW5nIiwiZmVjaW5nIiwiY2xpZW50ZV9kaXJlY2Npb24iLCJkaXJlY2Npb24iLCJjbGllbnRlX3RlbGVmb25vIiwidGVsZWZvbm8iLCJjbGllbnRlX2VtYWlsIiwiZW1haWwiLCJjbGllbnRlX25hY2lvbiIsIm5hY2lvbiIsImNsaWVudGVfaWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxPQUFPLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLFFBQTlCLENBRHNCLENBR3RCOztBQUNBSixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSxXQUFSLEVBQXFCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQ2pDTixJQUFBQSxPQUFPLENBQUNPLE9BQVIsQ0FBZ0I7QUFBRUMsTUFBQUEsS0FBSyxFQUFFO0FBQUNDLFFBQUFBLGNBQWMsRUFBRTtBQUFqQjtBQUFULEtBQWhCLEVBQ0NDLElBREQsQ0FDTSxVQUFBQyxNQUFNO0FBQUEsYUFBSUwsR0FBRyxDQUFDTSxJQUFKLENBQVNELE1BQVQsQ0FBSjtBQUFBLEtBRFosRUFFQ0UsS0FGRCxDQUVPLFVBQUFDLEtBQUssRUFBSTtBQUNmUixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFDSSxRQUFBQSxHQUFHLEVBQUVGLEtBQUssQ0FBQ0c7QUFBWixPQUFyQjtBQUNBLEtBSkQ7QUFLQSxHQU5ELEVBSnNCLENBWXRCOztBQUNBbEIsRUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ2IsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDakM7QUFDQSxRQUFHLENBQUNELEdBQUcsQ0FBQ2MsSUFBSixDQUFTQyxjQUFiLEVBQ0E7QUFDQ2QsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWDtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FoQixNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDYyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NuQixNQUFBQSxPQUFPLENBQUN1QixNQUFSLENBQWVsQixHQUFHLENBQUNjLElBQW5CLEVBQ0NULElBREQsQ0FDTyxZQUFNO0FBQ1pKLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxrQkFBVDtBQUNBLE9BSEQsRUFJQ1gsS0FKRCxDQUlPLFVBQUFZLEdBQUcsRUFBSTtBQUNibkIsUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUFic0IsQ0FpQ3RCOztBQUNBMUIsRUFBQUEsR0FBRyxDQUFDMkIsR0FBSixDQUFRLGVBQVIsRUFBeUIsVUFBQ3JCLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3BDZSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFjakIsR0FBRyxDQUFDYyxJQUFKLENBQVNRLE1BQXZCLEdBQWdDLElBQTVDOztBQUNBLFFBQUcsQ0FBQ3RCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxNQUFiLEVBQ0E7QUFDQ3JCLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVg7QUFDQU0sTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUNBaEIsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNQLEdBQUcsQ0FBQ2MsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDbkIsTUFBQUEsT0FBTyxDQUFDNEIsTUFBUixDQUNDO0FBQUVDLFFBQUFBLGNBQWMsRUFBRXhCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTVyxNQUEzQjtBQUFtQ0MsUUFBQUEsY0FBYyxFQUFFMUIsR0FBRyxDQUFDYyxJQUFKLENBQVNhLE1BQTVEO0FBQW9FQyxRQUFBQSxjQUFjLEVBQUU1QixHQUFHLENBQUNjLElBQUosQ0FBU2UsTUFBN0Y7QUFBcUdkLFFBQUFBLGNBQWMsRUFBRWYsR0FBRyxDQUFDYyxJQUFKLENBQVNRLE1BQTlIO0FBQXNJUSxRQUFBQSxjQUFjLEVBQUU5QixHQUFHLENBQUNjLElBQUosQ0FBU2lCLE1BQS9KO0FBQXVLQyxRQUFBQSxpQkFBaUIsRUFBRWhDLEdBQUcsQ0FBQ2MsSUFBSixDQUFTbUIsU0FBbk07QUFBOE1DLFFBQUFBLGdCQUFnQixFQUFFbEMsR0FBRyxDQUFDYyxJQUFKLENBQVNxQixRQUF6TztBQUFtUEMsUUFBQUEsYUFBYSxFQUFFcEMsR0FBRyxDQUFDYyxJQUFKLENBQVN1QixLQUEzUTtBQUFrUkMsUUFBQUEsY0FBYyxFQUFFdEMsR0FBRyxDQUFDYyxJQUFKLENBQVN5QjtBQUEzUyxPQURELEVBQ3NUO0FBQUVwQyxRQUFBQSxLQUFLLEVBQUU7QUFBQ3FDLFVBQUFBLFVBQVUsRUFBRXhDLEdBQUcsQ0FBQ3lDLE1BQUosQ0FBV0M7QUFBeEI7QUFBVCxPQUR0VCxFQUdDckMsSUFIRCxDQUdNLFlBQUk7QUFDVEosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLG9CQUFUO0FBQ0EsT0FMRCxFQU1DVixLQU5ELENBTU8sVUFBQVcsR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQVJEO0FBU0E7QUFDRCxHQXBCRDtBQXFCQSxDQXZERCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgQ2xpZW50ZSA9IGFwcC5kYi5tb2RlbHMuY2xpZW50ZXM7XHJcblxyXG5cdC8vIGdldCBjbGllbnRlXHJcblx0YXBwLmdldCgnL2NsaWVudGVzJywgKHJlcSxyZXMpID0+IHtcclxuXHRcdENsaWVudGUuZmluZEFsbCh7IHdoZXJlOiB7Y2xpZW50ZV9lc3RhZG86IDF9IH0pXHJcblx0XHQudGhlbihyZXN1bHQgPT4gcmVzLmpzb24ocmVzdWx0KSlcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIGNsaWVudGVcclxuXHRhcHAucG9zdCgnL2NsaWVudGVzJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0Ly8gY29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LmNsaWVudGVfZG5pcnVjICsgXCJcXG5cIik7XHJcblx0XHRpZighcmVxLmJvZHkuY2xpZW50ZV9kbmlydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdENsaWVudGUuY3JlYXRlKHJlcS5ib2R5KVxyXG5cdFx0XHQudGhlbiggKCkgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdDbGllbnRlIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gYWN0dWFsaXphIGVtcGxlYWRvIFxyXG5cdGFwcC5wdXQoJy9jbGllbnRlcy86aWQnLCAocmVxLCByZXMpPT57XHJcblx0XHRjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZG5pcnVjICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5kbmlydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBVVFwiKVxyXG5cdFx0XHRyZXMuanNvbihyZXEuYm9keSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0Q2xpZW50ZS51cGRhdGUoXHJcblx0XHRcdFx0eyBjbGllbnRlX25vbWJyZTogcmVxLmJvZHkubm9tYnJlLCBjbGllbnRlX2FwZXBhdDogcmVxLmJvZHkuYXBlcGF0LCBjbGllbnRlX2FwZW1hdDogcmVxLmJvZHkuYXBlbWF0LCBjbGllbnRlX2RuaXJ1YzogcmVxLmJvZHkuZG5pcnVjLCBjbGllbnRlX2ZlY2luZzogcmVxLmJvZHkuZmVjaW5nLCBjbGllbnRlX2RpcmVjY2lvbjogcmVxLmJvZHkuZGlyZWNjaW9uLCBjbGllbnRlX3RlbGVmb25vOiByZXEuYm9keS50ZWxlZm9ubywgY2xpZW50ZV9lbWFpbDogcmVxLmJvZHkuZW1haWwsIGNsaWVudGVfbmFjaW9uOiByZXEuYm9keS5uYWNpb24gfSwgeyB3aGVyZToge2NsaWVudGVfaWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHRcdFx0KVxyXG5cdFx0XHQudGhlbigoKT0+e1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdDbGllbnRlIE1vZGlmaWNhZG8nKTtcclxuXHRcdFx0fSlcclxuXHRcdFx0LmVycm9yKGVyciA9PiB7XHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKTtcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxufVxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "clientes.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Cliente",
        "db",
        "models",
        "clientes",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "cliente_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "cliente_dniruc",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "dniruc",
        "update",
        "cliente_nombre",
        "nombre",
        "cliente_apepat",
        "apepat",
        "cliente_apemat",
        "apemat",
        "cliente_fecing",
        "fecing",
        "cliente_direccion",
        "direccion",
        "cliente_telefono",
        "telefono",
        "cliente_email",
        "email",
        "cliente_nacion",
        "nacion",
        "cliente_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,OAAO,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,QAA9B,CADsB,CAGtB;;AACAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACjCN,IAAAA,OAAO,CAACO,OAAR,CAAgB;AAAEC,MAAAA,KAAK,EAAE;AAACC,QAAAA,cAAc,EAAE;AAAjB;AAAT,KAAhB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAJsB,CAYtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,WAAT,EAAsB,UAACb,GAAD,EAAMC,GAAN,EAAY;AACjC;AACA,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,cAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,OAAO,CAACuB,MAAR,CAAelB,GAAG,CAACc,IAAnB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,kBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAbsB,CAiCtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,eAAR,EAAyB,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACpCe,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcjB,GAAG,CAACc,IAAJ,CAASQ,MAAvB,GAAgC,IAA5C;;AACA,QAAG,CAACtB,GAAG,CAACc,IAAJ,CAASQ,MAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,OAAO,CAAC4B,MAAR,CACC;AAAEC,QAAAA,cAAc,EAAExB,GAAG,CAACc,IAAJ,CAASW,MAA3B;AAAmCC,QAAAA,cAAc,EAAE1B,GAAG,CAACc,IAAJ,CAASa,MAA5D;AAAoEC,QAAAA,cAAc,EAAE5B,GAAG,CAACc,IAAJ,CAASe,MAA7F;AAAqGd,QAAAA,cAAc,EAAEf,GAAG,CAACc,IAAJ,CAASQ,MAA9H;AAAsIQ,QAAAA,cAAc,EAAE9B,GAAG,CAACc,IAAJ,CAASiB,MAA/J;AAAuKC,QAAAA,iBAAiB,EAAEhC,GAAG,CAACc,IAAJ,CAASmB,SAAnM;AAA8MC,QAAAA,gBAAgB,EAAElC,GAAG,CAACc,IAAJ,CAASqB,QAAzO;AAAmPC,QAAAA,aAAa,EAAEpC,GAAG,CAACc,IAAJ,CAASuB,KAA3Q;AAAkRC,QAAAA,cAAc,EAAEtC,GAAG,CAACc,IAAJ,CAASyB;AAA3S,OADD,EACsT;AAAEpC,QAAAA,KAAK,EAAE;AAACqC,UAAAA,UAAU,EAAExC,GAAG,CAACyC,MAAJ,CAAWC;AAAxB;AAAT,OADtT,EAGCrC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,oBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAvDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Cliente = app.db.models.clientes;\r\n\r\n\t// get cliente\r\n\tapp.get('/clientes', (req,res) => {\r\n\t\tCliente.findAll({ where: {cliente_estado: 1} })\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => {\r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add cliente\r\n\tapp.post('/clientes', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.cliente_dniruc + \"\\n\");\r\n\t\tif(!req.body.cliente_dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCliente.create(req.body)\r\n\t\t\t.then( () => {\r\n\t\t\t\tres.send('Cliente Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// actualiza empleado \r\n\tapp.put('/clientes/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.dniruc + \"\\n\")\r\n\t\tif(!req.body.dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tCliente.update(\r\n\t\t\t\t{ cliente_nombre: req.body.nombre, cliente_apepat: req.body.apepat, cliente_apemat: req.body.apemat, cliente_dniruc: req.body.dniruc, cliente_fecing: req.body.fecing, cliente_direccion: req.body.direccion, cliente_telefono: req.body.telefono, cliente_email: req.body.email, cliente_nacion: req.body.nacion }, { where: {cliente_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Cliente Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554152233290
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\documentos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\documentos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\documentos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\documentos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "documentos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Documento = app.db.models.documentos;\n  var Cliente = app.db.models.clientes;\n  var Proveedor = app.db.models.proveedores;\n  var Tipodocumento = app.db.models.tipodocumentos; // get documento\n\n  app.get('/documentos', function (req, res) {\n    Cliente.findAll({\n      attributes: ['cliente_id', 'cliente_nombre']\n    }).then(function (result) {\n      return Proveedor.findAll({\n        attributes: ['proveedor_id', 'proveedor_nombre']\n      }).then(function (result2) {\n        return Tipodocumento.findAll({\n          attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n        }).then(function (result3) {\n          return Documento.findAll({\n            attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_contenido', 'documento_feccan'],\n            include: [{\n              model: Cliente,\n              attributes: ['cliente_id', 'cliente_nombre']\n            }, {\n              model: Proveedor,\n              attributes: ['proveedor_id', 'proveedor_nombre']\n            }, {\n              model: Tipodocumento,\n              attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n            }]\n          }).then(function (result4) {\n            return res.json([result, result2, result3, result4]);\n          });\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add documento\n\n  app.post('/documentos', function (req, res) {\n    console.log(\"======>> \" + req.body.documento_nro + \"\\n\");\n\n    if (!req.body.documento_nro) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Documento.create(req.body).then(function () {\n        res.send('Documento Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update documento\n\n  app.put('/documentos/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.nro + \"\\n\");\n\n    if (!req.body.nro) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Documento.update({\n        tipodocumento_id: req.body.tipodoc,\n        documento_tipoclipro: req.body.tipoclipro,\n        cliente_id: req.body.tipoC,\n        proveedor_id: req.body.tipoP,\n        documento_nro: req.body.nro,\n        documento_feccrea: req.body.feccrea,\n        documento_pago: req.body.pago,\n        documento_pagoTotal: req.body.pagoTotal,\n        documento_detalle: req.body.detalle,\n        documento_feccan: req.body.feccan\n      }, {\n        where: {\n          documento_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Documento Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "documentos.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Documento",
        "db",
        "models",
        "documentos",
        "Cliente",
        "clientes",
        "Proveedor",
        "proveedores",
        "Tipodocumento",
        "tipodocumentos",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "then",
        "result",
        "result2",
        "result3",
        "include",
        "model",
        "result4",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "console",
        "log",
        "body",
        "documento_nro",
        "create",
        "send",
        "err",
        "put",
        "nro",
        "update",
        "tipodocumento_id",
        "tipodoc",
        "documento_tipoclipro",
        "tipoclipro",
        "cliente_id",
        "tipoC",
        "proveedor_id",
        "tipoP",
        "documento_feccrea",
        "feccrea",
        "documento_pago",
        "pago",
        "documento_pagoTotal",
        "pagoTotal",
        "documento_detalle",
        "detalle",
        "documento_feccan",
        "feccan",
        "where",
        "documento_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,SAAS,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,UAAhC;AACA,MAAMC,OAAO,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,QAA9B;AACA,MAAMC,SAAS,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,WAAhC;AACA,MAAMC,aAAa,GAAGT,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcO,cAApC,CAJsB,CAMtB;;AACAV,EAAAA,GAAG,CAACW,GAAJ,CAAQ,aAAR,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpCR,IAAAA,OAAO,CAACS,OAAR,CAAgB;AAAEC,MAAAA,UAAU,EAAE,CAAC,YAAD,EAAc,gBAAd;AAAd,KAAhB,EACCC,IADD,CAEC,UAAAC,MAAM;AAAA,aAAIV,SAAS,CAACO,OAAV,CAAkB;AAAEC,QAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAAd,OAAlB,EACRC,IADQ,CAER,UAAAE,OAAO;AAAA,eAAIT,aAAa,CAACK,OAAd,CAAsB;AAAEC,UAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAd,SAAtB,EACTC,IADS,CAET,UAAAG,OAAO;AAAA,iBAAIlB,SAAS,CAACa,OAAV,CAAkB;AAAEC,YAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,sBAArC,EAA6D,YAA7D,EAA2E,cAA3E,EAA2F,eAA3F,EAA4G,mBAA5G,EAAiI,gBAAjI,EAAmJ,qBAAnJ,EAA0K,qBAA1K,EAAiM,kBAAjM,CAAd;AAAoOK,YAAAA,OAAO,EAAE,CAAC;AAACC,cAAAA,KAAK,EAAEhB,OAAR;AAAiBU,cAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAA7B,aAAD,EAAiE;AAACM,cAAAA,KAAK,EAAEd,SAAR;AAAmBQ,cAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAA/B,aAAjE,EAAuI;AAACM,cAAAA,KAAK,EAAEZ,aAAR;AAAuBM,cAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAnC,aAAvI;AAA7O,WAAlB,EACVC,IADU,CACJ,UAAAM,OAAO;AAAA,mBAAIT,GAAG,CAACU,IAAJ,CAAS,CAACN,MAAD,EAASC,OAAT,EAAkBC,OAAlB,EAA2BG,OAA3B,CAAT,CAAJ;AAAA,WADH,CAAJ;AAAA,SAFE,CAAJ;AAAA,OAFC,CAAJ;AAAA,KAFP,EAWCE,KAXD,CAWO,UAAAC,KAAK,EAAI;AAAEZ,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AAA4C,KAX9D;AAYA,GAbD,EAPsB,CAsBtB;;AACA5B,EAAAA,GAAG,CAAC6B,IAAJ,CAAS,aAAT,EAAwB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AACjCiB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcnB,GAAG,CAACoB,IAAJ,CAASC,aAAvB,GAAuC,IAAnD;;AACJ,QAAG,CAACrB,GAAG,CAACoB,IAAJ,CAASC,aAAb,EACA;AACCpB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAlB,MAAAA,GAAG,CAACU,IAAJ,CAASX,GAAG,CAACoB,IAAb;AACA,KALD,MAOA;AACC/B,MAAAA,SAAS,CAACiC,MAAV,CAAiBtB,GAAG,CAACoB,IAArB,EACChB,IADD,CACO,YAAM;AACZH,QAAAA,GAAG,CAACsB,IAAJ,CAAS,oBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAvBsB,CA2CtB;;AACApC,EAAAA,GAAG,CAACqC,GAAJ,CAAQ,iBAAR,EAA2B,UAACzB,GAAD,EAAMC,GAAN,EAAY;AACtCiB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcnB,GAAG,CAACoB,IAAJ,CAASM,GAAvB,GAA6B,IAAzC;;AACA,QAAG,CAAC1B,GAAG,CAACoB,IAAJ,CAASM,GAAb,EACA;AACCzB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAlB,MAAAA,GAAG,CAACU,IAAJ,CAASX,GAAG,CAACoB,IAAb;AACA,KALD,MAOA;AACC/B,MAAAA,SAAS,CAACsC,MAAV,CACC;AAAEC,QAAAA,gBAAgB,EAAE5B,GAAG,CAACoB,IAAJ,CAASS,OAA7B;AAAsCC,QAAAA,oBAAoB,EAAE9B,GAAG,CAACoB,IAAJ,CAASW,UAArE;AAAiFC,QAAAA,UAAU,EAAEhC,GAAG,CAACoB,IAAJ,CAASa,KAAtG;AAA6GC,QAAAA,YAAY,EAAElC,GAAG,CAACoB,IAAJ,CAASe,KAApI;AAA2Id,QAAAA,aAAa,EAAErB,GAAG,CAACoB,IAAJ,CAASM,GAAnK;AAAwKU,QAAAA,iBAAiB,EAAEpC,GAAG,CAACoB,IAAJ,CAASiB,OAApM;AAA6MC,QAAAA,cAAc,EAAEtC,GAAG,CAACoB,IAAJ,CAASmB,IAAtO;AAA4OC,QAAAA,mBAAmB,EAAExC,GAAG,CAACoB,IAAJ,CAASqB,SAA1Q;AAAqRC,QAAAA,iBAAiB,EAAE1C,GAAG,CAACoB,IAAJ,CAASuB,OAAjT;AAA0TC,QAAAA,gBAAgB,EAAE5C,GAAG,CAACoB,IAAJ,CAASyB;AAArV,OADD,EACgW;AAAEC,QAAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE/C,GAAG,CAACgD,MAAJ,CAAWC;AAA1B;AAAT,OADhW,EAGC7C,IAHD,CAGM,YAAI;AACTH,QAAAA,GAAG,CAACsB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAjED",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Documento = app.db.models.documentos;\r\n\tconst Cliente = app.db.models.clientes;\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\tconst Tipodocumento = app.db.models.tipodocumentos;\r\n\r\n\t// get documento\r\n\tapp.get('/documentos', (req, res) => {\r\n\t\tCliente.findAll({ attributes: ['cliente_id','cliente_nombre'] })\r\n\t\t.then( \r\n\t\t\tresult => Proveedor.findAll({ attributes: ['proveedor_id', 'proveedor_nombre'] })\r\n\t\t\t\t.then( \r\n\t\t\t\t\tresult2 => Tipodocumento.findAll({ attributes: ['tipodocumento_id', 'tipodocumento_nombre'] })\r\n\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\tresult3 => Documento.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_contenido', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n\t\t\t\t\t\t\t.then( result4 => res.json([result, result2, result3, result4]) )\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json({msg: error.message}) }) \r\n\t});\r\n\r\n\t// add documento\r\n\tapp.post('/documentos', (req, res) => {\r\n      console.log(\"======>> \" + req.body.documento_nro + \"\\n\")\r\n\t\tif(!req.body.documento_nro)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tDocumento.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Documento Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update documento\r\n\tapp.put('/documentos/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.nro + \"\\n\")\r\n\t\tif(!req.body.nro)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tDocumento.update(\r\n\t\t\t\t{ tipodocumento_id: req.body.tipodoc, documento_tipoclipro: req.body.tipoclipro, cliente_id: req.body.tipoC, proveedor_id: req.body.tipoP, documento_nro: req.body.nro, documento_feccrea: req.body.feccrea, documento_pago: req.body.pago, documento_pagoTotal: req.body.pagoTotal, documento_detalle: req.body.detalle, documento_feccan: req.body.feccan }, { where: {documento_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Documento Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550416493009
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\efectivoviajes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\efectivoviajes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\efectivoviajes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\efectivoviajes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "efectivoviajes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Carro = app.db.models.carros;\n  var Empleado = app.db.models.empleados;\n  var Efectivoviaje = app.db.models.efectivoviajes; // get efectivoviaje\n\n  app.get('/efectivoviajes', function (req, res) {\n    Carro.findAll({\n      attributes: ['carro_id', 'carro_placa']\n    }).then(function (result1) {\n      return Empleado.findAll({\n        attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n      }).then(function (result2) {\n        return Efectivoviaje.findAll({\n          attributes: ['efectivoviaje_id', 'efectivoviaje_fecha', 'carro_id', 'empleado_id', 'efectivoviaje_monto', 'efectivoviaje_tipo'],\n          include: [{\n            model: Empleado,\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n          }, {\n            model: Carro,\n            attributes: ['carro_id', 'carro_placa']\n          }]\n        }).then(function (result3) {\n          return res.json([result1, result2, result3]);\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add efectivoviaje\n\n  app.post('/efectivoviajes', function (req, res) {\n    console.log(\"======>> \" + req.body.efectivoviajes_fecha + \"\\n\");\n\n    if (!req.body.efectivoviajes_fecha) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Efectivoviaje.create(req.body).then(function () {\n        res.send('EfectivoViaje Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update viaje\n  // app.put('/viajes/:id', (req, res)=>{\n  // \tconsole.log(\"======>> \" + req.body.viajeid + \"\\n\")\n  // \tif(!req.body.viajeid)\n  // \t{\n  // \t\tres.status(400)\n  // \t\tconsole.log(\"ERROR PUT\")\n  // \t\tres.json(req.body)\n  // \t}\n  // \telse\n  // \t{\n  // \t\tViaje.update(\n  // \t\t\t{ viaje_id: req.body.viajeid, carro_id: req.body.carroid, empleado_id: req.body.empleadoid, lugar_id: req.body.lugarid, cliente_id: req.body.clienteid, viaje_fecsalida: req.body.fecsalida, viaje_fecretorno: req.body.fecretorno }, { where: {viaje_id: req.params.id} }\n  // \t\t)\n  // \t\t.then(()=>{\n  // \t\t\tres.send('Viaje Modificado');\n  // \t\t})\n  // \t\t.error(err => {\n  // \t\t\tres.send('error: ' + err);\n  // \t\t})\n  // \t}\n  // });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVmZWN0aXZvdmlhamVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJDYXJybyIsImRiIiwibW9kZWxzIiwiY2Fycm9zIiwiRW1wbGVhZG8iLCJlbXBsZWFkb3MiLCJFZmVjdGl2b3ZpYWplIiwiZWZlY3Rpdm92aWFqZXMiLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kQWxsIiwiYXR0cmlidXRlcyIsInRoZW4iLCJyZXN1bHQxIiwicmVzdWx0MiIsImluY2x1ZGUiLCJtb2RlbCIsInJlc3VsdDMiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsImJvZHkiLCJwb3N0IiwiY29uc29sZSIsImxvZyIsImVmZWN0aXZvdmlhamVzX2ZlY2hhIiwiY3JlYXRlIiwic2VuZCIsImVyciJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLE1BQTVCO0FBQ0EsTUFBTUMsUUFBUSxHQUFHTCxHQUFHLENBQUNFLEVBQUosQ0FBT0MsTUFBUCxDQUFjRyxTQUEvQjtBQUNBLE1BQU1DLGFBQWEsR0FBR1AsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0ssY0FBcEMsQ0FIc0IsQ0FLdEI7O0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLGlCQUFSLEVBQTJCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3hDVixJQUFBQSxLQUFLLENBQUNXLE9BQU4sQ0FBYztBQUFFQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxVQUFELEVBQWEsYUFBYjtBQUFkLEtBQWQsRUFDQ0MsSUFERCxDQUVDLFVBQUFDLE9BQU87QUFBQSxhQUFJVixRQUFRLENBQUNPLE9BQVQsQ0FBaUI7QUFBRUMsUUFBQUEsVUFBVSxFQUFFLENBQUMsYUFBRCxFQUFnQixpQkFBaEIsRUFBbUMsaUJBQW5DLEVBQXNELGlCQUF0RDtBQUFkLE9BQWpCLEVBQ1ZDLElBRFUsQ0FFVixVQUFBRSxPQUFPO0FBQUEsZUFBSVQsYUFBYSxDQUFDSyxPQUFkLENBQXNCO0FBQUVDLFVBQUFBLFVBQVUsRUFBRSxDQUFDLGtCQUFELEVBQXFCLHFCQUFyQixFQUE0QyxVQUE1QyxFQUF3RCxhQUF4RCxFQUF1RSxxQkFBdkUsRUFBOEYsb0JBQTlGLENBQWQ7QUFBbUlJLFVBQUFBLE9BQU8sRUFBRSxDQUFDO0FBQUNDLFlBQUFBLEtBQUssRUFBRWIsUUFBUjtBQUFrQlEsWUFBQUEsVUFBVSxFQUFFLENBQUMsYUFBRCxFQUFnQixpQkFBaEIsRUFBbUMsaUJBQW5DLEVBQXNELGlCQUF0RDtBQUE5QixXQUFELEVBQTBHO0FBQUNLLFlBQUFBLEtBQUssRUFBRWpCLEtBQVI7QUFBZVksWUFBQUEsVUFBVSxFQUFFLENBQUMsVUFBRCxFQUFZLGFBQVo7QUFBM0IsV0FBMUc7QUFBNUksU0FBdEIsRUFDVkMsSUFEVSxDQUVWLFVBQUFLLE9BQU87QUFBQSxpQkFBSVIsR0FBRyxDQUFDUyxJQUFKLENBQVMsQ0FBQ0wsT0FBRCxFQUFVQyxPQUFWLEVBQW1CRyxPQUFuQixDQUFULENBQUo7QUFBQSxTQUZHLENBQUo7QUFBQSxPQUZHLENBQUo7QUFBQSxLQUZSLEVBVUNFLEtBVkQsQ0FVTyxVQUFBQyxLQUFLLEVBQUk7QUFBRVgsTUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUJWLEdBQUcsQ0FBQ2MsSUFBekI7QUFBZ0MsS0FWbEQ7QUFXQSxHQVpELEVBTnNCLENBb0J0Qjs7QUFDQXhCLEVBQUFBLEdBQUcsQ0FBQ3lCLElBQUosQ0FBUyxpQkFBVCxFQUE0QixVQUFDZixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNyQ2UsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBY2pCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTSSxvQkFBdkIsR0FBOEMsSUFBMUQ7O0FBQ0osUUFBRyxDQUFDbEIsR0FBRyxDQUFDYyxJQUFKLENBQVNJLG9CQUFiLEVBQ0E7QUFDQ2pCLE1BQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVg7QUFDQUcsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNBaEIsTUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVNWLEdBQUcsQ0FBQ2MsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDakIsTUFBQUEsYUFBYSxDQUFDc0IsTUFBZCxDQUFxQm5CLEdBQUcsQ0FBQ2MsSUFBekIsRUFDQ1YsSUFERCxDQUNPLFlBQU07QUFDWkgsUUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLHdCQUFUO0FBQ0EsT0FIRCxFQUlDVCxLQUpELENBSU8sVUFBQVUsR0FBRyxFQUFJO0FBQ2JwQixRQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQU5EO0FBT0E7QUFDRCxHQWxCRCxFQXJCc0IsQ0EwQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FoRUQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IENhcnJvID0gYXBwLmRiLm1vZGVscy5jYXJyb3M7XHJcblx0Y29uc3QgRW1wbGVhZG8gPSBhcHAuZGIubW9kZWxzLmVtcGxlYWRvcztcclxuXHRjb25zdCBFZmVjdGl2b3ZpYWplID0gYXBwLmRiLm1vZGVscy5lZmVjdGl2b3ZpYWplcztcclxuXHJcblx0Ly8gZ2V0IGVmZWN0aXZvdmlhamVcclxuXHRhcHAuZ2V0KCcvZWZlY3Rpdm92aWFqZXMnLCAocmVxLCByZXMpID0+IHtcclxuXHRcdENhcnJvLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2NhcnJvX2lkJywgJ2NhcnJvX3BsYWNhJ10gfSlcclxuXHRcdC50aGVuKFxyXG5cdFx0XHRyZXN1bHQxID0+IEVtcGxlYWRvLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2VtcGxlYWRvX2lkJywgJ2VtcGxlYWRvX25vbWJyZScsICdlbXBsZWFkb19hcGVwYXQnLCAnZW1wbGVhZG9fYXBlbWF0J10gfSlcclxuXHRcdFx0LnRoZW4oXHJcblx0XHRcdFx0cmVzdWx0MiA9PiBFZmVjdGl2b3ZpYWplLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2VmZWN0aXZvdmlhamVfaWQnLCAnZWZlY3Rpdm92aWFqZV9mZWNoYScsICdjYXJyb19pZCcsICdlbXBsZWFkb19pZCcsICdlZmVjdGl2b3ZpYWplX21vbnRvJywgJ2VmZWN0aXZvdmlhamVfdGlwbyddLCBpbmNsdWRlOiBbe21vZGVsOiBFbXBsZWFkbywgYXR0cmlidXRlczogWydlbXBsZWFkb19pZCcsICdlbXBsZWFkb19ub21icmUnLCAnZW1wbGVhZG9fYXBlcGF0JywgJ2VtcGxlYWRvX2FwZW1hdCddfSwge21vZGVsOiBDYXJybywgYXR0cmlidXRlczogWydjYXJyb19pZCcsJ2NhcnJvX3BsYWNhJ119IF19KVxyXG5cdFx0XHRcdC50aGVuKFxyXG5cdFx0XHRcdFx0cmVzdWx0MyA9PiByZXMuanNvbihbcmVzdWx0MSwgcmVzdWx0MiwgcmVzdWx0M10pXHJcblx0XHRcdFx0KVxyXG5cdFx0XHQpXHJcblx0XHQpXHJcblx0XHQuY2F0Y2goZXJyb3IgPT4geyByZXMuc3RhdHVzKDQxMikuanNvbihyZXEuYm9keSkgfSkgXHJcblx0fSk7XHJcblxyXG5cdC8vIGFkZCBlZmVjdGl2b3ZpYWplXHJcblx0YXBwLnBvc3QoJy9lZmVjdGl2b3ZpYWplcycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZWZlY3Rpdm92aWFqZXNfZmVjaGEgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmVmZWN0aXZvdmlhamVzX2ZlY2hhKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQT1NUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRFZmVjdGl2b3ZpYWplLmNyZWF0ZShyZXEuYm9keSlcclxuXHRcdFx0LnRoZW4oICgpID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ0VmZWN0aXZvVmlhamUgQWdyZWdhZG8nKVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHJcblx0Ly8gdXBkYXRlIHZpYWplXHJcblx0Ly8gYXBwLnB1dCgnL3ZpYWplcy86aWQnLCAocmVxLCByZXMpPT57XHJcblx0Ly8gXHRjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkudmlhamVpZCArIFwiXFxuXCIpXHJcblx0Ly8gXHRpZighcmVxLmJvZHkudmlhamVpZClcclxuXHQvLyBcdHtcclxuXHQvLyBcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0Ly8gXHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUFVUXCIpXHJcblx0Ly8gXHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdC8vIFx0fVxyXG5cdC8vIFx0ZWxzZVxyXG5cdC8vIFx0e1xyXG5cdC8vIFx0XHRWaWFqZS51cGRhdGUoXHJcblx0Ly8gXHRcdFx0eyB2aWFqZV9pZDogcmVxLmJvZHkudmlhamVpZCwgY2Fycm9faWQ6IHJlcS5ib2R5LmNhcnJvaWQsIGVtcGxlYWRvX2lkOiByZXEuYm9keS5lbXBsZWFkb2lkLCBsdWdhcl9pZDogcmVxLmJvZHkubHVnYXJpZCwgY2xpZW50ZV9pZDogcmVxLmJvZHkuY2xpZW50ZWlkLCB2aWFqZV9mZWNzYWxpZGE6IHJlcS5ib2R5LmZlY3NhbGlkYSwgdmlhamVfZmVjcmV0b3JubzogcmVxLmJvZHkuZmVjcmV0b3JubyB9LCB7IHdoZXJlOiB7dmlhamVfaWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHQvLyBcdFx0KVxyXG5cdC8vIFx0XHQudGhlbigoKT0+e1xyXG5cdC8vIFx0XHRcdHJlcy5zZW5kKCdWaWFqZSBNb2RpZmljYWRvJyk7XHJcblx0Ly8gXHRcdH0pXHJcblx0Ly8gXHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdC8vIFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0Ly8gXHRcdH0pXHJcblx0Ly8gXHR9XHJcblx0Ly8gfSk7XHJcbn1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "efectivoviajes.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Carro",
        "db",
        "models",
        "carros",
        "Empleado",
        "empleados",
        "Efectivoviaje",
        "efectivoviajes",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "then",
        "result1",
        "result2",
        "include",
        "model",
        "result3",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "efectivoviajes_fecha",
        "create",
        "send",
        "err"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B;AACA,MAAMC,QAAQ,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,SAA/B;AACA,MAAMC,aAAa,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,cAApC,CAHsB,CAKtB;;AACAR,EAAAA,GAAG,CAACS,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCV,IAAAA,KAAK,CAACW,OAAN,CAAc;AAAEC,MAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb;AAAd,KAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIV,QAAQ,CAACO,OAAT,CAAiB;AAAEC,QAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAAd,OAAjB,EACVC,IADU,CAEV,UAAAE,OAAO;AAAA,eAAIT,aAAa,CAACK,OAAd,CAAsB;AAAEC,UAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,qBAArB,EAA4C,UAA5C,EAAwD,aAAxD,EAAuE,qBAAvE,EAA8F,oBAA9F,CAAd;AAAmII,UAAAA,OAAO,EAAE,CAAC;AAACC,YAAAA,KAAK,EAAEb,QAAR;AAAkBQ,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,WAAD,EAA0G;AAACK,YAAAA,KAAK,EAAEjB,KAAR;AAAeY,YAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,WAA1G;AAA5I,SAAtB,EACVC,IADU,CAEV,UAAAK,OAAO;AAAA,iBAAIR,GAAG,CAACS,IAAJ,CAAS,CAACL,OAAD,EAAUC,OAAV,EAAmBG,OAAnB,CAAT,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFG,CAAJ;AAAA,KAFR,EAUCE,KAVD,CAUO,UAAAC,KAAK,EAAI;AAAEX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBV,GAAG,CAACc,IAAzB;AAAgC,KAVlD;AAWA,GAZD,EANsB,CAoBtB;;AACAxB,EAAAA,GAAG,CAACyB,IAAJ,CAAS,iBAAT,EAA4B,UAACf,GAAD,EAAMC,GAAN,EAAc;AACrCe,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcjB,GAAG,CAACc,IAAJ,CAASI,oBAAvB,GAA8C,IAA1D;;AACJ,QAAG,CAAClB,GAAG,CAACc,IAAJ,CAASI,oBAAb,EACA;AACCjB,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACS,IAAJ,CAASV,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCjB,MAAAA,aAAa,CAACsB,MAAd,CAAqBnB,GAAG,CAACc,IAAzB,EACCV,IADD,CACO,YAAM;AACZH,QAAAA,GAAG,CAACmB,IAAJ,CAAS,wBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbpB,QAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EArBsB,CA0CtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhED",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Carro = app.db.models.carros;\r\n\tconst Empleado = app.db.models.empleados;\r\n\tconst Efectivoviaje = app.db.models.efectivoviajes;\r\n\r\n\t// get efectivoviaje\r\n\tapp.get('/efectivoviajes', (req, res) => {\r\n\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'] })\r\n\t\t.then(\r\n\t\t\tresult1 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\r\n\t\t\t.then(\r\n\t\t\t\tresult2 => Efectivoviaje.findAll({ attributes: ['efectivoviaje_id', 'efectivoviaje_fecha', 'carro_id', 'empleado_id', 'efectivoviaje_monto', 'efectivoviaje_tipo'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Carro, attributes: ['carro_id','carro_placa']} ]})\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult3 => res.json([result1, result2, result3])\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// add efectivoviaje\r\n\tapp.post('/efectivoviajes', (req, res) => {\r\n      console.log(\"======>> \" + req.body.efectivoviajes_fecha + \"\\n\")\r\n\t\tif(!req.body.efectivoviajes_fecha)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tEfectivoviaje.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('EfectivoViaje Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// update viaje\r\n\t// app.put('/viajes/:id', (req, res)=>{\r\n\t// \tconsole.log(\"======>> \" + req.body.viajeid + \"\\n\")\r\n\t// \tif(!req.body.viajeid)\r\n\t// \t{\r\n\t// \t\tres.status(400)\r\n\t// \t\tconsole.log(\"ERROR PUT\")\r\n\t// \t\tres.json(req.body)\r\n\t// \t}\r\n\t// \telse\r\n\t// \t{\r\n\t// \t\tViaje.update(\r\n\t// \t\t\t{ viaje_id: req.body.viajeid, carro_id: req.body.carroid, empleado_id: req.body.empleadoid, lugar_id: req.body.lugarid, cliente_id: req.body.clienteid, viaje_fecsalida: req.body.fecsalida, viaje_fecretorno: req.body.fecretorno }, { where: {viaje_id: req.params.id} }\r\n\t// \t\t)\r\n\t// \t\t.then(()=>{\r\n\t// \t\t\tres.send('Viaje Modificado');\r\n\t// \t\t})\r\n\t// \t\t.error(err => {\r\n\t// \t\t\tres.send('error: ' + err);\r\n\t// \t\t})\r\n\t// \t}\r\n\t// });\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550787526198
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\empleados.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\empleados.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\empleados.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\empleados.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "empleados.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Empleado = app.db.models.empleados;\n  app.get('/empleados', function (req, res) {\n    Empleado.findAll({\n      where: {\n        empleado_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add empleado\n\n  app.post('/empleados', function (req, res) {\n    // console.log(\"======>> \" + req.body.empleado_dniruc + \"\\n\")\n    if (!req.body.empleado_dniruc) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Empleado.create(req.body).then(function () {\n        res.send('Empleado Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // actualiza empleado \n\n  app.put('/empleados/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.dniruc + \"\\n\");\n\n    if (!req.body.dniruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Empleado.update({\n        empleado_nombre: req.body.nombre,\n        empleado_apepat: req.body.apepat,\n        empleado_apemat: req.body.apemat,\n        empleado_dniruc: req.body.dniruc,\n        empleado_fecing: req.body.fecing,\n        empleado_feclicencia: req.body.feclicencia,\n        empleado_cargo: req.body.cargo,\n        empleado_paga: req.body.paga,\n        empleado_direccion: req.body.direccion,\n        empleado_telefono: req.body.telefono,\n        empleado_email: req.body.email,\n        empleado_nacion: req.body.nacion\n      }, {\n        where: {\n          empleado_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Empleado Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxlYWRvcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiRW1wbGVhZG8iLCJkYiIsIm1vZGVscyIsImVtcGxlYWRvcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ3aGVyZSIsImVtcGxlYWRvX2VzdGFkbyIsInRoZW4iLCJyZXN1bHQiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsIm1zZyIsIm1lc3NhZ2UiLCJwb3N0IiwiYm9keSIsImVtcGxlYWRvX2RuaXJ1YyIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGUiLCJzZW5kIiwiZXJyIiwicHV0IiwiZG5pcnVjIiwidXBkYXRlIiwiZW1wbGVhZG9fbm9tYnJlIiwibm9tYnJlIiwiZW1wbGVhZG9fYXBlcGF0IiwiYXBlcGF0IiwiZW1wbGVhZG9fYXBlbWF0IiwiYXBlbWF0IiwiZW1wbGVhZG9fZmVjaW5nIiwiZmVjaW5nIiwiZW1wbGVhZG9fZmVjbGljZW5jaWEiLCJmZWNsaWNlbmNpYSIsImVtcGxlYWRvX2NhcmdvIiwiY2FyZ28iLCJlbXBsZWFkb19wYWdhIiwicGFnYSIsImVtcGxlYWRvX2RpcmVjY2lvbiIsImRpcmVjY2lvbiIsImVtcGxlYWRvX3RlbGVmb25vIiwidGVsZWZvbm8iLCJlbXBsZWFkb19lbWFpbCIsImVtYWlsIiwiZW1wbGVhZG9fbmFjaW9uIiwibmFjaW9uIiwiZW1wbGVhZG9faWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxRQUFRLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLFNBQS9CO0FBRUFKLEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbkNOLElBQUFBLFFBQVEsQ0FBQ08sT0FBVCxDQUFpQjtBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsZUFBZSxFQUFFO0FBQWxCO0FBQVIsS0FBakIsRUFDQ0MsSUFERCxDQUNNLFVBQUFDLE1BQU07QUFBQSxhQUFJTCxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVCxDQUFKO0FBQUEsS0FEWixFQUVDRSxLQUZELENBRU8sVUFBQUMsS0FBSyxFQUFJO0FBQ2ZSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCO0FBQUNJLFFBQUFBLEdBQUcsRUFBRUYsS0FBSyxDQUFDRztBQUFaLE9BQXJCO0FBQ0EsS0FKRDtBQUtBLEdBTkQsRUFIc0IsQ0FXdEI7O0FBQ0FsQixFQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsWUFBVCxFQUF1QixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNoQztBQUNKLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNDLGVBQWIsRUFDQTtBQUNDZCxNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLFFBQVEsQ0FBQ3VCLE1BQVQsQ0FBZ0JsQixHQUFHLENBQUNjLElBQXBCLEVBQ0NULElBREQsQ0FDTyxZQUFNO0FBQ1pKLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxtQkFBVDtBQUNBLE9BSEQsRUFJQ1gsS0FKRCxDQUlPLFVBQUFZLEdBQUcsRUFBSTtBQUNibkIsUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUFac0IsQ0FnQ3RCOztBQUNBMUIsRUFBQUEsR0FBRyxDQUFDMkIsR0FBSixDQUFRLGdCQUFSLEVBQTBCLFVBQUNyQixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNyQ2UsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksY0FBY2pCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxNQUF2QixHQUFnQyxJQUE1Qzs7QUFDQSxRQUFHLENBQUN0QixHQUFHLENBQUNjLElBQUosQ0FBU1EsTUFBYixFQUNBO0FBQ0NyQixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLFFBQVEsQ0FBQzRCLE1BQVQsQ0FDQztBQUFFQyxRQUFBQSxlQUFlLEVBQUV4QixHQUFHLENBQUNjLElBQUosQ0FBU1csTUFBNUI7QUFBb0NDLFFBQUFBLGVBQWUsRUFBRTFCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTYSxNQUE5RDtBQUFzRUMsUUFBQUEsZUFBZSxFQUFFNUIsR0FBRyxDQUFDYyxJQUFKLENBQVNlLE1BQWhHO0FBQXdHZCxRQUFBQSxlQUFlLEVBQUVmLEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxNQUFsSTtBQUEwSVEsUUFBQUEsZUFBZSxFQUFFOUIsR0FBRyxDQUFDYyxJQUFKLENBQVNpQixNQUFwSztBQUE0S0MsUUFBQUEsb0JBQW9CLEVBQUVoQyxHQUFHLENBQUNjLElBQUosQ0FBU21CLFdBQTNNO0FBQXdOQyxRQUFBQSxjQUFjLEVBQUVsQyxHQUFHLENBQUNjLElBQUosQ0FBU3FCLEtBQWpQO0FBQXdQQyxRQUFBQSxhQUFhLEVBQUVwQyxHQUFHLENBQUNjLElBQUosQ0FBU3VCLElBQWhSO0FBQXNSQyxRQUFBQSxrQkFBa0IsRUFBRXRDLEdBQUcsQ0FBQ2MsSUFBSixDQUFTeUIsU0FBblQ7QUFBOFRDLFFBQUFBLGlCQUFpQixFQUFFeEMsR0FBRyxDQUFDYyxJQUFKLENBQVMyQixRQUExVjtBQUFvV0MsUUFBQUEsY0FBYyxFQUFFMUMsR0FBRyxDQUFDYyxJQUFKLENBQVM2QixLQUE3WDtBQUFvWUMsUUFBQUEsZUFBZSxFQUFFNUMsR0FBRyxDQUFDYyxJQUFKLENBQVMrQjtBQUE5WixPQURELEVBQ3lhO0FBQUUxQyxRQUFBQSxLQUFLLEVBQUU7QUFBQzJDLFVBQUFBLFdBQVcsRUFBRTlDLEdBQUcsQ0FBQytDLE1BQUosQ0FBV0M7QUFBekI7QUFBVCxPQUR6YSxFQUdDM0MsSUFIRCxDQUdNLFlBQUk7QUFDVEosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLHFCQUFUO0FBQ0EsT0FMRCxFQU1DVixLQU5ELENBTU8sVUFBQVcsR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQVJEO0FBU0E7QUFDRCxHQXBCRDtBQXFCQSxDQXRERCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgRW1wbGVhZG8gPSBhcHAuZGIubW9kZWxzLmVtcGxlYWRvcztcclxuXHJcblx0YXBwLmdldCgnL2VtcGxlYWRvcycsIChyZXEsIHJlcykgPT4ge1xyXG5cdFx0RW1wbGVhZG8uZmluZEFsbCh7d2hlcmU6IHtlbXBsZWFkb19lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MTIpLmpzb24oe21zZzogZXJyb3IubWVzc2FnZX0pXHJcblx0XHR9KVxyXG5cdH0pO1xyXG5cclxuXHQvLyBhZGQgZW1wbGVhZG9cclxuXHRhcHAucG9zdCgnL2VtcGxlYWRvcycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZW1wbGVhZG9fZG5pcnVjICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5lbXBsZWFkb19kbmlydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdEVtcGxlYWRvLmNyZWF0ZShyZXEuYm9keSlcclxuXHRcdFx0LnRoZW4oICgpID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ0VtcGxlYWRvIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gYWN0dWFsaXphIGVtcGxlYWRvIFxyXG5cdGFwcC5wdXQoJy9lbXBsZWFkb3MvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0Y29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LmRuaXJ1YyArIFwiXFxuXCIpXHJcblx0XHRpZighcmVxLmJvZHkuZG5pcnVjKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQVVRcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdEVtcGxlYWRvLnVwZGF0ZShcclxuXHRcdFx0XHR7IGVtcGxlYWRvX25vbWJyZTogcmVxLmJvZHkubm9tYnJlLCBlbXBsZWFkb19hcGVwYXQ6IHJlcS5ib2R5LmFwZXBhdCwgZW1wbGVhZG9fYXBlbWF0OiByZXEuYm9keS5hcGVtYXQsIGVtcGxlYWRvX2RuaXJ1YzogcmVxLmJvZHkuZG5pcnVjLCBlbXBsZWFkb19mZWNpbmc6IHJlcS5ib2R5LmZlY2luZywgZW1wbGVhZG9fZmVjbGljZW5jaWE6IHJlcS5ib2R5LmZlY2xpY2VuY2lhLCBlbXBsZWFkb19jYXJnbzogcmVxLmJvZHkuY2FyZ28sIGVtcGxlYWRvX3BhZ2E6IHJlcS5ib2R5LnBhZ2EsIGVtcGxlYWRvX2RpcmVjY2lvbjogcmVxLmJvZHkuZGlyZWNjaW9uLCBlbXBsZWFkb190ZWxlZm9ubzogcmVxLmJvZHkudGVsZWZvbm8sIGVtcGxlYWRvX2VtYWlsOiByZXEuYm9keS5lbWFpbCwgZW1wbGVhZG9fbmFjaW9uOiByZXEuYm9keS5uYWNpb24gfSwgeyB3aGVyZToge2VtcGxlYWRvX2lkOiByZXEucGFyYW1zLmlkfSB9XHJcblx0XHRcdClcclxuXHRcdFx0LnRoZW4oKCk9PntcclxuXHRcdFx0XHRyZXMuc2VuZCgnRW1wbGVhZG8gTW9kaWZpY2FkbycpO1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQuZXJyb3IoZXJyID0+IHtcclxuXHRcdFx0XHRyZXMuc2VuZCgnZXJyb3I6ICcgKyBlcnIpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "empleados.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Empleado",
        "db",
        "models",
        "empleados",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "empleado_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "empleado_dniruc",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "dniruc",
        "update",
        "empleado_nombre",
        "nombre",
        "empleado_apepat",
        "apepat",
        "empleado_apemat",
        "apemat",
        "empleado_fecing",
        "fecing",
        "empleado_feclicencia",
        "feclicencia",
        "empleado_cargo",
        "cargo",
        "empleado_paga",
        "paga",
        "empleado_direccion",
        "direccion",
        "empleado_telefono",
        "telefono",
        "empleado_email",
        "email",
        "empleado_nacion",
        "nacion",
        "empleado_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,QAAQ,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,SAA/B;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCN,IAAAA,QAAQ,CAACO,OAAT,CAAiB;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB;AAAR,KAAjB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAHsB,CAWtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAT,EAAuB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAChC;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,eAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,QAAQ,CAACuB,MAAT,CAAgBlB,GAAG,CAACc,IAApB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,mBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAZsB,CAgCtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,gBAAR,EAA0B,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACrCe,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcjB,GAAG,CAACc,IAAJ,CAASQ,MAAvB,GAAgC,IAA5C;;AACA,QAAG,CAACtB,GAAG,CAACc,IAAJ,CAASQ,MAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,QAAQ,CAAC4B,MAAT,CACC;AAAEC,QAAAA,eAAe,EAAExB,GAAG,CAACc,IAAJ,CAASW,MAA5B;AAAoCC,QAAAA,eAAe,EAAE1B,GAAG,CAACc,IAAJ,CAASa,MAA9D;AAAsEC,QAAAA,eAAe,EAAE5B,GAAG,CAACc,IAAJ,CAASe,MAAhG;AAAwGd,QAAAA,eAAe,EAAEf,GAAG,CAACc,IAAJ,CAASQ,MAAlI;AAA0IQ,QAAAA,eAAe,EAAE9B,GAAG,CAACc,IAAJ,CAASiB,MAApK;AAA4KC,QAAAA,oBAAoB,EAAEhC,GAAG,CAACc,IAAJ,CAASmB,WAA3M;AAAwNC,QAAAA,cAAc,EAAElC,GAAG,CAACc,IAAJ,CAASqB,KAAjP;AAAwPC,QAAAA,aAAa,EAAEpC,GAAG,CAACc,IAAJ,CAASuB,IAAhR;AAAsRC,QAAAA,kBAAkB,EAAEtC,GAAG,CAACc,IAAJ,CAASyB,SAAnT;AAA8TC,QAAAA,iBAAiB,EAAExC,GAAG,CAACc,IAAJ,CAAS2B,QAA1V;AAAoWC,QAAAA,cAAc,EAAE1C,GAAG,CAACc,IAAJ,CAAS6B,KAA7X;AAAoYC,QAAAA,eAAe,EAAE5C,GAAG,CAACc,IAAJ,CAAS+B;AAA9Z,OADD,EACya;AAAE1C,QAAAA,KAAK,EAAE;AAAC2C,UAAAA,WAAW,EAAE9C,GAAG,CAAC+C,MAAJ,CAAWC;AAAzB;AAAT,OADza,EAGC3C,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,qBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAtDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Empleado = app.db.models.empleados;\r\n\r\n\tapp.get('/empleados', (req, res) => {\r\n\t\tEmpleado.findAll({where: {empleado_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => {\r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add empleado\r\n\tapp.post('/empleados', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.empleado_dniruc + \"\\n\")\r\n\t\tif(!req.body.empleado_dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tEmpleado.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Empleado Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// actualiza empleado \r\n\tapp.put('/empleados/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.dniruc + \"\\n\")\r\n\t\tif(!req.body.dniruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tEmpleado.update(\r\n\t\t\t\t{ empleado_nombre: req.body.nombre, empleado_apepat: req.body.apepat, empleado_apemat: req.body.apemat, empleado_dniruc: req.body.dniruc, empleado_fecing: req.body.fecing, empleado_feclicencia: req.body.feclicencia, empleado_cargo: req.body.cargo, empleado_paga: req.body.paga, empleado_direccion: req.body.direccion, empleado_telefono: req.body.telefono, empleado_email: req.body.email, empleado_nacion: req.body.nacion }, { where: {empleado_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Empleado Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554152285985
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\facturas.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\facturas.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\facturas.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\facturas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "facturas.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Factura = app.db.models.facturas;\n  var Cliente = app.db.models.clientes; // get factura\n\n  app.get('/facturas', function (req, res) {\n    Cliente.findAll({\n      attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre'],\n      where: {\n        cliente_estado: 1\n      },\n      order: [['cliente_nombre', 'ASC']]\n    }).then(function (result1) {\n      return Factura.findAll({\n        attributes: ['factura_id', 'cliente_id', 'factura_nro', 'factura_fecha2', 'factura_total', 'factura_guias', 'factura_feccancela2'],\n        include: [{\n          model: Cliente,\n          attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre']\n        }],\n        order: [['factura_nro', 'DESC'], ['factura_fecha2', 'DESC']],\n        where: {\n          factura_estado: 1\n        }\n      }).then(function (result2) {\n        return res.json([result1, result2]);\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add factura\n\n  app.post('/facturas', function (req, res) {\n    console.log(\"======>> \" + req.body.factura_fecha2 + \"\\n\");\n\n    if (!req.body.factura_fecha2) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Factura.create(req.body).then(function () {\n        res.send('Factura Agregada');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update factura\n\n  app.put('/facturas/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.clienteid + \"\\n\");\n\n    if (!req.body.clienteid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Factura.update({\n        cliente_id: req.body.clienteid,\n        factura_nro: req.body.facturanro,\n        factura_fecha2: req.body.facturafecha2,\n        factura_total: req.body.facturatotal,\n        factura_guias: req.body.facturaguias,\n        factura_feccancela2: req.body.facturafeccancela2\n      }, {\n        where: {\n          factura_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Factura Modificada');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhY3R1cmFzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJGYWN0dXJhIiwiZGIiLCJtb2RlbHMiLCJmYWN0dXJhcyIsIkNsaWVudGUiLCJjbGllbnRlcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJjbGllbnRlX2VzdGFkbyIsIm9yZGVyIiwidGhlbiIsInJlc3VsdDEiLCJpbmNsdWRlIiwibW9kZWwiLCJmYWN0dXJhX2VzdGFkbyIsInJlc3VsdDIiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsImJvZHkiLCJwb3N0IiwiY29uc29sZSIsImxvZyIsImZhY3R1cmFfZmVjaGEyIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsImNsaWVudGVpZCIsInVwZGF0ZSIsImNsaWVudGVfaWQiLCJmYWN0dXJhX25ybyIsImZhY3R1cmFucm8iLCJmYWN0dXJhZmVjaGEyIiwiZmFjdHVyYV90b3RhbCIsImZhY3R1cmF0b3RhbCIsImZhY3R1cmFfZ3VpYXMiLCJmYWN0dXJhZ3VpYXMiLCJmYWN0dXJhX2ZlY2NhbmNlbGEyIiwiZmFjdHVyYWZlY2NhbmNlbGEyIiwiZmFjdHVyYV9pZCIsInBhcmFtcyIsImlkIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLE9BQU8sR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsUUFBOUI7QUFDQSxNQUFNQyxPQUFPLEdBQUdMLEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNHLFFBQTlCLENBRnNCLENBSXRCOztBQUNBTixFQUFBQSxHQUFHLENBQUNPLEdBQUosQ0FBUSxXQUFSLEVBQXFCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDSixJQUFBQSxPQUFPLENBQUNLLE9BQVIsQ0FBZ0I7QUFBRUMsTUFBQUEsVUFBVSxFQUFFLENBQUMsWUFBRCxFQUFlLGdCQUFmLEVBQWlDLGdCQUFqQyxDQUFkO0FBQWtFQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsY0FBYyxFQUFFO0FBQWpCLE9BQXpFO0FBQThGQyxNQUFBQSxLQUFLLEVBQUUsQ0FBQyxDQUFDLGdCQUFELEVBQW1CLEtBQW5CLENBQUQ7QUFBckcsS0FBaEIsRUFDQ0MsSUFERCxDQUVDLFVBQUFDLE9BQU87QUFBQSxhQUFJZixPQUFPLENBQUNTLE9BQVIsQ0FBZ0I7QUFBRUMsUUFBQUEsVUFBVSxFQUFFLENBQUMsWUFBRCxFQUFlLFlBQWYsRUFBNkIsYUFBN0IsRUFBNEMsZ0JBQTVDLEVBQThELGVBQTlELEVBQStFLGVBQS9FLEVBQWdHLHFCQUFoRyxDQUFkO0FBQXNJTSxRQUFBQSxPQUFPLEVBQUUsQ0FBQztBQUFDQyxVQUFBQSxLQUFLLEVBQUViLE9BQVI7QUFBaUJNLFVBQUFBLFVBQVUsRUFBRSxDQUFDLFlBQUQsRUFBZSxnQkFBZixFQUFpQyxnQkFBakM7QUFBN0IsU0FBRCxDQUEvSTtBQUFtT0csUUFBQUEsS0FBSyxFQUFFLENBQUMsQ0FBQyxhQUFELEVBQWdCLE1BQWhCLENBQUQsRUFBMEIsQ0FBQyxnQkFBRCxFQUFtQixNQUFuQixDQUExQixDQUExTztBQUFpU0YsUUFBQUEsS0FBSyxFQUFFO0FBQUNPLFVBQUFBLGNBQWMsRUFBRTtBQUFqQjtBQUF4UyxPQUFoQixFQUNQSixJQURPLENBQ0QsVUFBQUssT0FBTztBQUFBLGVBQUlYLEdBQUcsQ0FBQ1ksSUFBSixDQUFTLENBQUNMLE9BQUQsRUFBVUksT0FBVixDQUFULENBQUo7QUFBQSxPQUROLENBQUo7QUFBQSxLQUZSLEVBS0NFLEtBTEQsQ0FLTyxVQUFBQyxLQUFLLEVBQUk7QUFBRWQsTUFBQUEsR0FBRyxDQUFDZSxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUJiLEdBQUcsQ0FBQ2lCLElBQXpCO0FBQWdDLEtBTGxEO0FBTUEsR0FQRCxFQUxzQixDQWN0Qjs7QUFDQXpCLEVBQUFBLEdBQUcsQ0FBQzBCLElBQUosQ0FBUyxXQUFULEVBQXNCLFVBQUNsQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMvQmtCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQWNwQixHQUFHLENBQUNpQixJQUFKLENBQVNJLGNBQXZCLEdBQXdDLElBQXBEOztBQUNKLFFBQUcsQ0FBQ3JCLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU0ksY0FBYixFQUNBO0FBQ0NwQixNQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYO0FBQ0FHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQW5CLE1BQUFBLEdBQUcsQ0FBQ1ksSUFBSixDQUFTYixHQUFHLENBQUNpQixJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0N4QixNQUFBQSxPQUFPLENBQUM2QixNQUFSLENBQWV0QixHQUFHLENBQUNpQixJQUFuQixFQUNDVixJQURELENBQ08sWUFBTTtBQUNaTixRQUFBQSxHQUFHLENBQUNzQixJQUFKLENBQVMsa0JBQVQ7QUFDQSxPQUhELEVBSUNULEtBSkQsQ0FJTyxVQUFBVSxHQUFHLEVBQUk7QUFDYnZCLFFBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxZQUFZQyxHQUFyQjtBQUNBLE9BTkQ7QUFPQTtBQUNELEdBbEJELEVBZnNCLENBbUN0Qjs7QUFDQWhDLEVBQUFBLEdBQUcsQ0FBQ2lDLEdBQUosQ0FBUSxlQUFSLEVBQXlCLFVBQUN6QixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNwQ2tCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQWNwQixHQUFHLENBQUNpQixJQUFKLENBQVNTLFNBQXZCLEdBQW1DLElBQS9DOztBQUNBLFFBQUcsQ0FBQzFCLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU1MsU0FBYixFQUNBO0FBQ0N6QixNQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYO0FBQ0FHLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDQW5CLE1BQUFBLEdBQUcsQ0FBQ1ksSUFBSixDQUFTYixHQUFHLENBQUNpQixJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0N4QixNQUFBQSxPQUFPLENBQUNrQyxNQUFSLENBQ0M7QUFBRUMsUUFBQUEsVUFBVSxFQUFFNUIsR0FBRyxDQUFDaUIsSUFBSixDQUFTUyxTQUF2QjtBQUFrQ0csUUFBQUEsV0FBVyxFQUFFN0IsR0FBRyxDQUFDaUIsSUFBSixDQUFTYSxVQUF4RDtBQUFvRVQsUUFBQUEsY0FBYyxFQUFFckIsR0FBRyxDQUFDaUIsSUFBSixDQUFTYyxhQUE3RjtBQUE0R0MsUUFBQUEsYUFBYSxFQUFFaEMsR0FBRyxDQUFDaUIsSUFBSixDQUFTZ0IsWUFBcEk7QUFBa0pDLFFBQUFBLGFBQWEsRUFBRWxDLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU2tCLFlBQTFLO0FBQXdMQyxRQUFBQSxtQkFBbUIsRUFBRXBDLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU29CO0FBQXROLE9BREQsRUFDNk87QUFBRWpDLFFBQUFBLEtBQUssRUFBRTtBQUFDa0MsVUFBQUEsVUFBVSxFQUFFdEMsR0FBRyxDQUFDdUMsTUFBSixDQUFXQztBQUF4QjtBQUFULE9BRDdPLEVBR0NqQyxJQUhELENBR00sWUFBSTtBQUNUTixRQUFBQSxHQUFHLENBQUNzQixJQUFKLENBQVMsb0JBQVQ7QUFDQSxPQUxELEVBTUNSLEtBTkQsQ0FNTyxVQUFBUyxHQUFHLEVBQUk7QUFDYnZCLFFBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxZQUFZQyxHQUFyQjtBQUNBLE9BUkQ7QUFTQTtBQUNELEdBcEJEO0FBcUJBLENBekREIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFwcCA9PntcclxuXHRjb25zdCBGYWN0dXJhID0gYXBwLmRiLm1vZGVscy5mYWN0dXJhcztcclxuXHRjb25zdCBDbGllbnRlID0gYXBwLmRiLm1vZGVscy5jbGllbnRlcztcclxuXHJcblx0Ly8gZ2V0IGZhY3R1cmFcclxuXHRhcHAuZ2V0KCcvZmFjdHVyYXMnLCAocmVxLCByZXMpID0+IHtcclxuXHRcdENsaWVudGUuZmluZEFsbCh7IGF0dHJpYnV0ZXM6IFsnY2xpZW50ZV9pZCcsICdjbGllbnRlX2RuaXJ1YycsICdjbGllbnRlX25vbWJyZSddLCB3aGVyZToge2NsaWVudGVfZXN0YWRvOiAxfSwgb3JkZXI6IFtbJ2NsaWVudGVfbm9tYnJlJywgJ0FTQyddXSB9KVxyXG5cdFx0LnRoZW4oXHJcblx0XHRcdHJlc3VsdDEgPT4gRmFjdHVyYS5maW5kQWxsKHsgYXR0cmlidXRlczogWydmYWN0dXJhX2lkJywgJ2NsaWVudGVfaWQnLCAnZmFjdHVyYV9ucm8nLCAnZmFjdHVyYV9mZWNoYTInLCAnZmFjdHVyYV90b3RhbCcsICdmYWN0dXJhX2d1aWFzJywgJ2ZhY3R1cmFfZmVjY2FuY2VsYTInXSwgaW5jbHVkZTogW3ttb2RlbDogQ2xpZW50ZSwgYXR0cmlidXRlczogWydjbGllbnRlX2lkJywgJ2NsaWVudGVfZG5pcnVjJywgJ2NsaWVudGVfbm9tYnJlJ119XSwgb3JkZXI6IFtbJ2ZhY3R1cmFfbnJvJywgJ0RFU0MnXSwgWydmYWN0dXJhX2ZlY2hhMicsICdERVNDJ11dLCB3aGVyZToge2ZhY3R1cmFfZXN0YWRvOiAxfSB9KVxyXG5cdFx0XHQgICAudGhlbiggcmVzdWx0MiA9PiByZXMuanNvbihbcmVzdWx0MSwgcmVzdWx0Ml0pIClcclxuXHRcdClcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7IHJlcy5zdGF0dXMoNDEyKS5qc29uKHJlcS5ib2R5KSB9KSBcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIGZhY3R1cmFcclxuXHRhcHAucG9zdCgnL2ZhY3R1cmFzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5mYWN0dXJhX2ZlY2hhMiArIFwiXFxuXCIpXHJcblx0XHRpZighcmVxLmJvZHkuZmFjdHVyYV9mZWNoYTIpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdEZhY3R1cmEuY3JlYXRlKHJlcS5ib2R5KVxyXG5cdFx0XHQudGhlbiggKCkgPT4geyBcclxuXHRcdFx0XHRyZXMuc2VuZCgnRmFjdHVyYSBBZ3JlZ2FkYScpXHJcblx0XHRcdH0pXHJcblx0XHRcdC5jYXRjaChlcnIgPT4geyBcclxuXHRcdFx0XHRyZXMuc2VuZCgnZXJyb3I6ICcgKyBlcnIpXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cdC8vIHVwZGF0ZSBmYWN0dXJhXHJcblx0YXBwLnB1dCgnL2ZhY3R1cmFzLzppZCcsIChyZXEsIHJlcyk9PntcclxuXHRcdGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5jbGllbnRlaWQgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmNsaWVudGVpZClcclxuXHRcdHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0XHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUFVUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRGYWN0dXJhLnVwZGF0ZShcclxuXHRcdFx0XHR7IGNsaWVudGVfaWQ6IHJlcS5ib2R5LmNsaWVudGVpZCwgZmFjdHVyYV9ucm86IHJlcS5ib2R5LmZhY3R1cmFucm8sIGZhY3R1cmFfZmVjaGEyOiByZXEuYm9keS5mYWN0dXJhZmVjaGEyLCBmYWN0dXJhX3RvdGFsOiByZXEuYm9keS5mYWN0dXJhdG90YWwsIGZhY3R1cmFfZ3VpYXM6IHJlcS5ib2R5LmZhY3R1cmFndWlhcywgZmFjdHVyYV9mZWNjYW5jZWxhMjogcmVxLmJvZHkuZmFjdHVyYWZlY2NhbmNlbGEyIH0sIHsgd2hlcmU6IHtmYWN0dXJhX2lkOiByZXEucGFyYW1zLmlkfSB9XHJcblx0XHRcdClcclxuXHRcdFx0LnRoZW4oKCk9PntcclxuXHRcdFx0XHRyZXMuc2VuZCgnRmFjdHVyYSBNb2RpZmljYWRhJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "facturas.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Factura",
        "db",
        "models",
        "facturas",
        "Cliente",
        "clientes",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "where",
        "cliente_estado",
        "order",
        "then",
        "result1",
        "include",
        "model",
        "factura_estado",
        "result2",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "factura_fecha2",
        "create",
        "send",
        "err",
        "put",
        "clienteid",
        "update",
        "cliente_id",
        "factura_nro",
        "facturanro",
        "facturafecha2",
        "factura_total",
        "facturatotal",
        "factura_guias",
        "facturaguias",
        "factura_feccancela2",
        "facturafeccancela2",
        "factura_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,OAAO,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,QAA9B;AACA,MAAMC,OAAO,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,QAA9B,CAFsB,CAItB;;AACAN,EAAAA,GAAG,CAACO,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCJ,IAAAA,OAAO,CAACK,OAAR,CAAgB;AAAEC,MAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,CAAd;AAAkEC,MAAAA,KAAK,EAAE;AAACC,QAAAA,cAAc,EAAE;AAAjB,OAAzE;AAA8FC,MAAAA,KAAK,EAAE,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAArG,KAAhB,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIf,OAAO,CAACS,OAAR,CAAgB;AAAEC,QAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,YAAf,EAA6B,aAA7B,EAA4C,gBAA5C,EAA8D,eAA9D,EAA+E,eAA/E,EAAgG,qBAAhG,CAAd;AAAsIM,QAAAA,OAAO,EAAE,CAAC;AAACC,UAAAA,KAAK,EAAEb,OAAR;AAAiBM,UAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC;AAA7B,SAAD,CAA/I;AAAmOG,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,CAAD,EAA0B,CAAC,gBAAD,EAAmB,MAAnB,CAA1B,CAA1O;AAAiSF,QAAAA,KAAK,EAAE;AAACO,UAAAA,cAAc,EAAE;AAAjB;AAAxS,OAAhB,EACPJ,IADO,CACD,UAAAK,OAAO;AAAA,eAAIX,GAAG,CAACY,IAAJ,CAAS,CAACL,OAAD,EAAUI,OAAV,CAAT,CAAJ;AAAA,OADN,CAAJ;AAAA,KAFR,EAKCE,KALD,CAKO,UAAAC,KAAK,EAAI;AAAEd,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBb,GAAG,CAACiB,IAAzB;AAAgC,KALlD;AAMA,GAPD,EALsB,CActB;;AACAzB,EAAAA,GAAG,CAAC0B,IAAJ,CAAS,WAAT,EAAsB,UAAClB,GAAD,EAAMC,GAAN,EAAc;AAC/BkB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcpB,GAAG,CAACiB,IAAJ,CAASI,cAAvB,GAAwC,IAApD;;AACJ,QAAG,CAACrB,GAAG,CAACiB,IAAJ,CAASI,cAAb,EACA;AACCpB,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAnB,MAAAA,GAAG,CAACY,IAAJ,CAASb,GAAG,CAACiB,IAAb;AACA,KALD,MAOA;AACCxB,MAAAA,OAAO,CAAC6B,MAAR,CAAetB,GAAG,CAACiB,IAAnB,EACCV,IADD,CACO,YAAM;AACZN,QAAAA,GAAG,CAACsB,IAAJ,CAAS,kBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAfsB,CAmCtB;;AACAhC,EAAAA,GAAG,CAACiC,GAAJ,CAAQ,eAAR,EAAyB,UAACzB,GAAD,EAAMC,GAAN,EAAY;AACpCkB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcpB,GAAG,CAACiB,IAAJ,CAASS,SAAvB,GAAmC,IAA/C;;AACA,QAAG,CAAC1B,GAAG,CAACiB,IAAJ,CAASS,SAAb,EACA;AACCzB,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAnB,MAAAA,GAAG,CAACY,IAAJ,CAASb,GAAG,CAACiB,IAAb;AACA,KALD,MAOA;AACCxB,MAAAA,OAAO,CAACkC,MAAR,CACC;AAAEC,QAAAA,UAAU,EAAE5B,GAAG,CAACiB,IAAJ,CAASS,SAAvB;AAAkCG,QAAAA,WAAW,EAAE7B,GAAG,CAACiB,IAAJ,CAASa,UAAxD;AAAoET,QAAAA,cAAc,EAAErB,GAAG,CAACiB,IAAJ,CAASc,aAA7F;AAA4GC,QAAAA,aAAa,EAAEhC,GAAG,CAACiB,IAAJ,CAASgB,YAApI;AAAkJC,QAAAA,aAAa,EAAElC,GAAG,CAACiB,IAAJ,CAASkB,YAA1K;AAAwLC,QAAAA,mBAAmB,EAAEpC,GAAG,CAACiB,IAAJ,CAASoB;AAAtN,OADD,EAC6O;AAAEjC,QAAAA,KAAK,EAAE;AAACkC,UAAAA,UAAU,EAAEtC,GAAG,CAACuC,MAAJ,CAAWC;AAAxB;AAAT,OAD7O,EAGCjC,IAHD,CAGM,YAAI;AACTN,QAAAA,GAAG,CAACsB,IAAJ,CAAS,oBAAT;AACA,OALD,EAMCR,KAND,CAMO,UAAAS,GAAG,EAAI;AACbvB,QAAAA,GAAG,CAACsB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAzDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Factura = app.db.models.facturas;\r\n\tconst Cliente = app.db.models.clientes;\r\n\r\n\t// get factura\r\n\tapp.get('/facturas', (req, res) => {\r\n\t\tCliente.findAll({ attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre'], where: {cliente_estado: 1}, order: [['cliente_nombre', 'ASC']] })\r\n\t\t.then(\r\n\t\t\tresult1 => Factura.findAll({ attributes: ['factura_id', 'cliente_id', 'factura_nro', 'factura_fecha2', 'factura_total', 'factura_guias', 'factura_feccancela2'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_dniruc', 'cliente_nombre']}], order: [['factura_nro', 'DESC'], ['factura_fecha2', 'DESC']], where: {factura_estado: 1} })\r\n\t\t\t   .then( result2 => res.json([result1, result2]) )\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// add factura\r\n\tapp.post('/facturas', (req, res) => {\r\n      console.log(\"======>> \" + req.body.factura_fecha2 + \"\\n\")\r\n\t\tif(!req.body.factura_fecha2)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tFactura.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Factura Agregada')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update factura\r\n\tapp.put('/facturas/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.clienteid + \"\\n\")\r\n\t\tif(!req.body.clienteid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tFactura.update(\r\n\t\t\t\t{ cliente_id: req.body.clienteid, factura_nro: req.body.facturanro, factura_fecha2: req.body.facturafecha2, factura_total: req.body.facturatotal, factura_guias: req.body.facturaguias, factura_feccancela2: req.body.facturafeccancela2 }, { where: {factura_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Factura Modificada');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556556424269
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\gastos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\gastos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\gastos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\gastos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "gastos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar sequelize = require('sequelize');\n\nmodule.exports = function (app) {\n  var Gasto = app.db.models.gastos;\n  var Proveedor = app.db.models.proveedores;\n  var Carro = app.db.models.carros; // get gastos \n\n  app.get('/gastos', function (req, res) {\n    Proveedor.findAll({\n      attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc'],\n      where: {\n        proveedor_estado: 1\n      },\n      order: [['proveedor_nombre', 'ASC']]\n    }).then(function (result1) {\n      return Carro.findAll({\n        attributes: ['carro_id', 'carro_placa'],\n        where: {\n          carro_estado: 1\n        },\n        order: [['carro_placa', 'ASC']]\n      }).then(function (result2) {\n        return Gasto.findAll({\n          attributes: ['gasto_id', 'proveedor_id', 'carro_id', 'gasto_detalle', 'gasto_importe', 'gasto_factura', 'gasto_fecha2'],\n          include: [{\n            model: Proveedor,\n            attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc']\n          }, {\n            model: Carro,\n            attributes: ['carro_id', 'carro_placa']\n          }],\n          order: [['gasto_fecha2', 'DESC'], [sequelize.literal('Carro.carro_placa'), 'ASC']],\n          where: {\n            gasto_estado: 1\n          }\n        }).then(function (result3) {\n          return res.json([result1, result2, result3]);\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add gastos\n\n  app.post('/gastos', function (req, res) {\n    console.log(\"======>> \" + req.body.gasto_fecha2 + \"\\n\");\n\n    if (!req.body.gasto_fecha2) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Gasto.create(req.body).then(function () {\n        res.send('Gasto Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update gastos \n\n  app.put('/gastos/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.proveedorid + \"\\n\");\n\n    if (!req.body.proveedorid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Gasto.update({\n        proveedor_id: req.body.proveedorid,\n        carro_id: req.body.carroid,\n        gasto_detalle: req.body.detalle,\n        gasto_importe: req.body.importe,\n        gasto_factura: req.body.factura,\n        gasto_fecha2: req.body.fecha2\n      }, {\n        where: {\n          gasto_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Gasto Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gastos.js"
      ],
      "names": [
        "sequelize",
        "require",
        "module",
        "exports",
        "app",
        "Gasto",
        "db",
        "models",
        "gastos",
        "Proveedor",
        "proveedores",
        "Carro",
        "carros",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "where",
        "proveedor_estado",
        "order",
        "then",
        "result1",
        "carro_estado",
        "result2",
        "include",
        "model",
        "literal",
        "gasto_estado",
        "result3",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "console",
        "log",
        "body",
        "gasto_fecha2",
        "create",
        "send",
        "err",
        "put",
        "proveedorid",
        "update",
        "proveedor_id",
        "carro_id",
        "carroid",
        "gasto_detalle",
        "detalle",
        "gasto_importe",
        "importe",
        "gasto_factura",
        "factura",
        "fecha2",
        "gasto_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B;AACA,MAAMC,SAAS,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,WAAhC;AACA,MAAMC,KAAK,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,MAA5B,CAHsB,CAKtB;;AACAR,EAAAA,GAAG,CAACS,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCN,IAAAA,SAAS,CAACO,OAAV,CAAkB;AAAEC,MAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,eAArC,CAAd;AAAqEC,MAAAA,KAAK,EAAE;AAACC,QAAAA,gBAAgB,EAAE;AAAnB,OAA5E;AAAmGC,MAAAA,KAAK,EAAE,CAAC,CAAC,kBAAD,EAAqB,KAArB,CAAD;AAA1G,KAAlB,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIX,KAAK,CAACK,OAAN,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,QAAAA,KAAK,EAAE;AAACK,UAAAA,YAAY,EAAE;AAAf,SAAlD;AAAqEH,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,KAAhB,CAAD;AAA5E,OAAd,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,eAAInB,KAAK,CAACW,OAAN,CAAc;AAAEC,UAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,cAAb,EAA6B,UAA7B,EAAyC,eAAzC,EAAyD,eAAzD,EAA0E,eAA1E,EAA2F,cAA3F,CAAd;AAA0HQ,UAAAA,OAAO,EAAE,CAAC;AAACC,YAAAA,KAAK,EAAEjB,SAAR;AAAmBQ,YAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,eAArC;AAA/B,WAAD,EAAwF;AAACS,YAAAA,KAAK,EAAEf,KAAR;AAAeM,YAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb;AAA3B,WAAxF,CAAnI;AAAqRG,UAAAA,KAAK,EAAE,CAAC,CAAC,cAAD,EAAiB,MAAjB,CAAD,EAA0B,CAACpB,SAAS,CAAC2B,OAAV,CAAkB,mBAAlB,CAAD,EAAyC,KAAzC,CAA1B,CAA5R;AAAwWT,UAAAA,KAAK,EAAE;AAACU,YAAAA,YAAY,EAAE;AAAf;AAA/W,SAAd,EACRP,IADQ,CACF,UAAAQ,OAAO;AAAA,iBAAId,GAAG,CAACe,IAAJ,CAAS,CAACR,OAAD,EAAUE,OAAV,EAAmBK,OAAnB,CAAT,CAAJ;AAAA,SADL,CAAJ;AAAA,OAFG,CAAJ;AAAA,KAFR,EAQCE,KARD,CAQO,UAAAC,KAAK,EAAI;AAAEjB,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AAA4C,KAR9D;AASA,GAVD,EANsB,CAkBtB;;AACA/B,EAAAA,GAAG,CAACgC,IAAJ,CAAS,SAAT,EAAoB,UAACtB,GAAD,EAAMC,GAAN,EAAc;AAC7BsB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcxB,GAAG,CAACyB,IAAJ,CAASC,YAAvB,GAAsC,IAAlD;;AACJ,QAAG,CAAC1B,GAAG,CAACyB,IAAJ,CAASC,YAAb,EACA;AACCzB,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAvB,MAAAA,GAAG,CAACe,IAAJ,CAAShB,GAAG,CAACyB,IAAb;AACA,KALD,MAOA;AACClC,MAAAA,KAAK,CAACoC,MAAN,CAAa3B,GAAG,CAACyB,IAAjB,EACClB,IADD,CACO,YAAM;AACZN,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,gBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACb5B,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAnBsB,CAwCtB;;AACAvC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,aAAR,EAAuB,UAAC9B,GAAD,EAAMC,GAAN,EAAY;AAClCsB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcxB,GAAG,CAACyB,IAAJ,CAASM,WAAvB,GAAqC,IAAjD;;AACA,QAAG,CAAC/B,GAAG,CAACyB,IAAJ,CAASM,WAAb,EACA;AACC9B,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAvB,MAAAA,GAAG,CAACe,IAAJ,CAAShB,GAAG,CAACyB,IAAb;AACA,KALD,MAOA;AACClC,MAAAA,KAAK,CAACyC,MAAN,CACC;AAAEC,QAAAA,YAAY,EAAEjC,GAAG,CAACyB,IAAJ,CAASM,WAAzB;AAAsCG,QAAAA,QAAQ,EAAElC,GAAG,CAACyB,IAAJ,CAASU,OAAzD;AAAkEC,QAAAA,aAAa,EAAEpC,GAAG,CAACyB,IAAJ,CAASY,OAA1F;AAAmGC,QAAAA,aAAa,EAAEtC,GAAG,CAACyB,IAAJ,CAASc,OAA3H;AAAoIC,QAAAA,aAAa,EAAExC,GAAG,CAACyB,IAAJ,CAASgB,OAA5J;AAAqKf,QAAAA,YAAY,EAAE1B,GAAG,CAACyB,IAAJ,CAASiB;AAA5L,OADD,EACuM;AAAEtC,QAAAA,KAAK,EAAE;AAACuC,UAAAA,QAAQ,EAAE3C,GAAG,CAAC4C,MAAJ,CAAWC;AAAtB;AAAT,OADvM,EAGCtC,IAHD,CAGM,YAAI;AACTN,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,kBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACb5B,QAAAA,GAAG,CAAC2B,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CA9DD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "const sequelize = require('sequelize');\r\nmodule.exports = app =>{\r\n\tconst Gasto = app.db.models.gastos;\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\tconst Carro = app.db.models.carros;\r\n\r\n\t// get gastos \r\n\tapp.get('/gastos', (req, res) => {\r\n\t\tProveedor.findAll({ attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc'], where: {proveedor_estado: 1}, order: [['proveedor_nombre', 'ASC']] })\r\n\t\t.then(\r\n\t\t\tresult1 => Carro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1}, order: [['carro_placa', 'ASC']] })\r\n\t\t\t.then(\r\n\t\t\t\tresult2 => Gasto.findAll({ attributes: ['gasto_id', 'proveedor_id', 'carro_id', 'gasto_detalle','gasto_importe', 'gasto_factura', 'gasto_fecha2'], include: [{model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre', 'proveedor_ruc']}, {model: Carro, attributes: ['carro_id', 'carro_placa']}], order: [['gasto_fecha2', 'DESC'],[sequelize.literal('Carro.carro_placa'), 'ASC']], where: {gasto_estado: 1} })\r\n\t\t\t   .then( result3 => res.json([result1, result2, result3]) )\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json({msg: error.message}) }) \r\n\t});\r\n\r\n\t// add gastos\r\n\tapp.post('/gastos', (req, res) => {\r\n      console.log(\"======>> \" + req.body.gasto_fecha2 + \"\\n\")\r\n\t\tif(!req.body.gasto_fecha2)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tGasto.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Gasto Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// update gastos \r\n\tapp.put('/gastos/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.proveedorid + \"\\n\")\r\n\t\tif(!req.body.proveedorid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tGasto.update(\r\n\t\t\t\t{ proveedor_id: req.body.proveedorid, carro_id: req.body.carroid, gasto_detalle: req.body.detalle, gasto_importe: req.body.importe, gasto_factura: req.body.factura, gasto_fecha2: req.body.fecha2 }, { where: {gasto_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Gasto Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556663141412
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.get('/', function (req, res) {\n    res.json();\n  });\n  app.post('/', function (req, res) {\n    res.json();\n  });\n  app.get('/cliente', function (req, res) {\n    res.json();\n  });\n  app.post('/cliente', function (req, res) {\n    res.json();\n  });\n  app.get('/empleado', function (req, res) {\n    res.json();\n  });\n  app.post('/empleado', function (req, res) {\n    res.json();\n  });\n  app.get('/carro', function (req, res) {\n    res.json();\n  });\n  app.get('/proveedor', function (req, res) {\n    res.json();\n  });\n  app.post('/proveedor', function (req, res) {\n    res.json();\n  });\n  app.get('/tipodocumento', function (req, res) {\n    res.json();\n  });\n  app.get('/documento', function (req, res) {\n    res.json();\n  });\n  app.post('/documento', function (req, res) {\n    res.json();\n  });\n  app.put('/documento', function (req, res) {\n    res.json();\n  });\n  app.get('/tipotramite', function (req, res) {\n    res.json();\n  });\n  app.get('/tramite', function (req, res) {\n    res.json();\n  });\n  app.post('/tramite', function (req, res) {\n    res.json();\n  });\n  app.get('/viaje', function (req, res) {\n    res.json();\n  });\n  app.post('/viaje', function (req, res) {\n    res.json();\n  });\n  app.get('/gasto', function (req, res) {\n    res.json();\n  });\n  app.post('/gasto', function (req, res) {\n    res.json();\n  });\n  app.get('/lugar', function (req, res) {\n    res.json();\n  });\n  app.post('/lugar', function (req, res) {\n    res.json();\n  });\n  app.get('/facturas', function (req, res) {\n    res.json();\n  });\n  app.post('/facturas', function (req, res) {\n    res.json();\n  });\n  app.get(\"/efectivoviajes\", function (req, res) {\n    res.json();\n  });\n  app.post(\"/efectivoviajes\", function (req, res) {\n    res.json();\n  });\n  app.get(\"/repuesto\", function (req, res) {\n    res.json();\n  });\n  app.post(\"/repuesto\", function (req, res) {\n    res.json();\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJqc29uIiwicG9zdCIsInB1dCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUN2QkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3hCQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLEdBQVQsRUFBYyxVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN6QkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQy9CQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFVBQVQsRUFBcUIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDaENBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsV0FBUixFQUFxQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNoQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxXQUFULEVBQXNCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2pDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDN0JBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsWUFBUixFQUFzQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNqQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxZQUFULEVBQXVCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2xDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3JDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDakNBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsWUFBVCxFQUF1QixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNsQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNNLEdBQUosQ0FBUSxZQUFSLEVBQXNCLFVBQUNKLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2pDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGNBQVIsRUFBd0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDbkNBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBUixFQUFvQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUMvQkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2hDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFFBQVIsRUFBa0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDN0JBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsUUFBVCxFQUFtQixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUM5QkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQzdCQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFFBQVQsRUFBbUIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDOUJBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUM3QkEsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdFSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxRQUFULEVBQW1CLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ2hDQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZDO0FBR0ZKLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDaENBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQUosRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsV0FBVCxFQUFzQixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNqQ0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxpQkFBUixFQUEyQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN0Q0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxpQkFBVCxFQUE0QixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN2Q0EsSUFBQUEsR0FBRyxDQUFDQyxJQUFKO0FBQ0EsR0FGRDtBQUdBSixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxXQUFSLEVBQXFCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQy9CQSxJQUFBQSxHQUFHLENBQUNDLElBQUo7QUFDQSxHQUZEO0FBR0FKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDakNBLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSjtBQUNBLEdBRkQ7QUFHQSxDQXJGRCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cdGFwcC5nZXQoJy8nLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5wb3N0KCcvJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvY2xpZW50ZScsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy9jbGllbnRlJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvZW1wbGVhZG8nLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5wb3N0KCcvZW1wbGVhZG8nLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5nZXQoJy9jYXJybycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL3Byb3ZlZWRvcicsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy9wcm92ZWVkb3InLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5nZXQoJy90aXBvZG9jdW1lbnRvJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvZG9jdW1lbnRvJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAucG9zdCgnL2RvY3VtZW50bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnB1dCgnL2RvY3VtZW50bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL3RpcG90cmFtaXRlJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvdHJhbWl0ZScsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy90cmFtaXRlJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KCcvdmlhamUnLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5wb3N0KCcvdmlhamUnLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG5cdGFwcC5nZXQoJy9nYXN0bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoJy9nYXN0bycsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL2x1Z2FyJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuICAgYXBwLnBvc3QoJy9sdWdhcicsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLmdldCgnL2ZhY3R1cmFzJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAucG9zdCgnL2ZhY3R1cmFzJywgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KFwiL2VmZWN0aXZvdmlhamVzXCIsIChyZXEsIHJlcyk9PntcclxuXHRcdHJlcy5qc29uKCk7XHJcblx0fSk7XHJcblx0YXBwLnBvc3QoXCIvZWZlY3Rpdm92aWFqZXNcIiwgKHJlcSwgcmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAuZ2V0KFwiL3JlcHVlc3RvXCIsIChyZXEscmVzKT0+e1xyXG5cdFx0cmVzLmpzb24oKTtcclxuXHR9KTtcclxuXHRhcHAucG9zdChcIi9yZXB1ZXN0b1wiLCAocmVxLCByZXMpPT57XHJcblx0XHRyZXMuanNvbigpO1xyXG5cdH0pO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "req",
        "res",
        "json",
        "post",
        "put"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAY;AACxBA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT,EAAc,UAACH,GAAD,EAAMC,GAAN,EAAY;AACzBA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC/BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB,UAACH,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAClCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAY;AACrCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAClCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACM,GAAJ,CAAQ,YAAR,EAAsB,UAACJ,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAY;AACnCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC/BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAC9BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAC9BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC7BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGEJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB,UAACH,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFC;AAGFJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAChCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB,UAACH,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAY;AACtCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,iBAAT,EAA4B,UAACH,GAAD,EAAMC,GAAN,EAAY;AACvCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAW;AAC/BA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB,UAACH,GAAD,EAAMC,GAAN,EAAY;AACjCA,IAAAA,GAAG,CAACC,IAAJ;AACA,GAFD;AAGA,CArFD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app => {\r\n\tapp.get('/', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/cliente', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/cliente', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/empleado', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/empleado', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/carro', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/proveedor', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/proveedor', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/tipodocumento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/documento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/documento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.put('/documento', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/tipotramite', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/tramite', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/tramite', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/viaje', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/viaje', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/gasto', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/gasto', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/lugar', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n   app.post('/lugar', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get('/facturas', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post('/facturas', (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get(\"/efectivoviajes\", (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post(\"/efectivoviajes\", (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.get(\"/repuesto\", (req,res)=>{\r\n\t\tres.json();\r\n\t});\r\n\tapp.post(\"/repuesto\", (req, res)=>{\r\n\t\tres.json();\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555184519369
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\lugares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\lugares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\lugares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\lugares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "lugares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Lugar = app.db.models.lugares; // get lugar\n\n  app.get('/lugares', function (req, res) {\n    Lugar.findAll({\n      where: {\n        lugar_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add lugar\n\n  app.post('/lugares', function (req, res) {\n    // console.log(\"======>> \" + req.body.lugar_distrito + \"\\n\")\n    if (!req.body.lugar_distrito) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Lugar.create(req.body).then(function () {\n        res.send('Lugar Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update lugar\n\n  app.put('/lugares/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.distrito + \"\\n\")\n    if (!req.body.distrito) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Lugar.update({\n        lugar_distrito: req.body.distrito,\n        lugar_provincia: req.body.provincia,\n        lugar_departamento: req.body.departamento\n      }, {\n        where: {\n          lugar_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Lugar Modificado');\n      }).error(function (err) {\n        res.send('error:  ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImx1Z2FyZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsIkx1Z2FyIiwiZGIiLCJtb2RlbHMiLCJsdWdhcmVzIiwiZ2V0IiwicmVxIiwicmVzIiwiZmluZEFsbCIsIndoZXJlIiwibHVnYXJfZXN0YWRvIiwidGhlbiIsInJlc3VsdCIsImpzb24iLCJjYXRjaCIsImVycm9yIiwic3RhdHVzIiwibXNnIiwibWVzc2FnZSIsInBvc3QiLCJib2R5IiwibHVnYXJfZGlzdHJpdG8iLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsImRpc3RyaXRvIiwidXBkYXRlIiwibHVnYXJfcHJvdmluY2lhIiwicHJvdmluY2lhIiwibHVnYXJfZGVwYXJ0YW1lbnRvIiwiZGVwYXJ0YW1lbnRvIiwibHVnYXJfaWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLE9BQTVCLENBRHNCLENBR3RCOztBQUNBSixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDTixJQUFBQSxLQUFLLENBQUNPLE9BQU4sQ0FBYztBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsWUFBWSxFQUFFO0FBQWY7QUFBUixLQUFkLEVBQ0NDLElBREQsQ0FDTSxVQUFBQyxNQUFNO0FBQUEsYUFBSUwsR0FBRyxDQUFDTSxJQUFKLENBQVNELE1BQVQsQ0FBSjtBQUFBLEtBRFosRUFFQ0UsS0FGRCxDQUVPLFVBQUFDLEtBQUssRUFBSTtBQUFFUixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFDSSxRQUFBQSxHQUFHLEVBQUVGLEtBQUssQ0FBQ0c7QUFBWixPQUFyQjtBQUE0QyxLQUY5RDtBQUdBLEdBSkQsRUFKc0IsQ0FVcEI7O0FBQ0ZsQixFQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsVUFBVCxFQUFxQixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QjtBQUNKLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNDLGNBQWIsRUFDQTtBQUNDZCxNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLEtBQUssQ0FBQ3VCLE1BQU4sQ0FBYWxCLEdBQUcsQ0FBQ2MsSUFBakIsRUFDQ1QsSUFERCxDQUNPLFlBQU07QUFDWkosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLGdCQUFUO0FBQ0EsT0FIRCxFQUlDWCxLQUpELENBSU8sVUFBQVksR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQU5EO0FBT0E7QUFDRCxHQWxCRCxFQVhzQixDQStCdEI7O0FBQ0ExQixFQUFBQSxHQUFHLENBQUMyQixHQUFKLENBQVEsY0FBUixFQUF3QixVQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDL0I7QUFDSixRQUFHLENBQUNELEdBQUcsQ0FBQ2MsSUFBSixDQUFTUSxRQUFiLEVBQ0E7QUFDQ3JCLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVg7QUFDQU0sTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNBaEIsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNQLEdBQUcsQ0FBQ2MsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDbkIsTUFBQUEsS0FBSyxDQUFDNEIsTUFBTixDQUNDO0FBQUVSLFFBQUFBLGNBQWMsRUFBRWYsR0FBRyxDQUFDYyxJQUFKLENBQVNRLFFBQTNCO0FBQXFDRSxRQUFBQSxlQUFlLEVBQUV4QixHQUFHLENBQUNjLElBQUosQ0FBU1csU0FBL0Q7QUFBMEVDLFFBQUFBLGtCQUFrQixFQUFFMUIsR0FBRyxDQUFDYyxJQUFKLENBQVNhO0FBQXZHLE9BREQsRUFDd0g7QUFBRXhCLFFBQUFBLEtBQUssRUFBRTtBQUFDeUIsVUFBQUEsUUFBUSxFQUFFNUIsR0FBRyxDQUFDNkIsTUFBSixDQUFXQztBQUF0QjtBQUFULE9BRHhILEVBR0N6QixJQUhELENBR00sWUFBSTtBQUNUSixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsa0JBQVQ7QUFDQSxPQUxELEVBTUNWLEtBTkQsQ0FNTyxVQUFBVyxHQUFHLEVBQUk7QUFDYm5CLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxhQUFhQyxHQUF0QjtBQUNBLE9BUkQ7QUFTQTtBQUNELEdBcEJEO0FBcUJBLENBckREIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFwcCA9PntcclxuXHRjb25zdCBMdWdhciA9IGFwcC5kYi5tb2RlbHMubHVnYXJlcztcclxuXHRcclxuXHQvLyBnZXQgbHVnYXJcclxuXHRhcHAuZ2V0KCcvbHVnYXJlcycsIChyZXEsIHJlcykgPT4ge1xyXG5cdFx0THVnYXIuZmluZEFsbCh7d2hlcmU6IHtsdWdhcl9lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgcmVzLnN0YXR1cyg0MTIpLmpzb24oe21zZzogZXJyb3IubWVzc2FnZX0pIH0pIFxyXG5cdH0pO1xyXG5cclxuICAgLy8gYWRkIGx1Z2FyXHJcblx0YXBwLnBvc3QoJy9sdWdhcmVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5sdWdhcl9kaXN0cml0byArIFwiXFxuXCIpXHJcblx0XHRpZighcmVxLmJvZHkubHVnYXJfZGlzdHJpdG8pXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdEx1Z2FyLmNyZWF0ZShyZXEuYm9keSlcclxuXHRcdFx0LnRoZW4oICgpID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ0x1Z2FyIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gdXBkYXRlIGx1Z2FyXHJcblx0YXBwLnB1dCgnL2x1Z2FyZXMvOmlkJywgKHJlcSwgcmVzKT0+e1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkuZGlzdHJpdG8gKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmRpc3RyaXRvKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQT1NUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRMdWdhci51cGRhdGUoXHJcblx0XHRcdFx0eyBsdWdhcl9kaXN0cml0bzogcmVxLmJvZHkuZGlzdHJpdG8sIGx1Z2FyX3Byb3ZpbmNpYTogcmVxLmJvZHkucHJvdmluY2lhLCBsdWdhcl9kZXBhcnRhbWVudG86IHJlcS5ib2R5LmRlcGFydGFtZW50byB9LCB7IHdoZXJlOiB7bHVnYXJfaWQ6IHJlcS5wYXJhbXMuaWR9IH1cclxuXHRcdFx0KVxyXG5cdFx0XHQudGhlbigoKT0+e1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdMdWdhciBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogICcgKyBlcnIpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "lugares.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Lugar",
        "db",
        "models",
        "lugares",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "lugar_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "lugar_distrito",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "distrito",
        "update",
        "lugar_provincia",
        "provincia",
        "lugar_departamento",
        "departamento",
        "lugar_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,OAA5B,CADsB,CAGtB;;AACAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCN,IAAAA,KAAK,CAACO,OAAN,CAAc;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAAR,KAAd,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AAAER,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AAA4C,KAF9D;AAGA,GAJD,EAJsB,CAUpB;;AACFlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,UAAT,EAAqB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAC9B;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,cAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,KAAK,CAACuB,MAAN,CAAalB,GAAG,CAACc,IAAjB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,gBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAXsB,CA+BtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,cAAR,EAAwB,UAACrB,GAAD,EAAMC,GAAN,EAAY;AAC/B;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASQ,QAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,KAAK,CAAC4B,MAAN,CACC;AAAER,QAAAA,cAAc,EAAEf,GAAG,CAACc,IAAJ,CAASQ,QAA3B;AAAqCE,QAAAA,eAAe,EAAExB,GAAG,CAACc,IAAJ,CAASW,SAA/D;AAA0EC,QAAAA,kBAAkB,EAAE1B,GAAG,CAACc,IAAJ,CAASa;AAAvG,OADD,EACwH;AAAExB,QAAAA,KAAK,EAAE;AAACyB,UAAAA,QAAQ,EAAE5B,GAAG,CAAC6B,MAAJ,CAAWC;AAAtB;AAAT,OADxH,EAGCzB,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,kBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,aAAaC,GAAtB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CArDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Lugar = app.db.models.lugares;\r\n\t\r\n\t// get lugar\r\n\tapp.get('/lugares', (req, res) => {\r\n\t\tLugar.findAll({where: {lugar_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { res.status(412).json({msg: error.message}) }) \r\n\t});\r\n\r\n   // add lugar\r\n\tapp.post('/lugares', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.lugar_distrito + \"\\n\")\r\n\t\tif(!req.body.lugar_distrito)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tLugar.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Lugar Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update lugar\r\n\tapp.put('/lugares/:id', (req, res)=>{\r\n      // console.log(\"======>> \" + req.body.distrito + \"\\n\")\r\n\t\tif(!req.body.distrito)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tLugar.update(\r\n\t\t\t\t{ lugar_distrito: req.body.distrito, lugar_provincia: req.body.provincia, lugar_departamento: req.body.departamento }, { where: {lugar_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Lugar Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error:  ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554151993901
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\proveedores.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\proveedores.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\proveedores.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\proveedores.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "proveedores.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Proveedor = app.db.models.proveedores;\n  app.get('/proveedores', function (req, res) {\n    Proveedor.findAll({\n      where: {\n        proveedor_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add proveedor\n\n  app.post('/proveedores', function (req, res) {\n    // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\n    if (!req.body.proveedor_nombre) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Proveedor.create(req.body).then(function () {\n        res.send('Proveedor Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update proveedor\n\n  app.put('/proveedores/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.ruc + \"\\n\")\n    if (!req.body.ruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Proveedor.update({\n        proveedor_nombre: req.body.nombre,\n        proveedor_ruc: req.body.ruc,\n        proveedor_tipo: req.body.tipo,\n        proveedor_direccion: req.body.direccion,\n        proveedor_telefono: req.body.telefono,\n        proveedor_fecing: req.body.fecing,\n        proveedor_email: req.body.email\n      }, {\n        where: {\n          proveedor_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Proveedor Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZlZWRvcmVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJQcm92ZWVkb3IiLCJkYiIsIm1vZGVscyIsInByb3ZlZWRvcmVzIiwiZ2V0IiwicmVxIiwicmVzIiwiZmluZEFsbCIsIndoZXJlIiwicHJvdmVlZG9yX2VzdGFkbyIsInRoZW4iLCJyZXN1bHQiLCJqc29uIiwiY2F0Y2giLCJlcnJvciIsInN0YXR1cyIsIm1zZyIsIm1lc3NhZ2UiLCJwb3N0IiwiYm9keSIsInByb3ZlZWRvcl9ub21icmUiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwic2VuZCIsImVyciIsInB1dCIsInJ1YyIsInVwZGF0ZSIsIm5vbWJyZSIsInByb3ZlZWRvcl9ydWMiLCJwcm92ZWVkb3JfdGlwbyIsInRpcG8iLCJwcm92ZWVkb3JfZGlyZWNjaW9uIiwiZGlyZWNjaW9uIiwicHJvdmVlZG9yX3RlbGVmb25vIiwidGVsZWZvbm8iLCJwcm92ZWVkb3JfZmVjaW5nIiwiZmVjaW5nIiwicHJvdmVlZG9yX2VtYWlsIiwiZW1haWwiLCJwcm92ZWVkb3JfaWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxTQUFTLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLFdBQWhDO0FBRUFKLEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGNBQVIsRUFBd0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDcENOLElBQUFBLFNBQVMsQ0FBQ08sT0FBVixDQUFrQjtBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ0MsUUFBQUEsZ0JBQWdCLEVBQUU7QUFBbkI7QUFBUixLQUFsQixFQUNDQyxJQURELENBQ00sVUFBQUMsTUFBTTtBQUFBLGFBQUlMLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxNQUFULENBQUo7QUFBQSxLQURaLEVBRUNFLEtBRkQsQ0FFTyxVQUFBQyxLQUFLLEVBQUk7QUFDZlIsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBQ0ksUUFBQUEsR0FBRyxFQUFFRixLQUFLLENBQUNHO0FBQVosT0FBckI7QUFDQSxLQUpEO0FBS0EsR0FORCxFQUhzQixDQVd0Qjs7QUFDQWxCLEVBQUFBLEdBQUcsQ0FBQ21CLElBQUosQ0FBUyxjQUFULEVBQXlCLFVBQUNiLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDO0FBQ0osUUFBRyxDQUFDRCxHQUFHLENBQUNjLElBQUosQ0FBU0MsZ0JBQWIsRUFDQTtBQUNDZCxNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25CLE1BQUFBLFNBQVMsQ0FBQ3VCLE1BQVYsQ0FBaUJsQixHQUFHLENBQUNjLElBQXJCLEVBQ0NULElBREQsQ0FDTyxZQUFNO0FBQ1pKLFFBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUyxvQkFBVDtBQUNBLE9BSEQsRUFJQ1gsS0FKRCxDQUlPLFVBQUFZLEdBQUcsRUFBSTtBQUNibkIsUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUFac0IsQ0FnQ3RCOztBQUNBMUIsRUFBQUEsR0FBRyxDQUFDMkIsR0FBSixDQUFRLGtCQUFSLEVBQTRCLFVBQUNyQixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUN2QztBQUNBLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNRLEdBQWIsRUFDQTtBQUNDckIsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWDtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FoQixNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDYyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NuQixNQUFBQSxTQUFTLENBQUM0QixNQUFWLENBQ0M7QUFBRVIsUUFBQUEsZ0JBQWdCLEVBQUVmLEdBQUcsQ0FBQ2MsSUFBSixDQUFTVSxNQUE3QjtBQUFxQ0MsUUFBQUEsYUFBYSxFQUFFekIsR0FBRyxDQUFDYyxJQUFKLENBQVNRLEdBQTdEO0FBQWtFSSxRQUFBQSxjQUFjLEVBQUUxQixHQUFHLENBQUNjLElBQUosQ0FBU2EsSUFBM0Y7QUFBaUdDLFFBQUFBLG1CQUFtQixFQUFFNUIsR0FBRyxDQUFDYyxJQUFKLENBQVNlLFNBQS9IO0FBQTBJQyxRQUFBQSxrQkFBa0IsRUFBRTlCLEdBQUcsQ0FBQ2MsSUFBSixDQUFTaUIsUUFBdks7QUFBaUxDLFFBQUFBLGdCQUFnQixFQUFFaEMsR0FBRyxDQUFDYyxJQUFKLENBQVNtQixNQUE1TTtBQUFvTkMsUUFBQUEsZUFBZSxFQUFFbEMsR0FBRyxDQUFDYyxJQUFKLENBQVNxQjtBQUE5TyxPQURELEVBQ3dQO0FBQUVoQyxRQUFBQSxLQUFLLEVBQUU7QUFBQ2lDLFVBQUFBLFlBQVksRUFBRXBDLEdBQUcsQ0FBQ3FDLE1BQUosQ0FBV0M7QUFBMUI7QUFBVCxPQUR4UCxFQUdDakMsSUFIRCxDQUdNLFlBQUk7QUFDVEosUUFBQUEsR0FBRyxDQUFDa0IsSUFBSixDQUFTLHNCQUFUO0FBQ0EsT0FMRCxFQU1DVixLQU5ELENBTU8sVUFBQVcsR0FBRyxFQUFJO0FBQ2JuQixRQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQVJEO0FBU0E7QUFDRCxHQXBCRDtBQXFCQSxDQXRERCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgUHJvdmVlZG9yID0gYXBwLmRiLm1vZGVscy5wcm92ZWVkb3JlcztcclxuXHJcblx0YXBwLmdldCgnL3Byb3ZlZWRvcmVzJywgKHJlcSxyZXMpID0+IHtcclxuXHRcdFByb3ZlZWRvci5maW5kQWxsKHt3aGVyZToge3Byb3ZlZWRvcl9lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIHByb3ZlZWRvclxyXG5cdGFwcC5wb3N0KCcvcHJvdmVlZG9yZXMnLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgLy8gY29uc29sZS5sb2coXCI9PT09PT0+PiBcIiArIHJlcS5ib2R5LnByb3ZlZWRvcl9ub21icmUgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LnByb3ZlZWRvcl9ub21icmUpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBPU1RcIilcclxuXHRcdFx0cmVzLmpzb24ocmVxLmJvZHkpXHJcblx0XHR9XHJcblx0XHRlbHNlXHJcblx0XHR7XHJcblx0XHRcdFByb3ZlZWRvci5jcmVhdGUocmVxLmJvZHkpXHJcblx0XHRcdC50aGVuKCAoKSA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdQcm92ZWVkb3IgQWdyZWdhZG8nKVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IHsgXHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHQvLyB1cGRhdGUgcHJvdmVlZG9yXHJcblx0YXBwLnB1dCgnL3Byb3ZlZWRvcmVzLzppZCcsIChyZXEsIHJlcyk9PntcclxuXHRcdC8vIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5ydWMgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LnJ1YylcclxuXHRcdHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0XHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUFVUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRQcm92ZWVkb3IudXBkYXRlKFxyXG5cdFx0XHRcdHsgcHJvdmVlZG9yX25vbWJyZTogcmVxLmJvZHkubm9tYnJlLCBwcm92ZWVkb3JfcnVjOiByZXEuYm9keS5ydWMsIHByb3ZlZWRvcl90aXBvOiByZXEuYm9keS50aXBvLCBwcm92ZWVkb3JfZGlyZWNjaW9uOiByZXEuYm9keS5kaXJlY2Npb24sIHByb3ZlZWRvcl90ZWxlZm9ubzogcmVxLmJvZHkudGVsZWZvbm8sIHByb3ZlZWRvcl9mZWNpbmc6IHJlcS5ib2R5LmZlY2luZywgcHJvdmVlZG9yX2VtYWlsOiByZXEuYm9keS5lbWFpbCB9LCB7IHdoZXJlOiB7cHJvdmVlZG9yX2lkOiByZXEucGFyYW1zLmlkfSB9XHJcblx0XHRcdClcclxuXHRcdFx0LnRoZW4oKCk9PntcclxuXHRcdFx0XHRyZXMuc2VuZCgnUHJvdmVlZG9yIE1vZGlmaWNhZG8nKTtcclxuXHRcdFx0fSlcclxuXHRcdFx0LmVycm9yKGVyciA9PiB7XHJcblx0XHRcdFx0cmVzLnNlbmQoJ2Vycm9yOiAnICsgZXJyKTtcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "proveedores.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Proveedor",
        "db",
        "models",
        "proveedores",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "proveedor_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "proveedor_nombre",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "ruc",
        "update",
        "nombre",
        "proveedor_ruc",
        "proveedor_tipo",
        "tipo",
        "proveedor_direccion",
        "direccion",
        "proveedor_telefono",
        "telefono",
        "proveedor_fecing",
        "fecing",
        "proveedor_email",
        "email",
        "proveedor_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,SAAS,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,WAAhC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACpCN,IAAAA,SAAS,CAACO,OAAV,CAAkB;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,gBAAgB,EAAE;AAAnB;AAAR,KAAlB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAHsB,CAWtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,cAAT,EAAyB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAClC;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,gBAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,SAAS,CAACuB,MAAV,CAAiBlB,GAAG,CAACc,IAArB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,oBAAT;AACA,OAHD,EAICX,KAJD,CAIO,UAAAY,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAZsB,CAgCtB;;AACA1B,EAAAA,GAAG,CAAC2B,GAAJ,CAAQ,kBAAR,EAA4B,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACvC;AACA,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASQ,GAAb,EACA;AACCrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCnB,MAAAA,SAAS,CAAC4B,MAAV,CACC;AAAER,QAAAA,gBAAgB,EAAEf,GAAG,CAACc,IAAJ,CAASU,MAA7B;AAAqCC,QAAAA,aAAa,EAAEzB,GAAG,CAACc,IAAJ,CAASQ,GAA7D;AAAkEI,QAAAA,cAAc,EAAE1B,GAAG,CAACc,IAAJ,CAASa,IAA3F;AAAiGC,QAAAA,mBAAmB,EAAE5B,GAAG,CAACc,IAAJ,CAASe,SAA/H;AAA0IC,QAAAA,kBAAkB,EAAE9B,GAAG,CAACc,IAAJ,CAASiB,QAAvK;AAAiLC,QAAAA,gBAAgB,EAAEhC,GAAG,CAACc,IAAJ,CAASmB,MAA5M;AAAoNC,QAAAA,eAAe,EAAElC,GAAG,CAACc,IAAJ,CAASqB;AAA9O,OADD,EACwP;AAAEhC,QAAAA,KAAK,EAAE;AAACiC,UAAAA,YAAY,EAAEpC,GAAG,CAACqC,MAAJ,CAAWC;AAA1B;AAAT,OADxP,EAGCjC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACkB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCV,KAND,CAMO,UAAAW,GAAG,EAAI;AACbnB,QAAAA,GAAG,CAACkB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAtDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\r\n\tapp.get('/proveedores', (req,res) => {\r\n\t\tProveedor.findAll({where: {proveedor_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add proveedor\r\n\tapp.post('/proveedores', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\r\n\t\tif(!req.body.proveedor_nombre)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Proveedor Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update proveedor\r\n\tapp.put('/proveedores/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.ruc + \"\\n\")\r\n\t\tif(!req.body.ruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.update(\r\n\t\t\t\t{ proveedor_nombre: req.body.nombre, proveedor_ruc: req.body.ruc, proveedor_tipo: req.body.tipo, proveedor_direccion: req.body.direccion, proveedor_telefono: req.body.telefono, proveedor_fecing: req.body.fecing, proveedor_email: req.body.email }, { where: {proveedor_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Proveedor Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1554152899350
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\reparaciones.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\reparaciones.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\reparaciones.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\reparaciones.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "reparaciones.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Reparacion = app.db.models.reparaciones;\n  app.get('/reparaciones', function (req, res) {\n    Reparacion.findAll({\n      where: {\n        reparacion_estado: 1\n      }\n    }).then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  }); // add reparacion\n\n  app.post('/proveedores', function (req, res) {\n    // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\n    if (!req.body.proveedor_nombre) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Proveedor.create(req.body).then(function () {\n        res.send('Proveedor Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update proveedor\n\n  app.put('/proveedores/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.ruc + \"\\n\")\n    if (!req.body.ruc) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Proveedor.update({\n        proveedor_nombre: req.body.nombre,\n        proveedor_ruc: req.body.ruc,\n        proveedor_tipo: req.body.tipo,\n        proveedor_direccion: req.body.direccion,\n        proveedor_telefono: req.body.telefono,\n        proveedor_fecing: req.body.fecing,\n        proveedor_email: req.body.email\n      }, {\n        where: {\n          proveedor_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Proveedor Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcGFyYWNpb25lcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiUmVwYXJhY2lvbiIsImRiIiwibW9kZWxzIiwicmVwYXJhY2lvbmVzIiwiZ2V0IiwicmVxIiwicmVzIiwiZmluZEFsbCIsIndoZXJlIiwicmVwYXJhY2lvbl9lc3RhZG8iLCJ0aGVuIiwicmVzdWx0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJtc2ciLCJtZXNzYWdlIiwicG9zdCIsImJvZHkiLCJwcm92ZWVkb3Jfbm9tYnJlIiwiY29uc29sZSIsImxvZyIsIlByb3ZlZWRvciIsImNyZWF0ZSIsInNlbmQiLCJlcnIiLCJwdXQiLCJydWMiLCJ1cGRhdGUiLCJub21icmUiLCJwcm92ZWVkb3JfcnVjIiwicHJvdmVlZG9yX3RpcG8iLCJ0aXBvIiwicHJvdmVlZG9yX2RpcmVjY2lvbiIsImRpcmVjY2lvbiIsInByb3ZlZWRvcl90ZWxlZm9ubyIsInRlbGVmb25vIiwicHJvdmVlZG9yX2ZlY2luZyIsImZlY2luZyIsInByb3ZlZWRvcl9lbWFpbCIsImVtYWlsIiwicHJvdmVlZG9yX2lkIiwicGFyYW1zIiwiaWQiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUc7QUFDdEIsTUFBTUMsVUFBVSxHQUFHRCxHQUFHLENBQUNFLEVBQUosQ0FBT0MsTUFBUCxDQUFjQyxZQUFqQztBQUVBSixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSxlQUFSLEVBQXlCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQ3JDTixJQUFBQSxVQUFVLENBQUNPLE9BQVgsQ0FBbUI7QUFBQ0MsTUFBQUEsS0FBSyxFQUFFO0FBQUNDLFFBQUFBLGlCQUFpQixFQUFFO0FBQXBCO0FBQVIsS0FBbkIsRUFDQ0MsSUFERCxDQUNNLFVBQUFDLE1BQU07QUFBQSxhQUFJTCxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVCxDQUFKO0FBQUEsS0FEWixFQUVDRSxLQUZELENBRU8sVUFBQUMsS0FBSyxFQUFJO0FBQ2ZSLE1BQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JILElBQWhCLENBQXFCO0FBQUNJLFFBQUFBLEdBQUcsRUFBRUYsS0FBSyxDQUFDRztBQUFaLE9BQXJCO0FBQ0EsS0FKRDtBQUtBLEdBTkQsRUFIc0IsQ0FXdEI7O0FBQ0FsQixFQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsY0FBVCxFQUF5QixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQztBQUNKLFFBQUcsQ0FBQ0QsR0FBRyxDQUFDYyxJQUFKLENBQVNDLGdCQUFiLEVBQ0E7QUFDQ2QsTUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWDtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FoQixNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU1AsR0FBRyxDQUFDYyxJQUFiO0FBQ0EsS0FMRCxNQU9BO0FBQ0NJLE1BQUFBLFNBQVMsQ0FBQ0MsTUFBVixDQUFpQm5CLEdBQUcsQ0FBQ2MsSUFBckIsRUFDQ1QsSUFERCxDQUNPLFlBQU07QUFDWkosUUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLG9CQUFUO0FBQ0EsT0FIRCxFQUlDWixLQUpELENBSU8sVUFBQWEsR0FBRyxFQUFJO0FBQ2JwQixRQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsWUFBWUMsR0FBckI7QUFDQSxPQU5EO0FBT0E7QUFDRCxHQWxCRCxFQVpzQixDQWdDdEI7O0FBQ0EzQixFQUFBQSxHQUFHLENBQUM0QixHQUFKLENBQVEsa0JBQVIsRUFBNEIsVUFBQ3RCLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3ZDO0FBQ0EsUUFBRyxDQUFDRCxHQUFHLENBQUNjLElBQUosQ0FBU1MsR0FBYixFQUNBO0FBQ0N0QixNQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFDQWhCLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTUCxHQUFHLENBQUNjLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ0ksTUFBQUEsU0FBUyxDQUFDTSxNQUFWLENBQ0M7QUFBRVQsUUFBQUEsZ0JBQWdCLEVBQUVmLEdBQUcsQ0FBQ2MsSUFBSixDQUFTVyxNQUE3QjtBQUFxQ0MsUUFBQUEsYUFBYSxFQUFFMUIsR0FBRyxDQUFDYyxJQUFKLENBQVNTLEdBQTdEO0FBQWtFSSxRQUFBQSxjQUFjLEVBQUUzQixHQUFHLENBQUNjLElBQUosQ0FBU2MsSUFBM0Y7QUFBaUdDLFFBQUFBLG1CQUFtQixFQUFFN0IsR0FBRyxDQUFDYyxJQUFKLENBQVNnQixTQUEvSDtBQUEwSUMsUUFBQUEsa0JBQWtCLEVBQUUvQixHQUFHLENBQUNjLElBQUosQ0FBU2tCLFFBQXZLO0FBQWlMQyxRQUFBQSxnQkFBZ0IsRUFBRWpDLEdBQUcsQ0FBQ2MsSUFBSixDQUFTb0IsTUFBNU07QUFBb05DLFFBQUFBLGVBQWUsRUFBRW5DLEdBQUcsQ0FBQ2MsSUFBSixDQUFTc0I7QUFBOU8sT0FERCxFQUN3UDtBQUFFakMsUUFBQUEsS0FBSyxFQUFFO0FBQUNrQyxVQUFBQSxZQUFZLEVBQUVyQyxHQUFHLENBQUNzQyxNQUFKLENBQVdDO0FBQTFCO0FBQVQsT0FEeFAsRUFHQ2xDLElBSEQsQ0FHTSxZQUFJO0FBQ1RKLFFBQUFBLEdBQUcsQ0FBQ21CLElBQUosQ0FBUyxzQkFBVDtBQUNBLE9BTEQsRUFNQ1gsS0FORCxDQU1PLFVBQUFZLEdBQUcsRUFBSTtBQUNicEIsUUFBQUEsR0FBRyxDQUFDbUIsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FSRDtBQVNBO0FBQ0QsR0FwQkQ7QUFxQkEsQ0F0REQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IFJlcGFyYWNpb24gPSBhcHAuZGIubW9kZWxzLnJlcGFyYWNpb25lcztcclxuXHJcblx0YXBwLmdldCgnL3JlcGFyYWNpb25lcycsIChyZXEscmVzKSA9PiB7XHJcblx0XHRSZXBhcmFjaW9uLmZpbmRBbGwoe3doZXJlOiB7cmVwYXJhY2lvbl9lc3RhZG86IDF9fSlcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIHJlcGFyYWNpb25cclxuXHRhcHAucG9zdCgnL3Byb3ZlZWRvcmVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5wcm92ZWVkb3Jfbm9tYnJlICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5wcm92ZWVkb3Jfbm9tYnJlKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXMuc3RhdHVzKDQwMClcclxuXHRcdFx0Y29uc29sZS5sb2coXCJFUlJPUiBQT1NUXCIpXHJcblx0XHRcdHJlcy5qc29uKHJlcS5ib2R5KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0e1xyXG5cdFx0XHRQcm92ZWVkb3IuY3JlYXRlKHJlcS5ib2R5KVxyXG5cdFx0XHQudGhlbiggKCkgPT4geyBcclxuXHRcdFx0XHRyZXMuc2VuZCgnUHJvdmVlZG9yIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gdXBkYXRlIHByb3ZlZWRvclxyXG5cdGFwcC5wdXQoJy9wcm92ZWVkb3Jlcy86aWQnLCAocmVxLCByZXMpPT57XHJcblx0XHQvLyBjb25zb2xlLmxvZyhcIj09PT09PT4+IFwiICsgcmVxLmJvZHkucnVjICsgXCJcXG5cIilcclxuXHRcdGlmKCFyZXEuYm9keS5ydWMpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBVVFwiKVxyXG5cdFx0XHRyZXMuanNvbihyZXEuYm9keSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0UHJvdmVlZG9yLnVwZGF0ZShcclxuXHRcdFx0XHR7IHByb3ZlZWRvcl9ub21icmU6IHJlcS5ib2R5Lm5vbWJyZSwgcHJvdmVlZG9yX3J1YzogcmVxLmJvZHkucnVjLCBwcm92ZWVkb3JfdGlwbzogcmVxLmJvZHkudGlwbywgcHJvdmVlZG9yX2RpcmVjY2lvbjogcmVxLmJvZHkuZGlyZWNjaW9uLCBwcm92ZWVkb3JfdGVsZWZvbm86IHJlcS5ib2R5LnRlbGVmb25vLCBwcm92ZWVkb3JfZmVjaW5nOiByZXEuYm9keS5mZWNpbmcsIHByb3ZlZWRvcl9lbWFpbDogcmVxLmJvZHkuZW1haWwgfSwgeyB3aGVyZToge3Byb3ZlZWRvcl9pZDogcmVxLnBhcmFtcy5pZH0gfVxyXG5cdFx0XHQpXHJcblx0XHRcdC50aGVuKCgpPT57XHJcblx0XHRcdFx0cmVzLnNlbmQoJ1Byb3ZlZWRvciBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "reparaciones.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Reparacion",
        "db",
        "models",
        "reparaciones",
        "get",
        "req",
        "res",
        "findAll",
        "where",
        "reparacion_estado",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message",
        "post",
        "body",
        "proveedor_nombre",
        "console",
        "log",
        "Proveedor",
        "create",
        "send",
        "err",
        "put",
        "ruc",
        "update",
        "nombre",
        "proveedor_ruc",
        "proveedor_tipo",
        "tipo",
        "proveedor_direccion",
        "direccion",
        "proveedor_telefono",
        "telefono",
        "proveedor_fecing",
        "fecing",
        "proveedor_email",
        "email",
        "proveedor_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,UAAU,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,YAAjC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrCN,IAAAA,UAAU,CAACO,OAAX,CAAmB;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,iBAAiB,EAAE;AAApB;AAAR,KAAnB,EACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIL,GAAG,CAACM,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND,EAHsB,CAWtB;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAS,cAAT,EAAyB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAClC;AACJ,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASC,gBAAb,EACA;AACCd,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCI,MAAAA,SAAS,CAACC,MAAV,CAAiBnB,GAAG,CAACc,IAArB,EACCT,IADD,CACO,YAAM;AACZJ,QAAAA,GAAG,CAACmB,IAAJ,CAAS,oBAAT;AACA,OAHD,EAICZ,KAJD,CAIO,UAAAa,GAAG,EAAI;AACbpB,QAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAZsB,CAgCtB;;AACA3B,EAAAA,GAAG,CAAC4B,GAAJ,CAAQ,kBAAR,EAA4B,UAACtB,GAAD,EAAMC,GAAN,EAAY;AACvC;AACA,QAAG,CAACD,GAAG,CAACc,IAAJ,CAASS,GAAb,EACA;AACCtB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAhB,MAAAA,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACc,IAAb;AACA,KALD,MAOA;AACCI,MAAAA,SAAS,CAACM,MAAV,CACC;AAAET,QAAAA,gBAAgB,EAAEf,GAAG,CAACc,IAAJ,CAASW,MAA7B;AAAqCC,QAAAA,aAAa,EAAE1B,GAAG,CAACc,IAAJ,CAASS,GAA7D;AAAkEI,QAAAA,cAAc,EAAE3B,GAAG,CAACc,IAAJ,CAASc,IAA3F;AAAiGC,QAAAA,mBAAmB,EAAE7B,GAAG,CAACc,IAAJ,CAASgB,SAA/H;AAA0IC,QAAAA,kBAAkB,EAAE/B,GAAG,CAACc,IAAJ,CAASkB,QAAvK;AAAiLC,QAAAA,gBAAgB,EAAEjC,GAAG,CAACc,IAAJ,CAASoB,MAA5M;AAAoNC,QAAAA,eAAe,EAAEnC,GAAG,CAACc,IAAJ,CAASsB;AAA9O,OADD,EACwP;AAAEjC,QAAAA,KAAK,EAAE;AAACkC,UAAAA,YAAY,EAAErC,GAAG,CAACsC,MAAJ,CAAWC;AAA1B;AAAT,OADxP,EAGClC,IAHD,CAGM,YAAI;AACTJ,QAAAA,GAAG,CAACmB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCX,KAND,CAMO,UAAAY,GAAG,EAAI;AACbpB,QAAAA,GAAG,CAACmB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAtDD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Reparacion = app.db.models.reparaciones;\r\n\r\n\tapp.get('/reparaciones', (req,res) => {\r\n\t\tReparacion.findAll({where: {reparacion_estado: 1}})\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n\r\n\t// add reparacion\r\n\tapp.post('/proveedores', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.proveedor_nombre + \"\\n\")\r\n\t\tif(!req.body.proveedor_nombre)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Proveedor Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update proveedor\r\n\tapp.put('/proveedores/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.ruc + \"\\n\")\r\n\t\tif(!req.body.ruc)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tProveedor.update(\r\n\t\t\t\t{ proveedor_nombre: req.body.nombre, proveedor_ruc: req.body.ruc, proveedor_tipo: req.body.tipo, proveedor_direccion: req.body.direccion, proveedor_telefono: req.body.telefono, proveedor_fecing: req.body.fecing, proveedor_email: req.body.email }, { where: {proveedor_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Proveedor Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1555451175982
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\repuestos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\repuestos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\repuestos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\repuestos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "repuestos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Repuesto = app.db.models.repuestos;\n  var Carro = app.db.models.carros;\n  var Empleado = app.db.models.empleados; // get repuesto\n\n  app.get('/repuestos', function (req, res) {\n    Carro.findAll({\n      attributes: ['carro_id', 'carro_placa'],\n      where: {\n        carro_estado: 1\n      }\n    }).then(function (result1) {\n      return Empleado.findAll({\n        attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'],\n        where: {\n          empleado_estado: 1\n        }\n      }).then(function (result2) {\n        return Repuesto.findAll({\n          attributes: ['repuesto_id', 'carro_id', 'empleado_id', 'repuesto_codigo', 'repuesto_descripcion', 'repuesto_imagen', 'repuesto_fecingreso2', 'repuesto_importe'],\n          include: [{\n            model: Empleado,\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n          }, {\n            model: Carro,\n            attributes: ['carro_id', 'carro_placa']\n          }],\n          where: {\n            repuesto_estado: 1\n          }\n        }).then(function (result3) {\n          return res.json([result1, result2, result3]);\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add repuesto\n\n  app.post('/repuestos', function (req, res) {\n    console.log(\"======>> \" + req.body.carro_id + \"\\n\");\n\n    if (!req.body.carro_id) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Repuesto.create(req.body).then(function () {\n        res.send('Repuesto Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update repuesto\n\n  app.put('/repuestos/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.carroid + \"\\n\");\n\n    if (!req.body.carroid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Repuesto.update({\n        empleado_id: req.body.empleadoid,\n        carro_id: req.body.carroid,\n        repuesto_codigo: req.body.codigo,\n        repuesto_descripcion: req.body.descripcion,\n        repuesto_fecingreso2: req.body.fecingreso2,\n        repuesto_importe: req.body.importe,\n        repuesto_imagen: req.body.imagen\n      }, {\n        where: {\n          repuesto_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Repuesto Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "repuestos.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Repuesto",
        "db",
        "models",
        "repuestos",
        "Carro",
        "carros",
        "Empleado",
        "empleados",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "where",
        "carro_estado",
        "then",
        "result1",
        "empleado_estado",
        "result2",
        "include",
        "model",
        "repuesto_estado",
        "result3",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "carro_id",
        "create",
        "send",
        "err",
        "put",
        "carroid",
        "update",
        "empleado_id",
        "empleadoid",
        "repuesto_codigo",
        "codigo",
        "repuesto_descripcion",
        "descripcion",
        "repuesto_fecingreso2",
        "fecingreso2",
        "repuesto_importe",
        "importe",
        "repuesto_imagen",
        "imagen",
        "repuesto_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,QAAQ,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,SAA/B;AACA,MAAMC,KAAK,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,MAA5B;AACA,MAAMC,QAAQ,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,SAA/B,CAHsB,CAKtB;;AACAR,EAAAA,GAAG,CAACS,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCN,IAAAA,KAAK,CAACO,OAAN,CAAc;AAAEC,MAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAAlD,KAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIV,QAAQ,CAACK,OAAT,CAAiB;AAAEC,QAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD,CAAd;AAAwFC,QAAAA,KAAK,EAAE;AAACI,UAAAA,eAAe,EAAE;AAAlB;AAA/F,OAAjB,EACVF,IADU,CAER,UAAAG,OAAO;AAAA,eAAIlB,QAAQ,CAACW,OAAT,CAAiB;AAAEC,UAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,UAAhB,EAA4B,aAA5B,EAA2C,iBAA3C,EAA8D,sBAA9D,EAAsF,iBAAtF,EAAyG,sBAAzG,EAAiI,kBAAjI,CAAd;AAAoKO,UAAAA,OAAO,EAAE,CAAC;AAACC,YAAAA,KAAK,EAAEd,QAAR;AAAkBM,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,WAAD,EAA0G;AAACQ,YAAAA,KAAK,EAAEhB,KAAR;AAAeQ,YAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,WAA1G,CAA7K;AAAgVC,UAAAA,KAAK,EAAE;AAACQ,YAAAA,eAAe,EAAE;AAAlB;AAAvV,SAAjB,EACZN,IADY,CAEV,UAAAO,OAAO;AAAA,iBAAIZ,GAAG,CAACa,IAAJ,CAAS,CAACP,OAAD,EAAUE,OAAV,EAAmBI,OAAnB,CAAT,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFC,CAAJ;AAAA,KAFR,EAUCE,KAVD,CAUO,UAAAC,KAAK,EAAI;AAAEf,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBd,GAAG,CAACkB,IAAzB;AAAgC,KAVlD;AAWA,GAZD,EANsB,CAoBtB;;AACA5B,EAAAA,GAAG,CAAC6B,IAAJ,CAAS,YAAT,EAAuB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAChCmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASI,QAAvB,GAAkC,IAA9C;;AACJ,QAAG,CAACtB,GAAG,CAACkB,IAAJ,CAASI,QAAb,EACA;AACCrB,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACC3B,MAAAA,QAAQ,CAACgC,MAAT,CAAgBvB,GAAG,CAACkB,IAApB,EACCZ,IADD,CACO,YAAM;AACZL,QAAAA,GAAG,CAACuB,IAAJ,CAAS,mBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EArBsB,CAyCtB;;AACAnC,EAAAA,GAAG,CAACoC,GAAJ,CAAQ,gBAAR,EAA0B,UAAC1B,GAAD,EAAMC,GAAN,EAAY;AACrCmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASS,OAAvB,GAAiC,IAA7C;;AACA,QAAG,CAAC3B,GAAG,CAACkB,IAAJ,CAASS,OAAb,EACA;AACC1B,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACC3B,MAAAA,QAAQ,CAACqC,MAAT,CACC;AAAEC,QAAAA,WAAW,EAAE7B,GAAG,CAACkB,IAAJ,CAASY,UAAxB;AAAoCR,QAAAA,QAAQ,EAAEtB,GAAG,CAACkB,IAAJ,CAASS,OAAvD;AAAgEI,QAAAA,eAAe,EAAE/B,GAAG,CAACkB,IAAJ,CAASc,MAA1F;AAAkGC,QAAAA,oBAAoB,EAAEjC,GAAG,CAACkB,IAAJ,CAASgB,WAAjI;AAA8IC,QAAAA,oBAAoB,EAAEnC,GAAG,CAACkB,IAAJ,CAASkB,WAA7K;AAA0LC,QAAAA,gBAAgB,EAAErC,GAAG,CAACkB,IAAJ,CAASoB,OAArN;AAA8NC,QAAAA,eAAe,EAAEvC,GAAG,CAACkB,IAAJ,CAASsB;AAAxP,OADD,EACmQ;AAAEpC,QAAAA,KAAK,EAAE;AAACqC,UAAAA,WAAW,EAAEzC,GAAG,CAAC0C,MAAJ,CAAWC;AAAzB;AAAT,OADnQ,EAGCrC,IAHD,CAGM,YAAI;AACTL,QAAAA,GAAG,CAACuB,IAAJ,CAAS,qBAAT;AACA,OALD,EAMCR,KAND,CAMO,UAAAS,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CA/DD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Repuesto = app.db.models.repuestos;\r\n\tconst Carro = app.db.models.carros;\r\n\tconst Empleado = app.db.models.empleados;\r\n\r\n\t// get repuesto\r\n\tapp.get('/repuestos', (req, res) => {\r\n\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1} })\r\n\t\t.then(\r\n\t\t\tresult1 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'], where: {empleado_estado: 1} })\r\n\t\t\t.then(\r\n\t\t\t   result2 => Repuesto.findAll({ attributes: ['repuesto_id', 'carro_id', 'empleado_id', 'repuesto_codigo', 'repuesto_descripcion', 'repuesto_imagen', 'repuesto_fecingreso2', 'repuesto_importe'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Carro, attributes: ['carro_id','carro_placa']}], where: {repuesto_estado: 1} })\r\n\t\t\t\t.then(\r\n\t\t\t\t   result3 => res.json([result1, result2, result3])\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) })\r\n\t});\r\n\r\n\t// add repuesto\r\n\tapp.post('/repuestos', (req, res) => {\r\n      console.log(\"======>> \" + req.body.carro_id + \"\\n\")\r\n\t\tif(!req.body.carro_id)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tRepuesto.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Repuesto Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update repuesto\r\n\tapp.put('/repuestos/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.carroid + \"\\n\")\r\n\t\tif(!req.body.carroid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tRepuesto.update(\r\n\t\t\t\t{ empleado_id: req.body.empleadoid, carro_id: req.body.carroid, repuesto_codigo: req.body.codigo, repuesto_descripcion: req.body.descripcion, repuesto_fecingreso2: req.body.fecingreso2, repuesto_importe: req.body.importe, repuesto_imagen: req.body.imagen }, { where: {repuesto_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Repuesto Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\t\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1556661515413
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\tipodocumentos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\tipodocumentos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\tipodocumentos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\tipodocumentos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "tipodocumentos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Tipodocumento = app.db.models.tipodocumentos;\n  app.get('/tipodocumentos', function (req, res) {\n    Tipodocumento.findAll().then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpcG9kb2N1bWVudG9zLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJUaXBvZG9jdW1lbnRvIiwiZGIiLCJtb2RlbHMiLCJ0aXBvZG9jdW1lbnRvcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ0aGVuIiwicmVzdWx0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJtc2ciLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLGFBQWEsR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsY0FBcEM7QUFFQUosRUFBQUEsR0FBRyxDQUFDSyxHQUFKLENBQVEsaUJBQVIsRUFBMkIsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDdkNOLElBQUFBLGFBQWEsQ0FBQ08sT0FBZCxHQUNDQyxJQURELENBQ00sVUFBQUMsTUFBTTtBQUFBLGFBQUlILEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxNQUFULENBQUo7QUFBQSxLQURaLEVBRUNFLEtBRkQsQ0FFTyxVQUFBQyxLQUFLLEVBQUk7QUFDZk4sTUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUI7QUFBQ0ksUUFBQUEsR0FBRyxFQUFFRixLQUFLLENBQUNHO0FBQVosT0FBckI7QUFDQSxLQUpEO0FBS0EsR0FORDtBQU9BLENBVkQiLCJzb3VyY2VSb290IjoiRTpcXGRhc3Npc1xcc2lzXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+e1xyXG5cdGNvbnN0IFRpcG9kb2N1bWVudG8gPSBhcHAuZGIubW9kZWxzLnRpcG9kb2N1bWVudG9zO1xyXG5cclxuXHRhcHAuZ2V0KCcvdGlwb2RvY3VtZW50b3MnLCAocmVxLHJlcykgPT4ge1xyXG5cdFx0VGlwb2RvY3VtZW50by5maW5kQWxsKClcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tipodocumentos.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Tipodocumento",
        "db",
        "models",
        "tipodocumentos",
        "get",
        "req",
        "res",
        "findAll",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,aAAa,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,cAApC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACvCN,IAAAA,aAAa,CAACO,OAAd,GACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIH,GAAG,CAACI,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND;AAOA,CAVD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Tipodocumento = app.db.models.tipodocumentos;\r\n\r\n\tapp.get('/tipodocumentos', (req,res) => {\r\n\t\tTipodocumento.findAll()\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547434837600
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\tipotramites.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\tipotramites.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\tipotramites.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\tipotramites.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "tipotramites.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Tipotramite = app.db.models.tipotramites;\n  app.get('/tipotramites', function (req, res) {\n    Tipotramite.findAll().then(function (result) {\n      return res.json(result);\n    }).catch(function (error) {\n      res.status(412).json({\n        msg: error.message\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpcG90cmFtaXRlcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiVGlwb3RyYW1pdGUiLCJkYiIsIm1vZGVscyIsInRpcG90cmFtaXRlcyIsImdldCIsInJlcSIsInJlcyIsImZpbmRBbGwiLCJ0aGVuIiwicmVzdWx0IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJtc2ciLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFHO0FBQ3RCLE1BQU1DLFdBQVcsR0FBR0QsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0MsWUFBbEM7QUFFQUosRUFBQUEsR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixFQUF5QixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUNyQ04sSUFBQUEsV0FBVyxDQUFDTyxPQUFaLEdBQ0NDLElBREQsQ0FDTSxVQUFBQyxNQUFNO0FBQUEsYUFBSUgsR0FBRyxDQUFDSSxJQUFKLENBQVNELE1BQVQsQ0FBSjtBQUFBLEtBRFosRUFFQ0UsS0FGRCxDQUVPLFVBQUFDLEtBQUssRUFBSTtBQUNmTixNQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxJQUFoQixDQUFxQjtBQUFDSSxRQUFBQSxHQUFHLEVBQUVGLEtBQUssQ0FBQ0c7QUFBWixPQUFyQjtBQUNBLEtBSkQ7QUFLQSxHQU5EO0FBT0EsQ0FWRCIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgVGlwb3RyYW1pdGUgPSBhcHAuZGIubW9kZWxzLnRpcG90cmFtaXRlcztcclxuXHJcblx0YXBwLmdldCgnL3RpcG90cmFtaXRlcycsIChyZXEscmVzKSA9PiB7XHJcblx0XHRUaXBvdHJhbWl0ZS5maW5kQWxsKClcclxuXHRcdC50aGVuKHJlc3VsdCA9PiByZXMuanNvbihyZXN1bHQpKVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHsgXHJcblx0XHRcdHJlcy5zdGF0dXMoNDEyKS5qc29uKHttc2c6IGVycm9yLm1lc3NhZ2V9KVxyXG5cdFx0fSlcclxuXHR9KTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tipotramites.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Tipotramite",
        "db",
        "models",
        "tipotramites",
        "get",
        "req",
        "res",
        "findAll",
        "then",
        "result",
        "json",
        "catch",
        "error",
        "status",
        "msg",
        "message"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,WAAW,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,YAAlC;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrCN,IAAAA,WAAW,CAACO,OAAZ,GACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIH,GAAG,CAACI,IAAJ,CAASD,MAAT,CAAJ;AAAA,KADZ,EAECE,KAFD,CAEO,UAAAC,KAAK,EAAI;AACfN,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACI,QAAAA,GAAG,EAAEF,KAAK,CAACG;AAAZ,OAArB;AACA,KAJD;AAKA,GAND;AAOA,CAVD",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Tipotramite = app.db.models.tipotramites;\r\n\r\n\tapp.get('/tipotramites', (req,res) => {\r\n\t\tTipotramite.findAll()\r\n\t\t.then(result => res.json(result))\r\n\t\t.catch(error => { \r\n\t\t\tres.status(412).json({msg: error.message})\r\n\t\t})\r\n\t});\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1547770902337
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\tramites.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\tramites.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\tramites.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\tramites.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "tramites.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Tramite = app.db.models.tramites;\n  var Empleado = app.db.models.empleados;\n  var Tipotramite = app.db.models.tipotramites;\n  var Documento = app.db.models.documentos;\n  var Cliente = app.db.models.clientes;\n  var Proveedor = app.db.models.proveedores;\n  var Tipodocumento = app.db.models.tipodocumentos; // get tramite\n\n  app.get('/tramites', function (req, res) {\n    Cliente.findAll({\n      attributes: ['cliente_id', 'cliente_nombre']\n    }).then(function (result1) {\n      return Proveedor.findAll({\n        attributes: ['proveedor_id', 'proveedor_nombre']\n      }).then(function (result2) {\n        return Tipodocumento.findAll({\n          attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n        }).then(function (result3) {\n          return Documento.findAll({\n            attributes: ['documento_id', 'documento_nro'],\n            include: [{\n              model: Cliente,\n              attributes: ['cliente_id', 'cliente_nombre']\n            }, {\n              model: Proveedor,\n              attributes: ['proveedor_id', 'proveedor_nombre']\n            }, {\n              model: Tipodocumento,\n              attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n            }]\n          }).then(function (result4) {\n            return Empleado.findAll({\n              attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n            }).then(function (result5) {\n              return Tipotramite.findAll({\n                attributes: ['tipotramite_id', 'tipotramite_describe']\n              }).then(function (result6) {\n                return Tramite.findAll({\n                  attributes: ['tramite_id', 'documento_id', 'empleado_id', 'tipotramite_id', 'tramite_fecsalida', 'tramite_fecregreso'],\n                  include: [{\n                    model: Empleado,\n                    attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n                  }, {\n                    model: Tipotramite,\n                    attributes: ['tipotramite_id', 'tipotramite_describe']\n                  }, {\n                    model: Documento,\n                    attributes: ['documento_id', 'documento_tipoclipro', 'documento_nro', 'cliente_id', 'proveedor_id', 'tipodocumento_id'],\n                    include: [{\n                      model: Cliente,\n                      attributes: ['cliente_id', 'cliente_nombre']\n                    }, {\n                      model: Proveedor,\n                      attributes: ['proveedor_id', 'proveedor_nombre']\n                    }, {\n                      model: Tipodocumento,\n                      attributes: ['tipodocumento_id', 'tipodocumento_nombre']\n                    }]\n                  }]\n                }).then(function (result7) {\n                  return res.json([result1, result2, result3, result4, result5, result6, result7]);\n                });\n              });\n            });\n          });\n        });\n      });\n    }).catch(function (error) {\n      res.status(412).json(req.body);\n    });\n  }); // add tramite\n\n  app.post('/tramites', function (req, res) {\n    console.log(\"======>> \" + req.body.documento_id + \"\\n\");\n\n    if (!req.body.documento_id) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Tramite.create(req.body).then(function () {\n        res.send('Tramite Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update tramite\n\n  app.put('/tramites/:id', function (req, res) {\n    console.log(\"======>> \" + req.body.documentoid + \"\\n\");\n\n    if (!req.body.documentoid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Tramite.update({\n        documento_id: req.body.documentoid,\n        empleado_id: req.body.empleadoid,\n        tipotramite_id: req.body.tipotramiteid,\n        tramite_fecsalida: req.body.fecsalida,\n        tramite_fecregreso: req.body.fecregreso\n      }, {\n        where: {\n          tramite_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Documento Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n}; // result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\n// .then( result4 => res.json([result, result2, result3, result4]) )\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW1pdGVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJUcmFtaXRlIiwiZGIiLCJtb2RlbHMiLCJ0cmFtaXRlcyIsIkVtcGxlYWRvIiwiZW1wbGVhZG9zIiwiVGlwb3RyYW1pdGUiLCJ0aXBvdHJhbWl0ZXMiLCJEb2N1bWVudG8iLCJkb2N1bWVudG9zIiwiQ2xpZW50ZSIsImNsaWVudGVzIiwiUHJvdmVlZG9yIiwicHJvdmVlZG9yZXMiLCJUaXBvZG9jdW1lbnRvIiwidGlwb2RvY3VtZW50b3MiLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kQWxsIiwiYXR0cmlidXRlcyIsInRoZW4iLCJyZXN1bHQxIiwicmVzdWx0MiIsInJlc3VsdDMiLCJpbmNsdWRlIiwibW9kZWwiLCJyZXN1bHQ0IiwicmVzdWx0NSIsInJlc3VsdDYiLCJyZXN1bHQ3IiwianNvbiIsImNhdGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJib2R5IiwicG9zdCIsImNvbnNvbGUiLCJsb2ciLCJkb2N1bWVudG9faWQiLCJjcmVhdGUiLCJzZW5kIiwiZXJyIiwicHV0IiwiZG9jdW1lbnRvaWQiLCJ1cGRhdGUiLCJlbXBsZWFkb19pZCIsImVtcGxlYWRvaWQiLCJ0aXBvdHJhbWl0ZV9pZCIsInRpcG90cmFtaXRlaWQiLCJ0cmFtaXRlX2ZlY3NhbGlkYSIsImZlY3NhbGlkYSIsInRyYW1pdGVfZmVjcmVncmVzbyIsImZlY3JlZ3Jlc28iLCJ3aGVyZSIsInRyYW1pdGVfaWQiLCJwYXJhbXMiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBRztBQUN0QixNQUFNQyxPQUFPLEdBQUdELEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNDLFFBQTlCO0FBQ0EsTUFBTUMsUUFBUSxHQUFHTCxHQUFHLENBQUNFLEVBQUosQ0FBT0MsTUFBUCxDQUFjRyxTQUEvQjtBQUNBLE1BQU1DLFdBQVcsR0FBR1AsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY0ssWUFBbEM7QUFDQSxNQUFNQyxTQUFTLEdBQUdULEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNPLFVBQWhDO0FBQ0EsTUFBTUMsT0FBTyxHQUFHWCxHQUFHLENBQUNFLEVBQUosQ0FBT0MsTUFBUCxDQUFjUyxRQUE5QjtBQUNBLE1BQU1DLFNBQVMsR0FBR2IsR0FBRyxDQUFDRSxFQUFKLENBQU9DLE1BQVAsQ0FBY1csV0FBaEM7QUFDQSxNQUFNQyxhQUFhLEdBQUdmLEdBQUcsQ0FBQ0UsRUFBSixDQUFPQyxNQUFQLENBQWNhLGNBQXBDLENBUHNCLENBU3RCOztBQUNBaEIsRUFBQUEsR0FBRyxDQUFDaUIsR0FBSixDQUFRLFdBQVIsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENSLElBQUFBLE9BQU8sQ0FBQ1MsT0FBUixDQUFnQjtBQUFFQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxZQUFELEVBQWUsZ0JBQWY7QUFBZCxLQUFoQixFQUNDQyxJQURELENBRUMsVUFBQUMsT0FBTztBQUFBLGFBQUlWLFNBQVMsQ0FBQ08sT0FBVixDQUFrQjtBQUFFQyxRQUFBQSxVQUFVLEVBQUUsQ0FBQyxjQUFELEVBQWlCLGtCQUFqQjtBQUFkLE9BQWxCLEVBQ1ZDLElBRFUsQ0FFVixVQUFBRSxPQUFPO0FBQUEsZUFBSVQsYUFBYSxDQUFDSyxPQUFkLENBQXNCO0FBQUVDLFVBQUFBLFVBQVUsRUFBRSxDQUFDLGtCQUFELEVBQXFCLHNCQUFyQjtBQUFkLFNBQXRCLEVBQ1ZDLElBRFUsQ0FFVixVQUFBRyxPQUFPO0FBQUEsaUJBQUloQixTQUFTLENBQUNXLE9BQVYsQ0FBa0I7QUFBRUMsWUFBQUEsVUFBVSxFQUFFLENBQUMsY0FBRCxFQUFpQixlQUFqQixDQUFkO0FBQWlESyxZQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUFDQyxjQUFBQSxLQUFLLEVBQUVoQixPQUFSO0FBQWlCVSxjQUFBQSxVQUFVLEVBQUUsQ0FBQyxZQUFELEVBQWUsZ0JBQWY7QUFBN0IsYUFBRCxFQUFpRTtBQUFDTSxjQUFBQSxLQUFLLEVBQUVkLFNBQVI7QUFBbUJRLGNBQUFBLFVBQVUsRUFBRSxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCO0FBQS9CLGFBQWpFLEVBQXVJO0FBQUNNLGNBQUFBLEtBQUssRUFBRVosYUFBUjtBQUF1Qk0sY0FBQUEsVUFBVSxFQUFFLENBQUMsa0JBQUQsRUFBcUIsc0JBQXJCO0FBQW5DLGFBQXZJO0FBQXpELFdBQWxCLEVBQ1ZDLElBRFUsQ0FFVixVQUFBTSxPQUFPO0FBQUEsbUJBQUl2QixRQUFRLENBQUNlLE9BQVQsQ0FBaUI7QUFBRUMsY0FBQUEsVUFBVSxFQUFFLENBQUMsYUFBRCxFQUFnQixpQkFBaEIsRUFBbUMsaUJBQW5DLEVBQXNELGlCQUF0RDtBQUFkLGFBQWpCLEVBQ1ZDLElBRFUsQ0FFVixVQUFBTyxPQUFPO0FBQUEscUJBQUl0QixXQUFXLENBQUNhLE9BQVosQ0FBb0I7QUFBRUMsZ0JBQUFBLFVBQVUsRUFBRSxDQUFDLGdCQUFELEVBQW1CLHNCQUFuQjtBQUFkLGVBQXBCLEVBQ1ZDLElBRFUsQ0FFVixVQUFBUSxPQUFPO0FBQUEsdUJBQUk3QixPQUFPLENBQUNtQixPQUFSLENBQWdCO0FBQUVDLGtCQUFBQSxVQUFVLEVBQUUsQ0FBQyxZQUFELEVBQWUsY0FBZixFQUErQixhQUEvQixFQUE4QyxnQkFBOUMsRUFBZ0UsbUJBQWhFLEVBQXFGLG9CQUFyRixDQUFkO0FBQTBISyxrQkFBQUEsT0FBTyxFQUFFLENBQUM7QUFBQ0Msb0JBQUFBLEtBQUssRUFBRXRCLFFBQVI7QUFBa0JnQixvQkFBQUEsVUFBVSxFQUFFLENBQUMsYUFBRCxFQUFnQixpQkFBaEIsRUFBbUMsaUJBQW5DLEVBQXNELGlCQUF0RDtBQUE5QixtQkFBRCxFQUEwRztBQUFDTSxvQkFBQUEsS0FBSyxFQUFFcEIsV0FBUjtBQUFxQmMsb0JBQUFBLFVBQVUsRUFBRSxDQUFDLGdCQUFELEVBQW1CLHNCQUFuQjtBQUFqQyxtQkFBMUcsRUFBd0w7QUFBQ00sb0JBQUFBLEtBQUssRUFBRWxCLFNBQVI7QUFBbUJZLG9CQUFBQSxVQUFVLEVBQUUsQ0FBQyxjQUFELEVBQWdCLHNCQUFoQixFQUF1QyxlQUF2QyxFQUF3RCxZQUF4RCxFQUFzRSxjQUF0RSxFQUFzRixrQkFBdEYsQ0FBL0I7QUFBMElLLG9CQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUFDQyxzQkFBQUEsS0FBSyxFQUFFaEIsT0FBUjtBQUFpQlUsc0JBQUFBLFVBQVUsRUFBRSxDQUFDLFlBQUQsRUFBZSxnQkFBZjtBQUE3QixxQkFBRCxFQUFpRTtBQUFDTSxzQkFBQUEsS0FBSyxFQUFFZCxTQUFSO0FBQW1CUSxzQkFBQUEsVUFBVSxFQUFFLENBQUMsY0FBRCxFQUFpQixrQkFBakI7QUFBL0IscUJBQWpFLEVBQXVJO0FBQUNNLHNCQUFBQSxLQUFLLEVBQUVaLGFBQVI7QUFBdUJNLHNCQUFBQSxVQUFVLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixzQkFBckI7QUFBbkMscUJBQXZJO0FBQWxKLG1CQUF4TDtBQUFuSSxpQkFBaEIsRUFDVkMsSUFEVSxDQUVWLFVBQUFTLE9BQU87QUFBQSx5QkFBSVosR0FBRyxDQUFDYSxJQUFKLENBQVMsQ0FBQ1QsT0FBRCxFQUFVQyxPQUFWLEVBQW1CQyxPQUFuQixFQUE0QkcsT0FBNUIsRUFBcUNDLE9BQXJDLEVBQThDQyxPQUE5QyxFQUF1REMsT0FBdkQsQ0FBVCxDQUFKO0FBQUEsaUJBRkcsQ0FBSjtBQUFBLGVBRkcsQ0FBSjtBQUFBLGFBRkcsQ0FBSjtBQUFBLFdBRkcsQ0FBSjtBQUFBLFNBRkcsQ0FBSjtBQUFBLE9BRkcsQ0FBSjtBQUFBLEtBRlIsRUFzQkNFLEtBdEJELENBc0JPLFVBQUFDLEtBQUssRUFBSTtBQUFFZixNQUFBQSxHQUFHLENBQUNnQixNQUFKLENBQVcsR0FBWCxFQUFnQkgsSUFBaEIsQ0FBcUJkLEdBQUcsQ0FBQ2tCLElBQXpCO0FBQWdDLEtBdEJsRDtBQXVCQSxHQXhCRCxFQVZzQixDQW9DdEI7O0FBQ0FwQyxFQUFBQSxHQUFHLENBQUNxQyxJQUFKLENBQVMsV0FBVCxFQUFzQixVQUFDbkIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDL0JtQixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFjckIsR0FBRyxDQUFDa0IsSUFBSixDQUFTSSxZQUF2QixHQUFzQyxJQUFsRDs7QUFDSixRQUFHLENBQUN0QixHQUFHLENBQUNrQixJQUFKLENBQVNJLFlBQWIsRUFDQTtBQUNDckIsTUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXLEdBQVg7QUFDQUcsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNBcEIsTUFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVNkLEdBQUcsQ0FBQ2tCLElBQWI7QUFDQSxLQUxELE1BT0E7QUFDQ25DLE1BQUFBLE9BQU8sQ0FBQ3dDLE1BQVIsQ0FBZXZCLEdBQUcsQ0FBQ2tCLElBQW5CLEVBQ0NkLElBREQsQ0FDTyxZQUFNO0FBQ1pILFFBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBUyxrQkFBVDtBQUNBLE9BSEQsRUFJQ1QsS0FKRCxDQUlPLFVBQUFVLEdBQUcsRUFBSTtBQUNieEIsUUFBQUEsR0FBRyxDQUFDdUIsSUFBSixDQUFTLFlBQVlDLEdBQXJCO0FBQ0EsT0FORDtBQU9BO0FBQ0QsR0FsQkQsRUFyQ3NCLENBMER0Qjs7QUFDQTNDLEVBQUFBLEdBQUcsQ0FBQzRDLEdBQUosQ0FBUSxlQUFSLEVBQXlCLFVBQUMxQixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNwQ21CLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQWNyQixHQUFHLENBQUNrQixJQUFKLENBQVNTLFdBQXZCLEdBQXFDLElBQWpEOztBQUNBLFFBQUcsQ0FBQzNCLEdBQUcsQ0FBQ2tCLElBQUosQ0FBU1MsV0FBYixFQUNBO0FBQ0MxQixNQUFBQSxHQUFHLENBQUNnQixNQUFKLENBQVcsR0FBWDtBQUNBRyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FwQixNQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBU2QsR0FBRyxDQUFDa0IsSUFBYjtBQUNBLEtBTEQsTUFPQTtBQUNDbkMsTUFBQUEsT0FBTyxDQUFDNkMsTUFBUixDQUNDO0FBQUVOLFFBQUFBLFlBQVksRUFBRXRCLEdBQUcsQ0FBQ2tCLElBQUosQ0FBU1MsV0FBekI7QUFBc0NFLFFBQUFBLFdBQVcsRUFBRTdCLEdBQUcsQ0FBQ2tCLElBQUosQ0FBU1ksVUFBNUQ7QUFBd0VDLFFBQUFBLGNBQWMsRUFBRS9CLEdBQUcsQ0FBQ2tCLElBQUosQ0FBU2MsYUFBakc7QUFBZ0hDLFFBQUFBLGlCQUFpQixFQUFFakMsR0FBRyxDQUFDa0IsSUFBSixDQUFTZ0IsU0FBNUk7QUFBdUpDLFFBQUFBLGtCQUFrQixFQUFFbkMsR0FBRyxDQUFDa0IsSUFBSixDQUFTa0I7QUFBcEwsT0FERCxFQUNtTTtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBQ0MsVUFBQUEsVUFBVSxFQUFFdEMsR0FBRyxDQUFDdUMsTUFBSixDQUFXQztBQUF4QjtBQUFULE9BRG5NLEVBR0NwQyxJQUhELENBR00sWUFBSTtBQUNUSCxRQUFBQSxHQUFHLENBQUN1QixJQUFKLENBQVMsc0JBQVQ7QUFDQSxPQUxELEVBTUNSLEtBTkQsQ0FNTyxVQUFBUyxHQUFHLEVBQUk7QUFDYnhCLFFBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBUyxZQUFZQyxHQUFyQjtBQUNBLE9BUkQ7QUFTQTtBQUNELEdBcEJEO0FBcUJBLENBaEZELEMsQ0FvRkE7QUFDQSIsInNvdXJjZVJvb3QiOiJFOlxcZGFzc2lzXFxzaXNcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT57XHJcblx0Y29uc3QgVHJhbWl0ZSA9IGFwcC5kYi5tb2RlbHMudHJhbWl0ZXM7XHJcblx0Y29uc3QgRW1wbGVhZG8gPSBhcHAuZGIubW9kZWxzLmVtcGxlYWRvcztcclxuXHRjb25zdCBUaXBvdHJhbWl0ZSA9IGFwcC5kYi5tb2RlbHMudGlwb3RyYW1pdGVzO1xyXG5cdGNvbnN0IERvY3VtZW50byA9IGFwcC5kYi5tb2RlbHMuZG9jdW1lbnRvcztcclxuXHRjb25zdCBDbGllbnRlID0gYXBwLmRiLm1vZGVscy5jbGllbnRlcztcclxuXHRjb25zdCBQcm92ZWVkb3IgPSBhcHAuZGIubW9kZWxzLnByb3ZlZWRvcmVzO1xyXG5cdGNvbnN0IFRpcG9kb2N1bWVudG8gPSBhcHAuZGIubW9kZWxzLnRpcG9kb2N1bWVudG9zO1xyXG5cclxuXHQvLyBnZXQgdHJhbWl0ZVxyXG5cdGFwcC5nZXQoJy90cmFtaXRlcycsIChyZXEsIHJlcykgPT4ge1xyXG5cdFx0Q2xpZW50ZS5maW5kQWxsKHsgYXR0cmlidXRlczogWydjbGllbnRlX2lkJywgJ2NsaWVudGVfbm9tYnJlJ10gfSlcclxuXHRcdC50aGVuKFxyXG5cdFx0XHRyZXN1bHQxID0+IFByb3ZlZWRvci5maW5kQWxsKHsgYXR0cmlidXRlczogWydwcm92ZWVkb3JfaWQnLCAncHJvdmVlZG9yX25vbWJyZSddIH0pXHJcblx0XHRcdC50aGVuKFxyXG5cdFx0XHRcdHJlc3VsdDIgPT4gVGlwb2RvY3VtZW50by5maW5kQWxsKHsgYXR0cmlidXRlczogWyd0aXBvZG9jdW1lbnRvX2lkJywgJ3RpcG9kb2N1bWVudG9fbm9tYnJlJ10gfSlcclxuXHRcdFx0XHQudGhlbihcclxuXHRcdFx0XHRcdHJlc3VsdDMgPT4gRG9jdW1lbnRvLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2RvY3VtZW50b19pZCcsICdkb2N1bWVudG9fbnJvJ10sIGluY2x1ZGU6W3ttb2RlbDogQ2xpZW50ZSwgYXR0cmlidXRlczogWydjbGllbnRlX2lkJywgJ2NsaWVudGVfbm9tYnJlJ119LCB7bW9kZWw6IFByb3ZlZWRvciwgYXR0cmlidXRlczogWydwcm92ZWVkb3JfaWQnLCAncHJvdmVlZG9yX25vbWJyZSddfSwge21vZGVsOiBUaXBvZG9jdW1lbnRvLCBhdHRyaWJ1dGVzOiBbJ3RpcG9kb2N1bWVudG9faWQnLCAndGlwb2RvY3VtZW50b19ub21icmUnXX1dIH0pXHJcblx0XHRcdFx0XHQudGhlbihcclxuXHRcdFx0XHRcdFx0cmVzdWx0NCA9PiBFbXBsZWFkby5maW5kQWxsKHsgYXR0cmlidXRlczogWydlbXBsZWFkb19pZCcsICdlbXBsZWFkb19ub21icmUnLCAnZW1wbGVhZG9fYXBlcGF0JywgJ2VtcGxlYWRvX2FwZW1hdCddIH0pXHJcblx0XHRcdFx0XHRcdC50aGVuKCBcclxuXHRcdFx0XHRcdFx0XHRyZXN1bHQ1ID0+IFRpcG90cmFtaXRlLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ3RpcG90cmFtaXRlX2lkJywgJ3RpcG90cmFtaXRlX2Rlc2NyaWJlJ10gfSlcclxuXHRcdFx0XHRcdFx0XHQudGhlbihcclxuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdDYgPT4gVHJhbWl0ZS5maW5kQWxsKHsgYXR0cmlidXRlczogWyd0cmFtaXRlX2lkJywgJ2RvY3VtZW50b19pZCcsICdlbXBsZWFkb19pZCcsICd0aXBvdHJhbWl0ZV9pZCcsICd0cmFtaXRlX2ZlY3NhbGlkYScsICd0cmFtaXRlX2ZlY3JlZ3Jlc28nXSwgaW5jbHVkZTogW3ttb2RlbDogRW1wbGVhZG8sIGF0dHJpYnV0ZXM6IFsnZW1wbGVhZG9faWQnLCAnZW1wbGVhZG9fbm9tYnJlJywgJ2VtcGxlYWRvX2FwZXBhdCcsICdlbXBsZWFkb19hcGVtYXQnXX0sIHttb2RlbDogVGlwb3RyYW1pdGUsIGF0dHJpYnV0ZXM6IFsndGlwb3RyYW1pdGVfaWQnLCAndGlwb3RyYW1pdGVfZGVzY3JpYmUnXX0sIHttb2RlbDogRG9jdW1lbnRvLCBhdHRyaWJ1dGVzOiBbJ2RvY3VtZW50b19pZCcsJ2RvY3VtZW50b190aXBvY2xpcHJvJywnZG9jdW1lbnRvX25ybycsICdjbGllbnRlX2lkJywgJ3Byb3ZlZWRvcl9pZCcsICd0aXBvZG9jdW1lbnRvX2lkJ10sIGluY2x1ZGU6W3ttb2RlbDogQ2xpZW50ZSwgYXR0cmlidXRlczogWydjbGllbnRlX2lkJywgJ2NsaWVudGVfbm9tYnJlJ119LCB7bW9kZWw6IFByb3ZlZWRvciwgYXR0cmlidXRlczogWydwcm92ZWVkb3JfaWQnLCAncHJvdmVlZG9yX25vbWJyZSddfSwge21vZGVsOiBUaXBvZG9jdW1lbnRvLCBhdHRyaWJ1dGVzOiBbJ3RpcG9kb2N1bWVudG9faWQnLCAndGlwb2RvY3VtZW50b19ub21icmUnXX1dfV0gfSlcclxuXHRcdFx0XHRcdFx0XHRcdC50aGVuKFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQ3ID0+IHJlcy5qc29uKFtyZXN1bHQxLCByZXN1bHQyLCByZXN1bHQzLCByZXN1bHQ0LCByZXN1bHQ1LCByZXN1bHQ2LCByZXN1bHQ3XSlcclxuXHRcdFx0XHRcdFx0XHRcdClcclxuXHRcdFx0XHRcdFx0XHQpXHJcblx0XHRcdFx0XHRcdClcclxuXHRcdFx0XHRcdClcclxuXHRcdFx0XHQpXHJcblx0XHRcdClcclxuXHRcdClcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7IHJlcy5zdGF0dXMoNDEyKS5qc29uKHJlcS5ib2R5KSB9KSBcclxuXHR9KTtcclxuXHJcblx0Ly8gYWRkIHRyYW1pdGVcclxuXHRhcHAucG9zdCgnL3RyYW1pdGVzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5kb2N1bWVudG9faWQgKyBcIlxcblwiKVxyXG5cdFx0aWYoIXJlcS5ib2R5LmRvY3VtZW50b19pZClcclxuXHRcdHtcclxuXHRcdFx0cmVzLnN0YXR1cyg0MDApXHJcblx0XHRcdGNvbnNvbGUubG9nKFwiRVJST1IgUE9TVFwiKVxyXG5cdFx0XHRyZXMuanNvbihyZXEuYm9keSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0VHJhbWl0ZS5jcmVhdGUocmVxLmJvZHkpXHJcblx0XHRcdC50aGVuKCAoKSA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdUcmFtaXRlIEFncmVnYWRvJylcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKGVyciA9PiB7IFxyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycilcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblxyXG5cdC8vIHVwZGF0ZSB0cmFtaXRlXHJcblx0YXBwLnB1dCgnL3RyYW1pdGVzLzppZCcsIChyZXEsIHJlcyk9PntcclxuXHRcdGNvbnNvbGUubG9nKFwiPT09PT09Pj4gXCIgKyByZXEuYm9keS5kb2N1bWVudG9pZCArIFwiXFxuXCIpXHJcblx0XHRpZighcmVxLmJvZHkuZG9jdW1lbnRvaWQpXHJcblx0XHR7XHJcblx0XHRcdHJlcy5zdGF0dXMoNDAwKVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIkVSUk9SIFBVVFwiKVxyXG5cdFx0XHRyZXMuanNvbihyZXEuYm9keSlcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0VHJhbWl0ZS51cGRhdGUoXHJcblx0XHRcdFx0eyBkb2N1bWVudG9faWQ6IHJlcS5ib2R5LmRvY3VtZW50b2lkLCBlbXBsZWFkb19pZDogcmVxLmJvZHkuZW1wbGVhZG9pZCwgdGlwb3RyYW1pdGVfaWQ6IHJlcS5ib2R5LnRpcG90cmFtaXRlaWQsIHRyYW1pdGVfZmVjc2FsaWRhOiByZXEuYm9keS5mZWNzYWxpZGEsIHRyYW1pdGVfZmVjcmVncmVzbzogcmVxLmJvZHkuZmVjcmVncmVzbyB9LCB7IHdoZXJlOiB7dHJhbWl0ZV9pZDogcmVxLnBhcmFtcy5pZH0gfVxyXG5cdFx0XHQpXHJcblx0XHRcdC50aGVuKCgpPT57XHJcblx0XHRcdFx0cmVzLnNlbmQoJ0RvY3VtZW50byBNb2RpZmljYWRvJyk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5lcnJvcihlcnIgPT4ge1xyXG5cdFx0XHRcdHJlcy5zZW5kKCdlcnJvcjogJyArIGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcblxyXG5cclxuLy8gcmVzdWx0MyA9PiBUcmFtaXRlLmZpbmRBbGwoeyBhdHRyaWJ1dGVzOiBbJ2RvY3VtZW50b19pZCcsICd0aXBvZG9jdW1lbnRvX2lkJywgJ2RvY3VtZW50b190aXBvY2xpcHJvJywgJ2NsaWVudGVfaWQnLCAncHJvdmVlZG9yX2lkJywgJ2RvY3VtZW50b19ucm8nLCAnZG9jdW1lbnRvX2ZlY2NyZWEnLCAnZG9jdW1lbnRvX3BhZ28nLCAnZG9jdW1lbnRvX3BhZ29Ub3RhbCcsICdkb2N1bWVudG9fZGV0YWxsZScsICdkb2N1bWVudG9fZmVjY2FuJ10sIGluY2x1ZGU6IFt7bW9kZWw6IENsaWVudGUsIGF0dHJpYnV0ZXM6IFsnY2xpZW50ZV9pZCcsICdjbGllbnRlX25vbWJyZSddfSwge21vZGVsOiBQcm92ZWVkb3IsIGF0dHJpYnV0ZXM6IFsncHJvdmVlZG9yX2lkJywgJ3Byb3ZlZWRvcl9ub21icmUnXX0sIHttb2RlbDogVGlwb2RvY3VtZW50bywgYXR0cmlidXRlczogWyd0aXBvZG9jdW1lbnRvX2lkJywgJ3RpcG9kb2N1bWVudG9fbm9tYnJlJ119XSB9KVxyXG4vLyAudGhlbiggcmVzdWx0NCA9PiByZXMuanNvbihbcmVzdWx0LCByZXN1bHQyLCByZXN1bHQzLCByZXN1bHQ0XSkgKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tramites.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Tramite",
        "db",
        "models",
        "tramites",
        "Empleado",
        "empleados",
        "Tipotramite",
        "tipotramites",
        "Documento",
        "documentos",
        "Cliente",
        "clientes",
        "Proveedor",
        "proveedores",
        "Tipodocumento",
        "tipodocumentos",
        "get",
        "req",
        "res",
        "findAll",
        "attributes",
        "then",
        "result1",
        "result2",
        "result3",
        "include",
        "model",
        "result4",
        "result5",
        "result6",
        "result7",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "post",
        "console",
        "log",
        "documento_id",
        "create",
        "send",
        "err",
        "put",
        "documentoid",
        "update",
        "empleado_id",
        "empleadoid",
        "tipotramite_id",
        "tipotramiteid",
        "tramite_fecsalida",
        "fecsalida",
        "tramite_fecregreso",
        "fecregreso",
        "where",
        "tramite_id",
        "params",
        "id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,OAAO,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,QAA9B;AACA,MAAMC,QAAQ,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,SAA/B;AACA,MAAMC,WAAW,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,YAAlC;AACA,MAAMC,SAAS,GAAGT,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcO,UAAhC;AACA,MAAMC,OAAO,GAAGX,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcS,QAA9B;AACA,MAAMC,SAAS,GAAGb,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcW,WAAhC;AACA,MAAMC,aAAa,GAAGf,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAca,cAApC,CAPsB,CAStB;;AACAhB,EAAAA,GAAG,CAACiB,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCR,IAAAA,OAAO,CAACS,OAAR,CAAgB;AAAEC,MAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAAd,KAAhB,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,aAAIV,SAAS,CAACO,OAAV,CAAkB;AAAEC,QAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAAd,OAAlB,EACVC,IADU,CAEV,UAAAE,OAAO;AAAA,eAAIT,aAAa,CAACK,OAAd,CAAsB;AAAEC,UAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAd,SAAtB,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,iBAAIhB,SAAS,CAACW,OAAV,CAAkB;AAAEC,YAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,eAAjB,CAAd;AAAiDK,YAAAA,OAAO,EAAC,CAAC;AAACC,cAAAA,KAAK,EAAEhB,OAAR;AAAiBU,cAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAA7B,aAAD,EAAiE;AAACM,cAAAA,KAAK,EAAEd,SAAR;AAAmBQ,cAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAA/B,aAAjE,EAAuI;AAACM,cAAAA,KAAK,EAAEZ,aAAR;AAAuBM,cAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAnC,aAAvI;AAAzD,WAAlB,EACVC,IADU,CAEV,UAAAM,OAAO;AAAA,mBAAIvB,QAAQ,CAACe,OAAT,CAAiB;AAAEC,cAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAAd,aAAjB,EACVC,IADU,CAEV,UAAAO,OAAO;AAAA,qBAAItB,WAAW,CAACa,OAAZ,CAAoB;AAAEC,gBAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,sBAAnB;AAAd,eAApB,EACVC,IADU,CAEV,UAAAQ,OAAO;AAAA,uBAAI7B,OAAO,CAACmB,OAAR,CAAgB;AAAEC,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,cAAf,EAA+B,aAA/B,EAA8C,gBAA9C,EAAgE,mBAAhE,EAAqF,oBAArF,CAAd;AAA0HK,kBAAAA,OAAO,EAAE,CAAC;AAACC,oBAAAA,KAAK,EAAEtB,QAAR;AAAkBgB,oBAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,mBAAD,EAA0G;AAACM,oBAAAA,KAAK,EAAEpB,WAAR;AAAqBc,oBAAAA,UAAU,EAAE,CAAC,gBAAD,EAAmB,sBAAnB;AAAjC,mBAA1G,EAAwL;AAACM,oBAAAA,KAAK,EAAElB,SAAR;AAAmBY,oBAAAA,UAAU,EAAE,CAAC,cAAD,EAAgB,sBAAhB,EAAuC,eAAvC,EAAwD,YAAxD,EAAsE,cAAtE,EAAsF,kBAAtF,CAA/B;AAA0IK,oBAAAA,OAAO,EAAC,CAAC;AAACC,sBAAAA,KAAK,EAAEhB,OAAR;AAAiBU,sBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf;AAA7B,qBAAD,EAAiE;AAACM,sBAAAA,KAAK,EAAEd,SAAR;AAAmBQ,sBAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,kBAAjB;AAA/B,qBAAjE,EAAuI;AAACM,sBAAAA,KAAK,EAAEZ,aAAR;AAAuBM,sBAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,sBAArB;AAAnC,qBAAvI;AAAlJ,mBAAxL;AAAnI,iBAAhB,EACVC,IADU,CAEV,UAAAS,OAAO;AAAA,yBAAIZ,GAAG,CAACa,IAAJ,CAAS,CAACT,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA4BG,OAA5B,EAAqCC,OAArC,EAA8CC,OAA9C,EAAuDC,OAAvD,CAAT,CAAJ;AAAA,iBAFG,CAAJ;AAAA,eAFG,CAAJ;AAAA,aAFG,CAAJ;AAAA,WAFG,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFG,CAAJ;AAAA,KAFR,EAsBCE,KAtBD,CAsBO,UAAAC,KAAK,EAAI;AAAEf,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBd,GAAG,CAACkB,IAAzB;AAAgC,KAtBlD;AAuBA,GAxBD,EAVsB,CAoCtB;;AACApC,EAAAA,GAAG,CAACqC,IAAJ,CAAS,WAAT,EAAsB,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAC/BmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASI,YAAvB,GAAsC,IAAlD;;AACJ,QAAG,CAACtB,GAAG,CAACkB,IAAJ,CAASI,YAAb,EACA;AACCrB,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,OAAO,CAACwC,MAAR,CAAevB,GAAG,CAACkB,IAAnB,EACCd,IADD,CACO,YAAM;AACZH,QAAAA,GAAG,CAACuB,IAAJ,CAAS,kBAAT;AACA,OAHD,EAICT,KAJD,CAIO,UAAAU,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EArCsB,CA0DtB;;AACA3C,EAAAA,GAAG,CAAC4C,GAAJ,CAAQ,eAAR,EAAyB,UAAC1B,GAAD,EAAMC,GAAN,EAAY;AACpCmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcrB,GAAG,CAACkB,IAAJ,CAASS,WAAvB,GAAqC,IAAjD;;AACA,QAAG,CAAC3B,GAAG,CAACkB,IAAJ,CAASS,WAAb,EACA;AACC1B,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACApB,MAAAA,GAAG,CAACa,IAAJ,CAASd,GAAG,CAACkB,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,OAAO,CAAC6C,MAAR,CACC;AAAEN,QAAAA,YAAY,EAAEtB,GAAG,CAACkB,IAAJ,CAASS,WAAzB;AAAsCE,QAAAA,WAAW,EAAE7B,GAAG,CAACkB,IAAJ,CAASY,UAA5D;AAAwEC,QAAAA,cAAc,EAAE/B,GAAG,CAACkB,IAAJ,CAASc,aAAjG;AAAgHC,QAAAA,iBAAiB,EAAEjC,GAAG,CAACkB,IAAJ,CAASgB,SAA5I;AAAuJC,QAAAA,kBAAkB,EAAEnC,GAAG,CAACkB,IAAJ,CAASkB;AAApL,OADD,EACmM;AAAEC,QAAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAEtC,GAAG,CAACuC,MAAJ,CAAWC;AAAxB;AAAT,OADnM,EAGCpC,IAHD,CAGM,YAAI;AACTH,QAAAA,GAAG,CAACuB,IAAJ,CAAS,sBAAT;AACA,OALD,EAMCR,KAND,CAMO,UAAAS,GAAG,EAAI;AACbxB,QAAAA,GAAG,CAACuB,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CAhFD,C,CAoFA;AACA",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Tramite = app.db.models.tramites;\r\n\tconst Empleado = app.db.models.empleados;\r\n\tconst Tipotramite = app.db.models.tipotramites;\r\n\tconst Documento = app.db.models.documentos;\r\n\tconst Cliente = app.db.models.clientes;\r\n\tconst Proveedor = app.db.models.proveedores;\r\n\tconst Tipodocumento = app.db.models.tipodocumentos;\r\n\r\n\t// get tramite\r\n\tapp.get('/tramites', (req, res) => {\r\n\t\tCliente.findAll({ attributes: ['cliente_id', 'cliente_nombre'] })\r\n\t\t.then(\r\n\t\t\tresult1 => Proveedor.findAll({ attributes: ['proveedor_id', 'proveedor_nombre'] })\r\n\t\t\t.then(\r\n\t\t\t\tresult2 => Tipodocumento.findAll({ attributes: ['tipodocumento_id', 'tipodocumento_nombre'] })\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult3 => Documento.findAll({ attributes: ['documento_id', 'documento_nro'], include:[{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\tresult4 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\r\n\t\t\t\t\t\t.then( \r\n\t\t\t\t\t\t\tresult5 => Tipotramite.findAll({ attributes: ['tipotramite_id', 'tipotramite_describe'] })\r\n\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\tresult6 => Tramite.findAll({ attributes: ['tramite_id', 'documento_id', 'empleado_id', 'tipotramite_id', 'tramite_fecsalida', 'tramite_fecregreso'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Tipotramite, attributes: ['tipotramite_id', 'tipotramite_describe']}, {model: Documento, attributes: ['documento_id','documento_tipoclipro','documento_nro', 'cliente_id', 'proveedor_id', 'tipodocumento_id'], include:[{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}]}] })\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\tresult7 => res.json([result1, result2, result3, result4, result5, result6, result7])\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t});\r\n\r\n\t// add tramite\r\n\tapp.post('/tramites', (req, res) => {\r\n      console.log(\"======>> \" + req.body.documento_id + \"\\n\")\r\n\t\tif(!req.body.documento_id)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tTramite.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Tramite Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// update tramite\r\n\tapp.put('/tramites/:id', (req, res)=>{\r\n\t\tconsole.log(\"======>> \" + req.body.documentoid + \"\\n\")\r\n\t\tif(!req.body.documentoid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tTramite.update(\r\n\t\t\t\t{ documento_id: req.body.documentoid, empleado_id: req.body.empleadoid, tipotramite_id: req.body.tipotramiteid, tramite_fecsalida: req.body.fecsalida, tramite_fecregreso: req.body.fecregreso }, { where: {tramite_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Documento Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n\r\n// result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n// .then( result4 => res.json([result, result2, result3, result4]) )"
      ]
    },
    "sourceType": "script",
    "mtime": 1547942869703
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\routes\\\\viajes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\routes\\viajes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\routes\\viajes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\routes\\viajes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\routes",
        "sourceFileName": "viajes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  var Carro = app.db.models.carros;\n  var Empleado = app.db.models.empleados;\n  var Lugar = app.db.models.lugares;\n  var Cliente = app.db.models.clientes;\n  var Viaje = app.db.models.viajes;\n  var Factura = app.db.models.facturas; // // get viaje por nro\n\n  app.get('/viajes/:id', function (req, res) {\n    var auxguia = JSON.stringify(req.params.id); // console.log(\"<<<<<<<GET CON PARAMETRO \" + JSON.stringify(req.params.id))\n\n    if (auxguia === '\"undefined\"') {\n      // console.log(\"<<<<<<<<<< Parametro undefined => todos \")\n      Carro.findAll({\n        attributes: ['carro_id', 'carro_placa'],\n        where: {\n          carro_estado: 1\n        },\n        order: [['carro_placa', 'ASC']]\n      }).then(function (result1) {\n        return Cliente.findAll({\n          attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'],\n          where: {\n            cliente_estado: 1\n          },\n          order: [['cliente_nombre', 'ASC']]\n        }).then(function (result2) {\n          return Empleado.findAll({\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'],\n            where: {\n              empleado_estado: 1\n            },\n            order: [['empleado_nombre', 'ASC']]\n          }).then(function (result3) {\n            return Lugar.findAll({\n              attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'],\n              where: {\n                lugar_estado: 1\n              },\n              order: [['lugar_distrito', 'ASC']]\n            }).then(function (result4) {\n              return Viaje.findAll({\n                attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'],\n                include: [{\n                  model: Empleado,\n                  attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n                }, {\n                  model: Lugar,\n                  attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']\n                }, {\n                  model: Carro,\n                  attributes: ['carro_id', 'carro_placa']\n                }, {\n                  model: Cliente,\n                  attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']\n                }],\n                order: [['viaje_fecsalida2', 'DESC']],\n                where: {\n                  viaje_estado: 1\n                }\n              }).then(function (result5) {\n                return Factura.findAll({\n                  attributes: ['factura_id', 'factura_nro'],\n                  where: {\n                    factura_estado: 1\n                  },\n                  order: [['factura_nro', 'DESC']]\n                }).then(function (result6) {\n                  return res.json([result1, result2, result3, result4, result5, result6]);\n                });\n              });\n            });\n          });\n        });\n      }).catch(function (error) {\n        res.status(412).json(req.body);\n      });\n    } else {\n      // console.log(\">>>>>>>>> Parametro definido >>>>>>>\")\n      Carro.findAll({\n        attributes: ['carro_id', 'carro_placa'],\n        where: {\n          carro_estado: 1\n        },\n        order: [['carro_placa', 'ASC']]\n      }).then(function (result1) {\n        return Cliente.findAll({\n          attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'],\n          where: {\n            cliente_estado: 1\n          },\n          order: [['cliente_nombre', 'ASC']]\n        }).then(function (result2) {\n          return Empleado.findAll({\n            attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'],\n            where: {\n              empleado_estado: 1\n            },\n            order: [['empleado_nombre', 'ASC']]\n          }).then(function (result3) {\n            return Lugar.findAll({\n              attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'],\n              where: {\n                lugar_estado: 1\n              },\n              order: [['lugar_distrito', 'ASC']]\n            }).then(function (result4) {\n              return Viaje.findAll({\n                attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'],\n                include: [{\n                  model: Empleado,\n                  attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']\n                }, {\n                  model: Lugar,\n                  attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']\n                }, {\n                  model: Carro,\n                  attributes: ['carro_id', 'carro_placa']\n                }, {\n                  model: Cliente,\n                  attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']\n                }],\n                order: [['viaje_fecsalida2', 'DESC']],\n                where: {\n                  viaje_grt: req.params.id,\n                  viaje_estado: 1\n                }\n              }).then(function (result5) {\n                return Factura.findAll({\n                  attributes: ['factura_id', 'factura_nro'],\n                  where: {\n                    factura_estado: 1\n                  },\n                  order: [['factura_nro', 'DESC']]\n                }).then(function (result6) {\n                  return res.json([result1, result2, result3, result4, result5, result6]);\n                });\n              });\n            });\n          });\n        });\n      }).catch(function (error) {\n        res.status(412).json(req.body);\n      });\n    }\n  }); // // get viaje\n  // app.get('/viajes', (req, res) => {\n  // \tconsole.log('------> SIMPLE GET')\n  // \tCarro.findAll({ attributes: ['carro_id', 'carro_placa'] })\n  // \t.then(\n  // \t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'] })\n  // \t\t.then(\n  // \t\t   result2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\n  // \t\t \t.then(\n  // \t\t\t   result3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'] })\n  // \t\t\t\t.then(\n  // \t\t\t\t   result4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugar_id', 'cliente_id', 'cliente2_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida', 'viaje_fecrecibido'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida', 'DESC']], where: {viaje_estado: 1} })\n  // \t\t\t\t\t.then(\n  // \t\t\t\t\t   result5 => res.json([result1, result2, result3, result4, result5])\n  // \t\t\t\t\t)\n  // \t\t\t\t)\n  // \t\t\t)\n  // \t\t)\n  // \t)\n  // \t.catch(error => { res.status(412).json(req.body) }) \n  // });\n  // add viaje\n\n  app.post('/viajes', function (req, res) {\n    // console.log(\"======>> \" + req.body.cliente_id + \"\\n\")\n    if (!req.body.cliente_id) {\n      res.status(400);\n      console.log(\"ERROR POST\");\n      res.json(req.body);\n    } else {\n      Viaje.create(req.body).then(function () {\n        res.send('Viaje Agregado');\n      }).catch(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  }); // update viaje\n\n  app.put('/viajes/:id', function (req, res) {\n    // console.log(\"======>> \" + req.body.clienteid + \"\\n\")\n    if (!req.body.clienteid) {\n      res.status(400);\n      console.log(\"ERROR PUT\");\n      res.json(req.body);\n    } else {\n      Viaje.update({\n        carro_id: req.body.carroid,\n        empleado_id: req.body.empleadoid,\n        lugarp_nombre: req.body.lugarp,\n        lugar_id: req.body.lugarid,\n        cliente_id: req.body.clienteid,\n        cliented_nombre: req.body.cliented,\n        viaje_grt: req.body.grt,\n        viaje_detalle: req.body.detalle,\n        viaje_fecsalida2: req.body.fecsalida2,\n        viaje_fecrecibido: req.body.fecrecibido,\n        viaje_factura: req.body.factura\n      }, {\n        where: {\n          viaje_id: req.params.id\n        }\n      }).then(function () {\n        res.send('Viaje Modificado');\n      }).error(function (err) {\n        res.send('error: ' + err);\n      });\n    }\n  });\n}; // result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\n// .then( result4 => res.json([result, result2, result3, result4]) )\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "viajes.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "Carro",
        "db",
        "models",
        "carros",
        "Empleado",
        "empleados",
        "Lugar",
        "lugares",
        "Cliente",
        "clientes",
        "Viaje",
        "viajes",
        "Factura",
        "facturas",
        "get",
        "req",
        "res",
        "auxguia",
        "JSON",
        "stringify",
        "params",
        "id",
        "findAll",
        "attributes",
        "where",
        "carro_estado",
        "order",
        "then",
        "result1",
        "cliente_estado",
        "result2",
        "empleado_estado",
        "result3",
        "lugar_estado",
        "result4",
        "include",
        "model",
        "viaje_estado",
        "result5",
        "factura_estado",
        "result6",
        "json",
        "catch",
        "error",
        "status",
        "body",
        "viaje_grt",
        "post",
        "cliente_id",
        "console",
        "log",
        "create",
        "send",
        "err",
        "put",
        "clienteid",
        "update",
        "carro_id",
        "carroid",
        "empleado_id",
        "empleadoid",
        "lugarp_nombre",
        "lugarp",
        "lugar_id",
        "lugarid",
        "cliented_nombre",
        "cliented",
        "grt",
        "viaje_detalle",
        "detalle",
        "viaje_fecsalida2",
        "fecsalida2",
        "viaje_fecrecibido",
        "fecrecibido",
        "viaje_factura",
        "factura",
        "viaje_id"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAG;AACtB,MAAMC,KAAK,GAAGD,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcC,MAA5B;AACA,MAAMC,QAAQ,GAAGL,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcG,SAA/B;AACA,MAAMC,KAAK,GAAGP,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcK,OAA5B;AACA,MAAMC,OAAO,GAAGT,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcO,QAA9B;AACA,MAAMC,KAAK,GAAGX,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcS,MAA5B;AACA,MAAMC,OAAO,GAAGb,GAAG,CAACE,EAAJ,CAAOC,MAAP,CAAcW,QAA9B,CANsB,CAQtB;;AACAd,EAAAA,GAAG,CAACe,GAAJ,CAAQ,aAAR,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,QAAIC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,MAAJ,CAAWC,EAA1B,CAAd,CADoC,CAEpC;;AACA,QAAIJ,OAAO,KAAK,aAAhB,EAA+B;AAC9B;AACAjB,MAAAA,KAAK,CAACsB,OAAN,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,QAAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SAAlD;AAAqEC,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,KAAhB,CAAD;AAA5E,OAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,eAAIpB,OAAO,CAACc,OAAR,CAAgB;AAAEC,UAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE,CAAd;AAAsGC,UAAAA,KAAK,EAAE;AAACK,YAAAA,cAAc,EAAE;AAAjB,WAA7G;AAAkIH,UAAAA,KAAK,EAAC,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxI,SAAhB,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,iBAAI1B,QAAQ,CAACkB,OAAT,CAAiB;AAAEC,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD,CAAd;AAAwFC,YAAAA,KAAK,EAAE;AAACO,cAAAA,eAAe,EAAE;AAAlB,aAA/F;AAAqHL,YAAAA,KAAK,EAAE,CAAC,CAAC,iBAAD,EAAoB,KAApB,CAAD;AAA5H,WAAjB,EACVC,IADU,CAEV,UAAAK,OAAO;AAAA,mBAAI1B,KAAK,CAACgB,OAAN,CAAc;AAAEC,cAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD,CAAd;AAAuFC,cAAAA,KAAK,EAAE;AAACS,gBAAAA,YAAY,EAAE;AAAf,eAA9F;AAAiHP,cAAAA,KAAK,EAAE,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxH,aAAd,EACVC,IADU,CAEV,UAAAO,OAAO;AAAA,qBAAIxB,KAAK,CAACY,OAAN,CAAc;AAAEC,gBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,aAAzB,EAAuC,eAAvC,EAAwD,UAAxD,EAAoE,YAApE,EAAkF,iBAAlF,EAAqG,WAArG,EAAkH,eAAlH,EAAmI,kBAAnI,EAAuJ,mBAAvJ,EAA4K,eAA5K,CAAd;AAA4MY,gBAAAA,OAAO,EAAE,CAAC;AAACC,kBAAAA,KAAK,EAAEhC,QAAR;AAAkBmB,kBAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,iBAAD,EAA0G;AAACa,kBAAAA,KAAK,EAAE9B,KAAR;AAAeiB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD;AAA3B,iBAA1G,EAA+M;AAACa,kBAAAA,KAAK,EAAEpC,KAAR;AAAeuB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,iBAA/M,EAAuQ;AAACa,kBAAAA,KAAK,EAAE5B,OAAR;AAAiBe,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE;AAA7B,iBAAvQ,CAArN;AAAmlBG,gBAAAA,KAAK,EAAE,CAAC,CAAC,kBAAD,EAAqB,MAArB,CAAD,CAA1lB;AAA0nBF,gBAAAA,KAAK,EAAE;AAACa,kBAAAA,YAAY,EAAE;AAAf;AAAjoB,eAAd,EACVV,IADU,CAEV,UAAAW,OAAO;AAAA,uBAAI1B,OAAO,CAACU,OAAR,CAAgB;AAAEC,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,aAAf,CAAd;AAA6CC,kBAAAA,KAAK,EAAE;AAACe,oBAAAA,cAAc,EAAE;AAAjB,mBAApD;AAAyEb,kBAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,CAAD;AAAhF,iBAAhB,EACVC,IADU,CAEV,UAAAa,OAAO;AAAA,yBAAIxB,GAAG,CAACyB,IAAJ,CAAS,CAACb,OAAD,EAAUE,OAAV,EAAmBE,OAAnB,EAA4BE,OAA5B,EAAqCI,OAArC,EAA8CE,OAA9C,CAAT,CAAJ;AAAA,iBAFG,CAAJ;AAAA,eAFG,CAAJ;AAAA,aAFG,CAAJ;AAAA,WAFG,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFR,EAmBCE,KAnBD,CAmBO,UAAAC,KAAK,EAAI;AAAE3B,QAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB1B,GAAG,CAAC8B,IAAzB;AAAgC,OAnBlD;AAoBA,KAtBD,MAuBK;AACJ;AACA7C,MAAAA,KAAK,CAACsB,OAAN,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,aAAb,CAAd;AAA2CC,QAAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SAAlD;AAAqEC,QAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,KAAhB,CAAD;AAA5E,OAAd,EACCC,IADD,CAEC,UAAAC,OAAO;AAAA,eAAIpB,OAAO,CAACc,OAAR,CAAgB;AAAEC,UAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE,CAAd;AAAsGC,UAAAA,KAAK,EAAE;AAACK,YAAAA,cAAc,EAAE;AAAjB,WAA7G;AAAkIH,UAAAA,KAAK,EAAC,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxI,SAAhB,EACVC,IADU,CAEV,UAAAG,OAAO;AAAA,iBAAI1B,QAAQ,CAACkB,OAAT,CAAiB;AAAEC,YAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD,CAAd;AAAwFC,YAAAA,KAAK,EAAE;AAACO,cAAAA,eAAe,EAAE;AAAlB,aAA/F;AAAqHL,YAAAA,KAAK,EAAE,CAAC,CAAC,iBAAD,EAAoB,KAApB,CAAD;AAA5H,WAAjB,EACVC,IADU,CAEV,UAAAK,OAAO;AAAA,mBAAI1B,KAAK,CAACgB,OAAN,CAAc;AAAEC,cAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD,CAAd;AAAuFC,cAAAA,KAAK,EAAE;AAACS,gBAAAA,YAAY,EAAE;AAAf,eAA9F;AAAiHP,cAAAA,KAAK,EAAE,CAAC,CAAC,gBAAD,EAAmB,KAAnB,CAAD;AAAxH,aAAd,EACVC,IADU,CAEV,UAAAO,OAAO;AAAA,qBAAIxB,KAAK,CAACY,OAAN,CAAc;AAAEC,gBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,aAAzB,EAAuC,eAAvC,EAAwD,UAAxD,EAAoE,YAApE,EAAkF,iBAAlF,EAAqG,WAArG,EAAkH,eAAlH,EAAmI,kBAAnI,EAAuJ,mBAAvJ,EAA4K,eAA5K,CAAd;AAA4MY,gBAAAA,OAAO,EAAE,CAAC;AAACC,kBAAAA,KAAK,EAAEhC,QAAR;AAAkBmB,kBAAAA,UAAU,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,EAAsD,iBAAtD;AAA9B,iBAAD,EAA0G;AAACa,kBAAAA,KAAK,EAAE9B,KAAR;AAAeiB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,gBAAb,EAA+B,iBAA/B,EAAkD,oBAAlD;AAA3B,iBAA1G,EAA+M;AAACa,kBAAAA,KAAK,EAAEpC,KAAR;AAAeuB,kBAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,aAAZ;AAA3B,iBAA/M,EAAuQ;AAACa,kBAAAA,KAAK,EAAE5B,OAAR;AAAiBe,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,gBAAjC,EAAmD,gBAAnD,EAAqE,gBAArE;AAA7B,iBAAvQ,CAArN;AAAmlBG,gBAAAA,KAAK,EAAE,CAAC,CAAC,kBAAD,EAAqB,MAArB,CAAD,CAA1lB;AAA0nBF,gBAAAA,KAAK,EAAE;AAACsB,kBAAAA,SAAS,EAAE/B,GAAG,CAACK,MAAJ,CAAWC,EAAvB;AAA2BgB,kBAAAA,YAAY,EAAE;AAAzC;AAAjoB,eAAd,EACVV,IADU,CAEV,UAAAW,OAAO;AAAA,uBAAI1B,OAAO,CAACU,OAAR,CAAgB;AAAEC,kBAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,aAAf,CAAd;AAA6CC,kBAAAA,KAAK,EAAE;AAACe,oBAAAA,cAAc,EAAE;AAAjB,mBAApD;AAAyEb,kBAAAA,KAAK,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,CAAD;AAAhF,iBAAhB,EACVC,IADU,CAEV,UAAAa,OAAO;AAAA,yBAAIxB,GAAG,CAACyB,IAAJ,CAAS,CAACb,OAAD,EAAUE,OAAV,EAAmBE,OAAnB,EAA4BE,OAA5B,EAAqCI,OAArC,EAA8CE,OAA9C,CAAT,CAAJ;AAAA,iBAFG,CAAJ;AAAA,eAFG,CAAJ;AAAA,aAFG,CAAJ;AAAA,WAFG,CAAJ;AAAA,SAFG,CAAJ;AAAA,OAFR,EAmBCE,KAnBD,CAmBO,UAAAC,KAAK,EAAI;AAAE3B,QAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB1B,GAAG,CAAC8B,IAAzB;AAAgC,OAnBlD;AAoBA;AACD,GAjDD,EATsB,CA4DtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA9C,EAAAA,GAAG,CAACgD,IAAJ,CAAS,SAAT,EAAoB,UAAChC,GAAD,EAAMC,GAAN,EAAc;AAC7B;AACJ,QAAG,CAACD,GAAG,CAAC8B,IAAJ,CAASG,UAAb,EACA;AACChC,MAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAlC,MAAAA,GAAG,CAACyB,IAAJ,CAAS1B,GAAG,CAAC8B,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,KAAK,CAACyC,MAAN,CAAapC,GAAG,CAAC8B,IAAjB,EACClB,IADD,CACO,YAAM;AACZX,QAAAA,GAAG,CAACoC,IAAJ,CAAS,gBAAT;AACA,OAHD,EAICV,KAJD,CAIO,UAAAW,GAAG,EAAI;AACbrC,QAAAA,GAAG,CAACoC,IAAJ,CAAS,YAAYC,GAArB;AACA,OAND;AAOA;AACD,GAlBD,EAnFsB,CAuGtB;;AACAtD,EAAAA,GAAG,CAACuD,GAAJ,CAAQ,aAAR,EAAuB,UAACvC,GAAD,EAAMC,GAAN,EAAY;AAClC;AACA,QAAG,CAACD,GAAG,CAAC8B,IAAJ,CAASU,SAAb,EACA;AACCvC,MAAAA,GAAG,CAAC4B,MAAJ,CAAW,GAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAlC,MAAAA,GAAG,CAACyB,IAAJ,CAAS1B,GAAG,CAAC8B,IAAb;AACA,KALD,MAOA;AACCnC,MAAAA,KAAK,CAAC8C,MAAN,CACC;AAAEC,QAAAA,QAAQ,EAAE1C,GAAG,CAAC8B,IAAJ,CAASa,OAArB;AAA8BC,QAAAA,WAAW,EAAE5C,GAAG,CAAC8B,IAAJ,CAASe,UAApD;AAAgEC,QAAAA,aAAa,EAAE9C,GAAG,CAAC8B,IAAJ,CAASiB,MAAxF;AAAgGC,QAAAA,QAAQ,EAAEhD,GAAG,CAAC8B,IAAJ,CAASmB,OAAnH;AAA4HhB,QAAAA,UAAU,EAAEjC,GAAG,CAAC8B,IAAJ,CAASU,SAAjJ;AAA4JU,QAAAA,eAAe,EAAElD,GAAG,CAAC8B,IAAJ,CAASqB,QAAtL;AAAgMpB,QAAAA,SAAS,EAAE/B,GAAG,CAAC8B,IAAJ,CAASsB,GAApN;AAAyNC,QAAAA,aAAa,EAAErD,GAAG,CAAC8B,IAAJ,CAASwB,OAAjP;AAA0PC,QAAAA,gBAAgB,EAAEvD,GAAG,CAAC8B,IAAJ,CAAS0B,UAArR;AAAiSC,QAAAA,iBAAiB,EAAEzD,GAAG,CAAC8B,IAAJ,CAAS4B,WAA7T;AAA0UC,QAAAA,aAAa,EAAE3D,GAAG,CAAC8B,IAAJ,CAAS8B;AAAlW,OADD,EAC8W;AAAEnD,QAAAA,KAAK,EAAE;AAACoD,UAAAA,QAAQ,EAAE7D,GAAG,CAACK,MAAJ,CAAWC;AAAtB;AAAT,OAD9W,EAGCM,IAHD,CAGM,YAAI;AACTX,QAAAA,GAAG,CAACoC,IAAJ,CAAS,kBAAT;AACA,OALD,EAMCT,KAND,CAMO,UAAAU,GAAG,EAAI;AACbrC,QAAAA,GAAG,CAACoC,IAAJ,CAAS,YAAYC,GAArB;AACA,OARD;AASA;AACD,GApBD;AAqBA,CA7HD,C,CAiIA;AACA",
      "sourceRoot": "E:\\dassis\\sis\\src\\routes",
      "sourcesContent": [
        "module.exports = app =>{\r\n\tconst Carro = app.db.models.carros;\r\n\tconst Empleado = app.db.models.empleados;\r\n\tconst Lugar = app.db.models.lugares;\r\n\tconst Cliente = app.db.models.clientes;\r\n\tconst Viaje = app.db.models.viajes;\r\n\tconst Factura = app.db.models.facturas;\r\n\r\n\t// // get viaje por nro\r\n\tapp.get('/viajes/:id', (req, res) => {\r\n\t\tvar auxguia = JSON.stringify(req.params.id)\r\n\t\t// console.log(\"<<<<<<<GET CON PARAMETRO \" + JSON.stringify(req.params.id))\r\n\t\tif (auxguia === '\"undefined\"') {\r\n\t\t\t// console.log(\"<<<<<<<<<< Parametro undefined => todos \")\r\n\t\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1}, order: [['carro_placa', 'ASC']] })\r\n\t\t\t.then(\r\n\t\t\t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'], where: {cliente_estado: 1}, order:[['cliente_nombre', 'ASC']] })\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'], where: {empleado_estado: 1}, order: [['empleado_nombre', 'ASC']] })\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\tresult3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'], where: {lugar_estado: 1}, order: [['lugar_distrito', 'ASC']] })\r\n\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\tresult4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id','lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida2', 'DESC']], where: {viaje_estado: 1} })\r\n\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\tresult5 => Factura.findAll({ attributes: ['factura_id', 'factura_nro'], where: {factura_estado: 1}, order: [['factura_nro', 'DESC']] })\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\tresult6 => res.json([result1, result2, result3, result4, result5, result6])\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t\t}\r\n\t\telse {\r\n\t\t\t// console.log(\">>>>>>>>> Parametro definido >>>>>>>\")\r\n\t\t\tCarro.findAll({ attributes: ['carro_id', 'carro_placa'], where: {carro_estado: 1}, order: [['carro_placa', 'ASC']] })\r\n\t\t\t.then(\r\n\t\t\t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'], where: {cliente_estado: 1}, order:[['cliente_nombre', 'ASC']] })\r\n\t\t\t\t.then(\r\n\t\t\t\t\tresult2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'], where: {empleado_estado: 1}, order: [['empleado_nombre', 'ASC']] })\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\tresult3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'], where: {lugar_estado: 1}, order: [['lugar_distrito', 'ASC']] })\r\n\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\tresult4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id','lugarp_nombre', 'lugar_id', 'cliente_id', 'cliented_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida2', 'viaje_fecrecibido', 'viaje_factura'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida2', 'DESC']], where: {viaje_grt: req.params.id, viaje_estado: 1} })\r\n\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\tresult5 => Factura.findAll({ attributes: ['factura_id', 'factura_nro'], where: {factura_estado: 1}, order: [['factura_nro', 'DESC']] })\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\tresult6 => res.json([result1, result2, result3, result4, result5, result6])\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.catch(error => { res.status(412).json(req.body) }) \r\n\t\t}\r\n\t});\r\n\r\n\t// // get viaje\r\n\t// app.get('/viajes', (req, res) => {\r\n\t// \tconsole.log('------> SIMPLE GET')\r\n\t// \tCarro.findAll({ attributes: ['carro_id', 'carro_placa'] })\r\n\t// \t.then(\r\n\t// \t\tresult1 => Cliente.findAll({ attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc'] })\r\n\t// \t\t.then(\r\n\t// \t\t   result2 => Empleado.findAll({ attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat'] })\r\n\t// \t\t \t.then(\r\n\t// \t\t\t   result3 => Lugar.findAll({ attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento'] })\r\n\t// \t\t\t\t.then(\r\n\t// \t\t\t\t   result4 => Viaje.findAll({ attributes: ['viaje_id', 'carro_id', 'empleado_id', 'lugar_id', 'cliente_id', 'cliente2_nombre', 'viaje_grt', 'viaje_detalle', 'viaje_fecsalida', 'viaje_fecrecibido'], include: [{model: Empleado, attributes: ['empleado_id', 'empleado_nombre', 'empleado_apepat', 'empleado_apemat']}, {model: Lugar, attributes: ['lugar_id', 'lugar_distrito', 'lugar_provincia', 'lugar_departamento']}, {model: Carro, attributes: ['carro_id','carro_placa']}, {model: Cliente, attributes: ['cliente_id', 'cliente_nombre', 'cliente_apepat', 'cliente_apemat', 'cliente_dniruc']}], order: [['viaje_fecsalida', 'DESC']], where: {viaje_estado: 1} })\r\n\t// \t\t\t\t\t.then(\r\n\t// \t\t\t\t\t   result5 => res.json([result1, result2, result3, result4, result5])\r\n\t// \t\t\t\t\t)\r\n\t// \t\t\t\t)\r\n\t// \t\t\t)\r\n\t// \t\t)\r\n\t// \t)\r\n\t// \t.catch(error => { res.status(412).json(req.body) }) \r\n\t// });\r\n\r\n\t// add viaje\r\n\tapp.post('/viajes', (req, res) => {\r\n      // console.log(\"======>> \" + req.body.cliente_id + \"\\n\")\r\n\t\tif(!req.body.cliente_id)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR POST\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tViaje.create(req.body)\r\n\t\t\t.then( () => { \r\n\t\t\t\tres.send('Viaje Agregado')\r\n\t\t\t})\r\n\t\t\t.catch(err => { \r\n\t\t\t\tres.send('error: ' + err)\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n\t// update viaje\r\n\tapp.put('/viajes/:id', (req, res)=>{\r\n\t\t// console.log(\"======>> \" + req.body.clienteid + \"\\n\")\r\n\t\tif(!req.body.clienteid)\r\n\t\t{\r\n\t\t\tres.status(400)\r\n\t\t\tconsole.log(\"ERROR PUT\")\r\n\t\t\tres.json(req.body)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tViaje.update(\r\n\t\t\t\t{ carro_id: req.body.carroid, empleado_id: req.body.empleadoid, lugarp_nombre: req.body.lugarp, lugar_id: req.body.lugarid, cliente_id: req.body.clienteid, cliented_nombre: req.body.cliented, viaje_grt: req.body.grt, viaje_detalle: req.body.detalle, viaje_fecsalida2: req.body.fecsalida2, viaje_fecrecibido: req.body.fecrecibido, viaje_factura: req.body.factura }, { where: {viaje_id: req.params.id} }\r\n\t\t\t)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tres.send('Viaje Modificado');\r\n\t\t\t})\r\n\t\t\t.error(err => {\r\n\t\t\t\tres.send('error: ' + err);\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n\r\n// result3 => Tramite.findAll({ attributes: ['documento_id', 'tipodocumento_id', 'documento_tipoclipro', 'cliente_id', 'proveedor_id', 'documento_nro', 'documento_feccrea', 'documento_pago', 'documento_pagoTotal', 'documento_detalle', 'documento_feccan'], include: [{model: Cliente, attributes: ['cliente_id', 'cliente_nombre']}, {model: Proveedor, attributes: ['proveedor_id', 'proveedor_nombre']}, {model: Tipodocumento, attributes: ['tipodocumento_id', 'tipodocumento_nombre']}] })\r\n// .then( result4 => res.json([result, result2, result3, result4]) )"
      ]
    },
    "sourceType": "script",
    "mtime": 1554842760682
  },
  "{\"sourceRoot\":\"E:\\\\dassis\\\\sis\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\dassis\\\\sis\",\"filename\":\"E:\\\\dassis\\\\sis\\\\src\\\\libs\\\\boot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\dassis\\\\sis\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\dassis\\sis\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\dassis\\sis",
      "filename": "E:\\dassis\\sis\\src\\libs\\boot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\dassis\\sis",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\dassis\\sis\\src\\libs\\boot.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\dassis\\sis\\src\\libs\\boot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\dassis\\sis\\src\\libs",
        "sourceFileName": "boot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.db.sequelize.sync().done(function () {\n    app.listen(app.get('port'), function () {\n      console.log('server escuchando in ' + app.get('port'));\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb3QuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImRiIiwic2VxdWVsaXplIiwic3luYyIsImRvbmUiLCJsaXN0ZW4iLCJnZXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFJO0FBQ3ZCQSxFQUFBQSxHQUFHLENBQUNDLEVBQUosQ0FBT0MsU0FBUCxDQUFpQkMsSUFBakIsR0FBd0JDLElBQXhCLENBQTZCLFlBQUk7QUFDaENKLElBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXTCxHQUFHLENBQUNNLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUNqQ0MsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQTBCUixHQUFHLENBQUNNLEdBQUosQ0FBUSxNQUFSLENBQXRDO0FBQ0EsS0FGRDtBQUdBLEdBSkQ7QUFLQSxDQU5EIiwic291cmNlUm9vdCI6IkU6XFxkYXNzaXNcXHNpc1xcc3JjXFxsaWJzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cdGFwcC5kYi5zZXF1ZWxpemUuc3luYygpLmRvbmUoKCk9PntcclxuXHRcdGFwcC5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCAoKSA9PiB7XHJcblx0XHRcdGNvbnNvbGUubG9nKCdzZXJ2ZXIgZXNjdWNoYW5kbyBpbiAnICsgYXBwLmdldCgncG9ydCcpKTtcclxuXHRcdH0pO1xyXG5cdH0pO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "boot.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "db",
        "sequelize",
        "sync",
        "done",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACvBA,EAAAA,GAAG,CAACC,EAAJ,CAAOC,SAAP,CAAiBC,IAAjB,GAAwBC,IAAxB,CAA6B,YAAI;AAChCJ,IAAAA,GAAG,CAACK,MAAJ,CAAWL,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BR,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAAtC;AACA,KAFD;AAGA,GAJD;AAKA,CAND",
      "sourceRoot": "E:\\dassis\\sis\\src\\libs",
      "sourcesContent": [
        "module.exports = app => {\r\n\tapp.db.sequelize.sync().done(()=>{\r\n\t\tapp.listen(app.get('port'), () => {\r\n\t\t\tconsole.log('server escuchando in ' + app.get('port'));\r\n\t\t});\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550864512022
  }
}